var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.726,1,1.417]],["body/components/AppComponent.html",[0,1.208,1,2.487,2,2.136,3,0.554,4,0.489,5,2.048,6,1.843,7,2.048,8,0.427,9,3.02,10,1.843,11,2.709,12,2.571,13,1.939,14,1.939,15,5.164,16,2.626,17,4.678,18,2.626,19,4.678,20,0.554,21,0.891,22,4.273,23,0.554,24,0.037,25,1.037,26,1.037,27,1.375,28,4.678,29,1.375,30,3.649,31,0.71,32,0.554,33,2.605,34,0.554,35,0.369,36,4.678,37,4.678,38,1.666,39,2.626,40,2.626,41,1.375,42,3.057,43,2.048,44,1.771,45,2.048,46,1.512,47,1.843,48,2.048,49,1.666,50,2.048,51,2.048,52,1.666,53,1.666,54,2.048,55,1.666,56,2.048,57,2.048,58,1.666,59,1.252,60,1.843,61,2.048,62,0.027,63,0.027]],["title/modules/AppRoutingModule.html",[64,1.952,65,2.215]],["body/modules/AppRoutingModule.html",[3,0.677,4,0.598,8,0.522,14,1.849,24,0.037,31,0.804,32,0.677,33,3.185,34,0.677,35,0.451,62,0.031,63,0.031,65,3.781,66,2.504,67,4.461,68,4.461,69,4.383,70,5.296,71,5.649,72,1.53,73,4.461,74,3.185]],["title/interfaces/AuthResponse.html",[75,0.591,76,1.952]],["body/interfaces/AuthResponse.html",[3,0.415,4,0.366,8,0.32,13,1.133,20,0.415,21,0.733,23,0.677,24,0.038,25,1.626,31,0.775,32,0.415,34,0.415,35,0.276,62,0.023,63,0.023,75,0.733,76,2.805,77,1.248,78,1.952,79,1.248,80,3.187,81,2.211,82,3.187,83,4.502,84,3.187,85,1.267,86,2.418,87,4.382,88,1.897,89,1.203,90,1.133,91,1.38,92,1.945,93,1.38,94,2.577,95,1.133,96,2.252,97,2.262,98,2.262,99,2.262,100,2.252,101,2.262,102,2.262,103,1.72,104,2.262,105,1.945,106,2.262,107,2.262,108,1.952,109,2.262,110,2.262,111,1.248,112,2.262,113,1.952,114,2.262,115,2.262,116,1.945,117,1.38,118,1.952,119,1.38,120,1.952,121,2.262,122,1.945,123,2.805,124,2.262,125,2.262,126,3.187,127,2.262,128,2.194,129,2.262,130,3.884,131,2.262,132,2.262,133,1.248,134,1.321,135,1.952,136,2.262,137,1.952,138,2.262,139,2.262,140,2.252,141,2.262,142,1.203,143,2.262,144,1.321,145,2.262,146,2.262,147,0.64,148,1.759,149,1.945,150,1.596,151,1.38,152,2.262,153,2.262,154,2.262]],["title/interfaces/BrnButtonConfig.html",[75,0.591,155,1.742]],["body/interfaces/BrnButtonConfig.html",[3,0.58,4,0.512,8,0.448,20,0.58,21,0.917,23,0.801,24,0.037,26,1.369,31,0.731,32,0.58,34,0.801,62,0.028,63,0.028,72,1.652,75,0.728,77,1.745,85,1.086,144,1.652,147,0.894,150,1.583,155,3.109,156,1.745,157,1.44,158,1.929,159,2.404,160,2.152,161,3.205,162,5.276,163,5.276,164,3.821,165,3.986,166,2.404,167,2.145,168,3.162,169,3.162,170,3.766,171,3.439,172,3.162,173,3.986,174,3.162,175,3.821,176,3.821,177,2.404,178,2.404,179,3.821,180,1.929]],["title/interfaces/ButtonClickEvent.html",[75,0.591,181,1.952]],["body/interfaces/ButtonClickEvent.html",[0,0.931,3,0.435,4,0.384,6,1.446,8,0.335,11,1.308,14,1.187,16,1.608,18,1.608,20,0.435,21,0.758,23,0.788,24,0.037,25,1.299,26,1.131,27,2.025,31,0.694,32,0.435,34,0.75,35,0.289,46,1.187,47,1.446,62,0.023,63,0.023,72,0.982,75,0.545,77,1.308,85,1.404,134,0.982,144,0.982,147,0.67,157,1.723,160,1.079,161,1.608,166,1.802,180,1.446,181,2.503,182,1.446,183,1.802,184,2.454,185,4.297,186,3.264,187,2.841,188,2.841,189,2.37,190,3.784,191,3.293,192,2.37,193,3.293,194,2.37,195,2.567,196,2.009,197,1.802,198,2.37,199,2.37,200,2.503,201,2.37,202,1.608,203,1.802,204,1.608,205,1.608,206,1.608,207,1.608,208,1.608,209,1.187,210,2.045,211,1.802,212,1.608,213,1.608,214,2.234,215,1.608,216,2.37,217,2.37,218,2.37,219,1.446,220,1.802,221,2.37,222,2.37,223,2.045,224,3.536,225,1.802,226,2.37,227,3.293,228,2.37,229,3.264,230,3.293,231,2.37,232,2.37,233,2.37,234,2.37,235,2.37,236,1.079,237,2.37,238,2.045,239,2.37,240,2.37,241,2.045,242,2.37,243,2.37,244,1.446,245,1.446,246,2.045,247,2.37,248,2.37,249,2.045,250,2.37,251,2.045,252,3.293,253,2.37,254,2.37,255,2.37,256,2.37,257,2.37,258,2.37,259,2.37,260,2.37,261,2.37,262,2.37,263,1.608,264,2.37,265,2.37,266,2.37,267,2.37,268,2.37,269,2.37]],["title/components/ButtonComponent.html",[0,0.726,46,1.286]],["body/components/ButtonComponent.html",[0,0.864,1,0.903,2,1.386,3,0.3,4,0.265,5,1.11,6,1.532,7,1.11,8,0.232,10,0.999,11,2.312,12,1.686,14,1.257,16,1.703,18,1.703,20,0.3,21,0.578,23,0.745,24,0.037,25,0.562,26,1.554,27,2.163,29,2.203,31,0.56,32,0.3,34,0.628,35,0.2,38,0.903,39,1.703,40,1.703,41,0.745,42,2.324,43,1.11,44,1.532,45,1.11,46,1.716,47,1.864,48,1.11,49,0.903,50,1.11,51,1.11,52,0.903,53,0.903,54,1.11,55,0.903,56,1.11,57,1.11,58,0.903,59,0.678,60,0.999,61,1.11,62,0.018,63,0.018,72,0.678,75,0.377,85,0.862,111,1.386,134,0.678,142,0.948,144,0.678,147,0.463,157,1.56,160,1.391,161,2.073,166,1.244,180,1.532,181,1.244,182,2.966,183,1.244,184,2.241,185,2.511,186,1.412,187,2.636,188,2.167,189,1.637,190,4.297,191,3.055,192,1.637,193,3.055,194,1.637,195,2.073,196,1.864,197,1.244,198,1.637,199,1.637,200,2.323,201,1.637,202,1.11,203,1.244,204,1.11,205,1.11,206,1.11,207,1.11,208,1.11,209,0.82,210,1.412,211,1.244,212,1.11,213,1.11,214,1.703,215,1.703,216,2.511,217,2.511,218,2.511,219,1.532,220,2.323,221,1.637,222,3.055,223,2.636,224,3.741,225,2.81,226,2.511,227,3.427,228,3.696,229,2.636,230,3.901,231,3.696,232,3.055,233,2.511,234,3.055,235,3.055,236,1.908,237,3.427,238,1.412,239,1.637,240,1.637,241,1.412,242,1.637,243,1.637,244,0.999,245,0.999,246,1.412,247,1.637,248,1.637,249,1.412,250,1.637,251,1.412,252,2.511,253,1.637,254,1.637,255,1.637,256,1.637,257,1.637,258,1.637,259,1.637,260,1.637,261,2.511,262,3.055,263,2.073,264,1.637,265,1.637,266,1.637,267,1.637,268,1.637,269,1.637,270,3.035,271,2.511,272,2.511,273,1.978,274,1.978,275,1.532,276,3.035,277,3.035,278,3.035,279,3.035,280,3.035,281,1.978,282,1.978,283,1.978,284,1.978,285,1.978,286,1.978,287,1.978,288,1.978,289,1.978,290,1.978,291,1.978]],["title/components/ConfirmationModalComponent.html",[0,0.726,49,1.417]],["body/components/ConfirmationModalComponent.html",[0,0.982,1,1.118,2,1.626,3,0.372,4,0.328,5,1.375,6,1.237,7,1.375,8,0.287,10,1.237,11,2.464,12,2.234,14,1.475,16,1.999,18,1.999,20,0.372,21,0.678,22,4.048,23,0.54,24,0.037,26,1.533,27,2.033,29,2.157,31,0.637,32,0.372,34,0.372,35,0.247,38,1.118,39,1.999,40,1.999,41,0.923,42,2.585,43,1.375,44,1.439,45,1.375,46,1.908,47,1.798,48,1.375,49,2.103,50,2.956,51,1.375,52,1.118,53,1.118,54,1.375,55,1.118,56,1.375,57,1.375,58,1.118,59,0.84,60,1.237,61,1.375,62,0.021,63,0.021,79,2.405,103,3.077,111,1.626,142,1.112,147,0.833,187,3.492,188,2.995,195,2.355,200,2.639,202,1.375,224,3.799,229,1.749,236,1.342,263,2.585,271,2.946,272,2.946,292,4.782,293,4.125,294,2.027,295,3.56,296,3.56,297,3.56,298,4.195,299,4.195,300,4.892,301,4.048,302,4.605,303,4.605,304,4.195,305,4.195,306,3.56,307,2.449,308,2.449,309,2.449,310,2.449,311,3.56,312,2.449,313,3.56,314,2.449,315,5.104,316,2.449,317,2.449,318,3.56,319,2.449,320,3.56,321,2.449,322,2.449,323,2.449]],["title/directives/HlmButtonDirective.html",[41,1.169,59,1.064]],["body/directives/HlmButtonDirective.html",[3,0.346,4,0.305,8,0.267,10,1.15,11,1.541,20,0.346,21,0.643,23,0.675,24,0.037,25,1.143,26,1.561,27,1.874,29,1.94,31,0.721,32,0.346,34,0.61,35,0.48,41,1.272,44,0.781,58,1.04,59,1.158,60,2.245,62,0.02,63,0.02,72,0.781,85,0.647,111,1.541,134,1.706,142,0.711,156,2.414,157,1.992,158,2.669,160,1.94,161,2.889,167,1.895,168,2.793,178,2.53,180,1.704,195,2.496,197,1.433,204,1.278,205,2.257,206,1.278,207,2.257,208,1.278,212,1.895,213,1.278,214,1.278,215,1.895,220,3.397,224,3.715,225,2.987,263,1.895,275,1.15,324,1.433,325,3.375,326,4.021,327,4.021,328,4.447,329,4.021,330,4.021,331,3.375,332,3.375,333,2.278,334,1.885,335,4.021,336,2.278,337,4.021,338,3.375,339,3.375,340,3.375,341,3.375,342,3.375,343,2.278,344,2.278,345,3.375,346,2.278,347,2.793,348,2.278,349,3.375,350,2.278,351,2.278,352,2.793,353,2.793,354,1.885,355,1.885,356,2.278,357,1.885,358,1.885,359,1.885,360,1.885,361,1.885,362,2.793,363,1.885,364,3.328,365,3.328,366,1.885,367,1.885,368,1.885,369,1.885,370,3.175,371,1.885,372,2.793,373,3.328,374,2.871,375,2.793,376,3.328,377,1.885,378,1.626,379,1.885,380,1.885,381,1.885,382,1.885,383,3.328,384,3.328,385,3.93,386,3.93,387,1.885,388,1.885,389,2.793,390,3.68,391,2.793,392,1.885,393,1.885,394,2.41,395,1.885,396,3.68,397,3.328,398,1.885,399,3.328,400,1.885,401,1.626,402,1.626,403,1.885,404,1.885,405,1.885,406,2.278,407,2.278]],["title/modules/HlmButtonModule.html",[64,1.952,196,1.567]],["body/modules/HlmButtonModule.html",[3,0.618,4,0.545,8,0.477,14,2.076,24,0.036,31,0.76,32,0.618,34,0.824,35,0.411,38,1.858,59,2.128,62,0.029,63,0.029,64,2.56,66,2.285,69,4.146,74,3.876,156,1.858,157,1.534,169,4.146,196,3.03,358,3.368,408,2.56,409,3.368,410,2.56,411,2.906,412,3.368,413,3.368,414,3.368,415,4.146,416,3.368,417,3.368,418,4.07,419,5.429]],["title/components/LoginPageComponent.html",[0,0.726,52,1.417]],["body/components/LoginPageComponent.html",[0,0.661,1,0.604,2,1.005,3,0.201,4,0.177,5,0.743,6,0.668,7,0.743,8,0.155,10,0.668,11,1.996,12,1.667,14,0.912,16,1.235,18,1.235,20,0.201,21,0.419,23,0.634,24,0.038,25,1.33,26,1.33,27,1.763,29,1.995,31,0.689,32,0.334,34,0.201,35,0.134,38,0.604,39,1.235,40,1.235,41,0.499,42,1.846,43,0.743,44,0.968,45,0.743,46,1.363,47,1.111,48,0.743,49,1.502,50,2.211,51,0.743,52,1.502,53,2.193,54,0.743,55,0.604,56,0.743,57,0.743,58,0.604,59,0.454,60,0.668,61,0.743,62,0.013,63,0.013,72,1.252,81,1.289,86,2.137,88,1.304,95,0.548,103,0.833,108,2.016,111,1.005,128,2.334,130,3.429,134,1.556,142,1.304,144,0.968,148,1.667,166,0.833,180,1.843,200,1.776,202,0.743,209,0.912,215,1.235,236,1.763,246,2.016,249,1.571,251,1.571,263,2.627,293,0.945,301,1.821,370,1.571,394,1.571,420,4.427,421,4.427,422,1.095,423,2.722,424,2.823,425,2.2,426,2.2,427,3.651,428,2.823,429,3.289,430,2.823,431,2.823,432,2.823,433,2.823,434,1.502,435,2.823,436,2.823,437,3.289,438,3.289,439,3.289,440,3.289,441,3.289,442,3.289,443,3.289,444,1.323,445,1.846,446,2.2,447,1.323,448,1.323,449,1.323,450,2.2,451,3.289,452,2.2,453,1.323,454,2.756,455,1.323,456,1.323,457,1.323,458,1.323,459,2.2,460,1.323,461,1.323,462,1.323,463,2.2,464,2.751,465,3.289,466,2.2,467,2.2,468,1.323,469,1.323,470,2.2,471,1.323,472,1.323,473,1.323,474,1.323,475,1.323,476,1.323,477,1.323,478,1.323,479,1.323,480,1.095,481,1.323,482,1.323,483,0.945,484,1.323,485,1.323,486,2.2,487,2.2,488,2.2,489,1.323,490,1.323,491,1.323,492,2.2,493,1.323,494,2.2,495,1.323,496,2.823,497,3.289,498,2.2,499,1.323,500,1.323,501,1.323,502,2.2,503,1.585,504,1.323,505,2.2,506,1.323,507,1.323,508,0.743,509,1.323,510,1.323,511,2.2,512,2.823,513,1.323,514,1.323,515,2.823,516,2.823,517,1.323,518,2.2,519,1.323,520,1.323,521,2.2,522,3.289,523,0.604,524,1.323,525,0.743,526,1.323,527,1.323,528,0.743,529,1.323,530,2.823,531,2.2,532,2.2,533,1.585,534,1.323,535,1.821,536,1.323,537,1.821,538,4.176,539,1.323,540,1.323,541,1.323,542,1.323,543,2.2,544,1.323,545,1.323,546,1.095,547,1.323,548,1.323,549,1.323,550,1.323,551,0.743,552,1.323,553,1.095,554,1.323,555,0.743,556,1.323,557,3.289,558,2.2,559,3.289,560,2.722,561,2.2,562,2.2,563,3.94,564,2.2,565,2.2,566,2.2,567,2.2,568,2.2,569,2.2,570,2.2,571,2.2,572,2.2]],["title/injectables/LoginService.html",[89,0.969,123,1.952]],["body/injectables/LoginService.html",[3,0.354,4,0.313,8,0.273,13,0.967,20,0.354,21,0.654,23,0.619,24,0.037,25,1.57,26,0.976,27,1.295,29,1.807,31,0.728,32,0.354,34,0.354,35,0.236,44,1.399,53,1.569,62,0.02,63,0.02,75,0.654,76,2.162,78,1.666,79,1.862,80,1.931,81,2.19,82,1.931,83,4.497,84,1.931,85,1.278,86,1.862,87,3.375,88,1.875,89,1.073,90,0.967,91,1.178,92,2.272,93,1.178,94,2.744,95,0.967,96,2.059,97,1.931,98,1.931,99,1.931,100,2.422,101,1.931,102,1.931,103,1.468,104,1.931,105,2.272,106,2.843,107,2.843,108,2.453,109,1.931,110,2.843,111,2.054,112,2.843,113,3.212,114,2.843,115,2.843,116,2.272,117,1.735,118,2.453,119,1.735,120,3.424,121,2.843,122,2.059,123,3.156,124,1.931,125,1.931,126,3.723,127,1.931,128,2.289,129,1.931,130,4.047,131,1.931,132,1.931,133,1.065,134,1.721,135,2.912,136,2.843,137,2.912,138,2.843,139,2.843,140,2.059,141,2.843,142,1.405,143,2.843,144,1.179,145,1.931,146,2.843,147,0.804,148,2.054,149,2.059,150,1.987,151,1.735,152,2.843,153,1.931,154,1.931,219,1.178,275,2.059,573,1.468,574,1.931,575,3.436,576,2.333,577,2.333,578,2.333]],["title/components/MyUiComponent.html",[0,0.726,55,1.417]],["body/components/MyUiComponent.html",[0,1.236,1,1.749,2,2.203,3,0.581,4,0.513,5,2.708,6,1.934,7,2.15,8,0.449,10,1.934,11,2.735,12,2.412,14,1.587,24,0.037,31,0.581,32,0.581,34,0.581,35,0.387,38,1.749,39,2.708,40,2.708,41,1.443,42,3.112,43,2.15,44,1.812,45,2.15,46,1.587,47,2.799,48,2.15,49,1.749,50,2.15,51,2.15,52,1.749,53,1.749,54,2.15,55,2.531,56,2.965,57,2.965,58,1.749,59,1.314,60,1.934,61,2.15,62,0.028,63,0.028,182,1.934,241,3.771,579,5.281,580,2.734,581,3.17]],["title/injectables/MyUiService.html",[89,0.969,582,2.215]],["body/injectables/MyUiService.html",[3,0.683,4,0.603,8,0.527,13,1.864,24,0.036,29,1.695,31,0.683,32,0.683,34,0.683,35,0.455,62,0.031,63,0.031,89,1.662,133,2.054,182,2.687,219,2.862,573,2.83,580,3.8,582,3.8,583,3.723,584,4.499]],["title/interfaces/PartialUserResponse.html",[75,0.591,585,1.567]],["body/interfaces/PartialUserResponse.html",[3,0.536,4,0.324,8,0.283,13,1.003,20,0.367,21,0.672,23,0.536,24,0.038,25,1.605,31,0.739,32,0.367,34,0.367,35,0.245,62,0.021,63,0.021,72,0.83,75,0.968,77,1.105,79,1.105,81,2.223,85,1.184,86,1.902,88,1.89,89,1.102,90,1.003,91,1.222,92,1.782,93,1.222,94,2.769,95,1.003,96,2.458,100,1.782,105,1.222,116,1.222,117,1.782,119,1.222,122,1.222,128,2.174,133,1.105,134,1.211,140,2.458,142,1.43,144,1.743,147,0.826,148,1.612,149,2.458,150,2.017,151,1.782,160,0.912,184,1.105,209,1.462,236,0.912,245,2.312,434,1.105,445,1.358,454,1.358,464,2.65,503,2.338,508,1.358,523,1.105,525,1.358,528,1.981,533,1.358,551,2.733,555,3.019,585,1.782,586,1.358,587,1.358,588,1.522,589,2.88,590,1.522,591,1.522,592,1.522,593,1.222,594,1.522,595,1.522,596,1.522,597,1.522,598,1.522,599,1.522,600,1.522,601,1.222,602,1.522,603,2.22,604,2.621,605,1.522,606,1.522,607,1.522,608,1.358,609,1.522,610,1.358,611,1.522,612,1.358,613,1.522,614,1.522,615,2.22,616,1.522,617,2.621,618,1.522,619,1.522,620,1.522,621,1.522,622,1.522,623,1.522,624,2.22,625,1.522,626,1.522,627,1.522,628,2.22,629,2.22,630,1.522,631,1.522,632,1.522,633,2.22,634,1.522,635,2.22,636,1.522,637,1.522,638,1.522,639,1.522,640,1.522]],["title/classes/User.html",[35,0.313,88,0.969]],["body/classes/User.html",[3,0.545,4,0.481,8,0.421,20,0.545,21,0.882,23,0.886,24,0.036,25,1.779,29,2.2,34,0.545,35,0.363,44,1.232,62,0.027,63,0.027,85,1.021,88,1.446,128,2.322,184,2.472,186,3.866,219,2.339,220,3.922,275,1.814,334,2.973,464,2.83,641,2.973,642,5.604,643,5.604,644,5.604,645,3.593,646,3.593,647,3.593,648,3.593,649,3.593,650,3.593,651,3.593,652,3.593]],["title/interfaces/UserExist.html",[75,0.591,593,1.567]],["body/interfaces/UserExist.html",[3,0.542,4,0.329,8,0.288,13,1.018,20,0.373,21,0.679,23,0.373,24,0.038,25,1.564,31,0.743,32,0.373,34,0.373,35,0.248,62,0.021,63,0.021,72,0.843,75,0.973,77,1.122,79,1.122,81,2.236,85,0.698,86,1.919,88,1.893,89,1.114,90,1.018,91,1.24,92,1.802,93,1.24,94,2.78,95,1.018,96,2.473,100,1.802,105,1.24,116,1.24,117,1.24,119,1.24,122,1.24,128,2.184,133,1.122,134,1.224,140,2.473,142,1.44,144,1.752,147,0.835,148,1.122,149,1.802,150,1.478,151,1.802,160,0.926,184,1.122,209,1.478,236,0.926,245,2.473,434,1.122,445,1.379,454,2.359,464,2.662,503,2.359,508,1.379,523,1.122,525,1.379,528,2.359,533,1.379,551,2.749,555,2.749,585,1.24,586,1.379,587,1.379,588,1.545,589,3.316,590,1.545,591,1.545,592,1.545,593,1.802,594,1.545,595,1.545,596,1.545,597,1.545,598,1.545,599,1.545,600,1.545,601,1.24,602,1.545,603,2.245,604,2.643,605,1.545,606,1.545,607,1.545,608,1.379,609,1.545,610,1.379,611,1.545,612,1.379,613,1.545,614,1.545,615,2.245,616,1.545,617,2.643,618,1.545,619,1.545,620,1.545,621,1.545,622,1.545,623,1.545,624,2.245,625,1.545,626,1.545,627,1.545,628,2.245,629,2.245,630,1.545,631,1.545,632,1.545,633,2.245,634,1.545,635,2.245,636,1.545,637,1.545,638,1.545,639,1.545,640,1.545]],["title/interfaces/UserGetter.html",[75,0.591,601,1.567]],["body/interfaces/UserGetter.html",[3,0.537,4,0.325,8,0.284,13,1.006,20,0.368,21,0.673,23,0.537,24,0.038,25,1.606,31,0.74,32,0.368,34,0.368,35,0.245,62,0.021,63,0.021,72,0.833,75,0.928,77,1.108,79,1.108,81,2.094,85,1.186,86,1.905,88,1.915,89,1.105,90,1.006,91,1.226,92,1.786,93,1.226,94,2.771,95,1.006,96,2.461,100,1.786,105,1.226,116,1.226,117,1.226,119,1.226,122,1.226,128,2.176,133,1.108,134,1.213,140,2.461,142,1.432,144,1.745,147,0.828,148,1.108,149,1.786,150,1.466,151,1.786,160,0.915,184,1.108,209,1.466,236,0.915,245,2.315,434,1.108,445,1.363,454,1.363,464,2.652,503,2.342,508,1.363,523,1.108,525,1.363,528,1.985,533,1.363,551,2.736,555,3.021,585,1.226,586,1.363,587,1.363,588,1.527,589,2.884,590,1.527,591,1.527,592,1.527,593,1.226,594,2.225,595,2.225,596,2.225,597,1.527,598,1.527,599,1.527,600,1.527,601,1.786,602,1.527,603,2.225,604,2.625,605,1.527,606,1.527,607,1.527,608,1.363,609,1.527,610,1.363,611,1.527,612,1.363,613,1.527,614,1.527,615,2.225,616,1.527,617,2.625,618,1.527,619,1.527,620,1.527,621,1.527,622,1.527,623,1.527,624,2.225,625,1.527,626,1.527,627,1.527,628,2.225,629,2.225,630,1.527,631,1.527,632,1.527,633,2.225,634,1.527,635,2.225,636,1.527,637,1.527,638,1.527,639,1.527,640,1.527]],["title/injectables/UserGetterService.html",[89,0.969,434,1.417]],["body/injectables/UserGetterService.html",[3,0.458,4,0.263,8,0.23,13,0.813,20,0.298,21,0.574,23,0.713,24,0.037,25,1.667,26,0.857,27,1.136,29,1.844,31,0.675,32,0.298,34,0.298,35,0.198,44,1.414,62,0.018,63,0.018,72,0.673,75,0.847,79,1.677,81,2.032,85,1.264,86,2.032,88,1.884,89,0.942,90,0.813,91,0.99,92,2.082,93,0.99,94,2.895,95,0.813,96,2.247,100,2.082,105,0.99,111,1.377,116,1.522,117,0.99,119,0.99,122,0.99,128,2.262,133,0.896,134,1.611,140,2.247,142,1.617,144,1.611,147,0.706,148,0.896,149,1.522,150,1.249,151,2.082,160,1.136,184,1.377,209,1.946,219,0.99,236,0.739,245,2.47,275,2.082,434,1.377,445,1.101,454,1.101,464,2.791,503,2.498,508,1.692,523,0.896,525,1.692,528,2.062,533,1.692,551,2.907,555,2.498,573,1.234,574,1.623,585,0.99,586,2.835,587,1.101,588,1.234,589,2.955,590,1.234,591,1.234,592,1.234,593,0.99,594,1.234,595,1.234,596,1.234,597,1.234,598,1.234,599,1.234,600,1.234,601,0.99,602,1.234,603,2.31,604,2.799,605,1.234,606,1.234,607,1.234,608,1.101,609,1.234,610,2.062,611,1.897,612,2.062,613,1.897,614,1.897,615,2.593,616,1.234,617,2.31,618,1.234,619,1.234,620,1.234,621,1.234,622,2.593,623,1.234,624,2.593,625,1.897,626,1.897,627,1.897,628,2.31,629,2.593,630,1.897,631,1.897,632,1.897,633,2.593,634,2.31,635,1.897,636,1.234,637,1.234,638,1.234,639,1.897,640,1.234,653,3.015,654,3.015,655,1.961,656,1.961,657,1.961,658,1.961,659,1.961,660,1.961,661,1.961]],["title/changelog.html",[662,2.157,663,2.157,664,2.606]],["body/changelog.html",[0,0.85,8,0.603,24,0.03,31,0.551,62,0.027,63,0.027,118,3.33,147,0.85,215,2.039,523,1.659,546,4.906,553,3.006,665,3.633,666,3.633,667,3.633,668,3.633,669,4.843,670,3.86,671,3.006,672,3.86,673,3.86,674,3.33,675,2.594,676,4.264,677,3.633,678,5.153,679,3.633,680,3.633,681,4.665,682,4.665,683,3.633,684,5.853,685,4.665,686,4.665,687,3.633,688,3.633,689,2.935,690,4.665,691,4.665,692,3.86,693,4.665,694,3.633,695,5.153,696,3.633,697,3.633,698,4.665,699,4.665,700,3.633,701,3.633,702,3.633,703,3.006,704,3.633,705,3.633,706,3.86,707,3.633,708,3.633,709,3.633,710,3.633,711,3.633,712,3.633,713,3.006,714,3.006,715,2.594,716,2.594,717,3.006,718,4.665,719,3.006,720,3.633,721,4.665,722,3.633,723,3.633,724,3.006,725,3.633]],["title/coverage.html",[726,3.479]],["body/coverage.html",[0,1.191,1,1.24,8,0.318,9,2.247,12,1.24,23,0.733,24,0.037,35,0.274,41,1.023,46,1.125,49,1.24,52,1.24,55,1.24,59,0.931,62,0.023,63,0.023,75,1.006,76,1.708,78,2.737,88,0.848,89,1.388,90,1.588,123,1.708,147,0.636,155,1.524,156,2.532,157,2.09,158,2.8,159,3.203,167,2.152,170,1.939,171,1.939,173,3.172,177,1.708,178,1.708,181,1.708,182,2.668,183,3.037,203,1.708,211,1.708,292,2.247,293,1.939,294,2.247,324,2.795,347,3.677,378,2.737,402,1.939,410,1.708,420,2.247,421,2.247,422,2.247,434,1.24,535,2.247,580,2.737,581,2.247,582,1.939,583,2.247,585,1.371,586,2.71,587,2.71,593,1.371,601,1.371,641,2.247,726,2.247,727,2.716,728,2.716,729,2.716,730,6.206,731,3.834,732,5.96,733,6.09,734,2.716,735,2.247,736,2.716,737,2.716,738,3.834,739,3.172,740,2.247,741,2.247,742,2.247,743,2.247,744,2.247,745,2.716,746,2.716,747,2.716,748,2.716,749,2.716,750,2.716,751,2.716,752,3.834,753,3.834,754,2.716,755,2.247,756,2.247,757,2.247,758,4.213,759,2.247,760,2.247,761,2.247,762,2.716,763,2.247,764,2.716,765,2.716]],["title/dependencies.html",[408,2.342,766,2.157]],["body/dependencies.html",[24,0.037,32,0.607,33,2.856,35,0.404,62,0.029,63,0.029,95,1.657,197,2.516,202,2.245,244,2.503,354,3.31,355,3.31,357,3.31,408,2.516,480,3.31,483,2.856,689,2.516,692,3.31,713,3.31,714,3.31,715,2.856,716,2.856,717,3.31,767,4,768,4.102,769,6.041,770,4,771,5.387,772,4,773,4,774,4,775,4,776,4,777,4,778,4,779,4,780,4,781,4,782,4,783,4,784,4,785,4,786,4,787,4,788,4]],["title/miscellaneous/functions.html",[789,1.316,790,2.658]],["body/miscellaneous/functions.html",[20,0.683,23,0.683,24,0.035,44,1.543,62,0.031,63,0.031,85,1.278,142,1.662,150,2.205,155,2.525,156,2.054,157,1.695,158,2.271,159,3.566,165,3.723,174,3.723,177,2.83,178,3.566,275,2.271,735,4.405,789,2.271,790,3.212,791,3.8]],["title/index.html",[20,0.396,662,2.157,663,2.157]],["body/index.html",[0,1.18,2,1.584,4,0.465,24,0.027,26,1.287,58,1.584,62,0.027,63,0.027,120,4.058,147,0.812,238,3.233,244,1.752,423,2.872,523,1.584,537,2.872,560,2.872,669,4.172,670,2.872,671,2.872,673,4.172,674,3.815,675,3.957,676,4.704,689,3.171,703,2.872,706,4.172,716,3.957,719,3.747,724,2.872,768,2.872,792,3.47,793,3.47,794,2.872,795,4.528,796,3.47,797,3.47,798,3.47,799,4.528,800,3.47,801,3.47,802,3.47,803,4.528,804,3.47,805,3.47,806,3.47,807,3.47,808,4.528,809,4.528,810,3.47,811,3.47,812,3.47,813,2.872,814,3.47,815,3.47,816,3.47,817,3.47,818,4.172,819,3.47,820,3.47,821,3.47,822,3.47,823,3.47,824,3.47,825,2.872,826,3.47,827,3.47,828,3.47,829,3.47,830,3.47,831,3.47,832,3.47,833,5.041,834,3.47,835,5.684,836,3.47,837,4.528,838,3.47,839,3.47,840,3.47,841,3.47,842,3.47,843,3.47,844,3.47,845,3.47,846,3.47,847,3.47,848,3.47,849,3.47,850,3.47,851,3.47,852,2.477,853,3.47]],["title/modules.html",[66,2.36]],["body/modules.html",[24,0.032,62,0.032,63,0.032,65,3.41,66,2.681,196,2.412,244,2.412,715,3.41,813,3.953,854,4.776,855,5.512,856,4.776]],["title/overview.html",[852,3.001]],["body/overview.html",[2,1.999,24,0.034,35,0.442,38,1.999,41,1.649,59,2.089,62,0.031,63,0.031,64,2.754,66,2.457,74,3.125,77,1.999,196,2.997,374,3.125,401,3.125,408,2.754,409,3.622,410,2.754,411,3.125,412,3.622,413,3.622,414,3.622,415,4.334,416,3.622,417,3.622,573,2.754,852,3.125,857,4.377,858,5.237,859,4.377]],["title/properties.html",[21,0.709,766,2.157]],["body/properties.html",[21,0.926,24,0.034,62,0.033,63,0.033,794,4.024,860,4.862]],["title/miscellaneous/typealiases.html",[789,1.316,861,3.723]],["body/miscellaneous/typealiases.html",[20,0.661,23,0.661,24,0.037,26,1.483,62,0.031,63,0.031,156,1.988,157,1.64,158,2.198,167,2.93,182,2.198,183,2.739,203,3.284,204,2.444,205,2.444,206,2.444,207,2.444,208,2.444,209,1.804,210,3.108,211,3.284,212,2.444,213,2.444,214,2.444,324,3.284,352,3.603,789,2.198,791,3.108,862,4.354,863,5.22]],["title/miscellaneous/variables.html",[789,1.316,864,3.081]],["body/miscellaneous/variables.html",[12,1.606,20,0.366,23,0.77,24,0.037,26,1.712,27,2.205,53,1.1,62,0.021,63,0.021,88,0.752,90,1.893,113,1.72,135,2.512,137,2.512,147,0.823,155,1.352,156,1.606,157,1.326,158,1.776,159,2.614,160,1.566,161,2.332,167,1.975,170,2.512,171,2.512,172,1.994,177,2.614,180,1.776,195,1.352,204,1.352,205,2.332,206,1.352,207,2.332,208,1.352,212,1.975,213,1.352,214,1.352,223,2.512,225,3.057,236,0.908,244,1.217,324,2.213,353,1.994,359,1.994,360,1.994,361,1.994,362,2.911,363,1.994,364,3.439,365,3.439,366,1.994,367,1.994,368,1.994,369,1.994,370,3.262,371,1.994,372,2.911,373,3.439,374,2.967,375,2.911,376,3.439,377,1.994,378,1.72,379,1.994,380,1.994,381,1.994,382,1.994,383,3.439,384,3.439,385,4.021,386,4.021,387,1.994,388,1.994,389,2.911,390,3.781,391,2.911,392,1.994,393,1.994,394,2.512,395,1.994,396,3.781,397,3.439,398,1.994,399,3.439,400,1.994,401,1.72,402,1.72,403,1.994,404,1.994,405,1.994,410,2.213,411,2.512,483,1.72,608,1.352,610,1.975,612,1.975,672,1.994,674,1.72,675,1.72,689,1.516,739,1.994,740,3.439,741,1.994,742,2.911,743,1.994,744,2.911,755,1.994,756,1.994,757,1.994,758,1.994,759,2.911,760,2.911,761,2.911,763,2.911,789,1.217,790,1.72,791,2.967,818,1.994,825,2.911,864,1.994,865,4.859,866,2.409,867,2.409,868,3.518,869,2.409,870,2.409,871,2.409,872,2.409,873,2.409,874,2.409,875,2.409,876,2.409,877,2.409,878,2.409,879,2.409,880,2.409,881,2.409,882,3.518,883,2.409,884,2.409,885,2.409,886,2.409,887,2.409,888,2.409,889,2.409,890,2.409,891,2.409,892,3.518,893,2.409,894,2.409,895,2.409,896,2.409,897,2.409,898,2.409,899,2.409,900,2.409,901,2.409,902,2.409]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":860,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.15.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["0.7.1",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":858,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":397,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":535,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["11",{"_index":402,"title":{},"body":{"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["19.2.2",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["19.2.3",{"_index":768,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":374,"title":{},"body":{"directives/HlmButtonDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.1.1",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["2/18",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":401,"title":{},"body":{"directives/HlmButtonDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3/6",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":394,"title":{},"body":{"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["4.0.14",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["4.21.2",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":857,"title":{},"body":{"overview.html":{}}}],["50",{"_index":378,"title":{},"body":{"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":859,"title":{},"body":{"overview.html":{}}}],["7.8.2",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":403,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["8.5.3",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":400,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["_additionalclasses",{"_index":326,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["_computedclass",{"_index":328,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["_config",{"_index":329,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["abstractcontrol",{"_index":474,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["accent",{"_index":390,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":451,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["actual_component",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["add",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":845,"title":{},"body":{"index.html":{}}}],["address",{"_index":141,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["aftercontentinit",{"_index":189,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["alias",{"_index":347,"title":{},"body":{"directives/HlmButtonDirective.html":{},"coverage.html":{}}}],["aliases",{"_index":862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alpha.424",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":518,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["angular",{"_index":674,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular.json",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["angular/cdk",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":202,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":93,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["angular/compiler",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":480,"title":{},"body":{"components/LoginPageComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anything",{"_index":258,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["api",{"_index":119,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.spec.ts",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["app.component.ts",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["app.module.ts",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":803,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approach",{"_index":240,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["approutingmodule",{"_index":65,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["array",{"_index":603,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["artifacts",{"_index":822,"title":{},"body":{"index.html":{}}}],["asp.net",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["aspnetcore",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":639,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["attempt",{"_index":84,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["auth",{"_index":608,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":97,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["authentication",{"_index":83,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["authority",{"_index":355,"title":{},"body":{"directives/HlmButtonDirective.html":{},"dependencies.html":{}}}],["authresponse",{"_index":76,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["authurl",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":505,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["automatically",{"_index":804,"title":{},"body":{"index.html":{}}}],["available",{"_index":813,"title":{},"body":{"index.html":{},"modules.html":{}}}],["back",{"_index":540,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["backend",{"_index":118,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"changelog.html":{}}}],["background",{"_index":381,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["bg",{"_index":383,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":454,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["bootstrap",{"_index":410,"title":{},"body":{"modules/HlmButtonModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":389,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["brnbuttonconfig",{"_index":155,"title":{"interfaces/BrnButtonConfig.html":{}},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["brnbuttonconfigtoken",{"_index":171,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":855,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":244,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":818,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":819,"title":{},"body":{"index.html":{}}}],["button",{"_index":157,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["button.component.html",{"_index":216,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":217,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["button.directive",{"_index":169,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"modules/HlmButtonModule.html":{}}}],["button.directive.ts",{"_index":324,"title":{},"body":{"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button.directive.ts:43",{"_index":344,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:45",{"_index":336,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:47",{"_index":348,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:49",{"_index":343,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:53",{"_index":350,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:55",{"_index":346,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:57",{"_index":333,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.token",{"_index":358,"title":{},"body":{"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{}}}],["button.token.ts",{"_index":159,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["buttonclick",{"_index":232,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["buttonclickevent",{"_index":181,"title":{"interfaces/ButtonClickEvent.html":{}},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":46,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["buttonsize",{"_index":211,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["buttonvariant",{"_index":203,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["buttonvariants",{"_index":167,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonvariants['size",{"_index":162,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["buttonvariants['variant",{"_index":163,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["call",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["cancelemailconfirmation",{"_index":437,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["canceling",{"_index":446,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["cancelled",{"_index":304,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["canceltext",{"_index":298,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["center",{"_index":362,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["certs",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":664,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":558,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["check",{"_index":245,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["checkemailexists",{"_index":438,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checkifuserexist",{"_index":439,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checking",{"_index":251,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{}}}],["checks",{"_index":607,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["choose",{"_index":841,"title":{},"body":{"index.html":{}}}],["ciao",{"_index":566,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["class",{"_index":35,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":334,"title":{},"body":{"directives/HlmButtonDirective.html":{},"classes/User.html":{}}}],["classvalue",{"_index":356,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["clear",{"_index":536,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["cli",{"_index":675,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clsx",{"_index":357,"title":{},"body":{"directives/HlmButtonDirective.html":{},"dependencies.html":{}}}],["cluster_hlmbuttonmodule",{"_index":412,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["cluster_hlmbuttonmodule_exports",{"_index":413,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["cluster_hlmbuttonmodule_imports",{"_index":414,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["code",{"_index":808,"title":{},"body":{"index.html":{}}}],["colors",{"_index":369,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["come",{"_index":839,"title":{},"body":{"index.html":{}}}],["command",{"_index":833,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":200,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{}}}],["compile",{"_index":820,"title":{},"body":{"index.html":{}}}],["complete",{"_index":560,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":337,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["config",{"_index":177,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":320,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirmation",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["confirmationmodalcomponent",{"_index":49,"title":{"components/ConfirmationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["confirmed",{"_index":305,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirmemailuser",{"_index":440,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["confirming",{"_index":450,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["confirmtext",{"_index":299,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["consider",{"_index":256,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["console.error",{"_index":520,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.error('error",{"_index":527,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log('email",{"_index":517,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log('form",{"_index":543,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log(response",{"_index":126,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["const",{"_index":72,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["constructor",{"_index":219,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{}}}],["constructor(elementref",{"_index":273,"title":{},"body":{"components/ButtonComponent.html":{}}}],["constructor(http",{"_index":574,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserGetterService.html":{}}}],["constructor(id",{"_index":645,"title":{},"body":{"classes/User.html":{}}}],["constructor(private",{"_index":122,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["contact",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["containing",{"_index":151,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["content",{"_index":252,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["contentchild",{"_index":194,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["contentchild(templateref",{"_index":233,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["contenttemplate",{"_index":234,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["corresponding",{"_index":615,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["coverage",{"_index":726,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["created",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["createnoderequesthandler(app",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":614,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["cva",{"_index":353,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["cycle",{"_index":248,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["data",{"_index":148,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["dataavailable",{"_index":441,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["date.now",{"_index":269,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["debugging",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":409,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["decorators",{"_index":285,"title":{},"body":{"components/ButtonComponent.html":{}}}],["default",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":170,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["defaultvariants",{"_index":405,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{}}}],["dependencies",{"_index":408,"title":{"dependencies.html":{}},"body":{"modules/HlmButtonModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":79,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/ConfirmationModalComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["destructive",{"_index":205,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["destructive/90",{"_index":388,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["detailed",{"_index":849,"title":{},"body":{"index.html":{}}}],["details",{"_index":98,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["dev",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":795,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":512,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["different",{"_index":539,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["directive",{"_index":41,"title":{"directives/HlmButtonDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"index.html":{}}}],["directly",{"_index":253,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["directory",{"_index":824,"title":{},"body":{"index.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disabled",{"_index":228,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["disabled:opacity",{"_index":377,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["disabled:pointer",{"_index":379,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":553,"title":{},"body":{"components/LoginPageComponent.html":{},"changelog.html":{}}}],["dist",{"_index":823,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('email')?.focus",{"_index":541,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["document.getelementbyid('password')?.focus",{"_index":534,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["documentation",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":524,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["don't",{"_index":504,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["during",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":836,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":838,"title":{},"body":{"index.html":{}}}],["editor",{"_index":714,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["element",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["elementref",{"_index":190,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["email",{"_index":128,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["email/username",{"_index":592,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["emailerror",{"_index":427,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailexists",{"_index":428,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["enable",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":835,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":559,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["environment",{"_index":90,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.loginurl",{"_index":136,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["environment.registerurl",{"_index":138,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["environment.usercheckerurl",{"_index":613,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["environment.userinfourl",{"_index":611,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["environments/environment",{"_index":91,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["error",{"_index":86,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["errors",{"_index":555,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["event",{"_index":284,"title":{},"body":{"components/ButtonComponent.html":{}}}],["eventcoalescing",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":187,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["events",{"_index":380,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":120,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["execute",{"_index":829,"title":{},"body":{"index.html":{}}}],["exist",{"_index":525,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["existance",{"_index":609,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["existence",{"_index":528,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["exists",{"_index":503,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["explains",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["exportas",{"_index":325,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["exports",{"_index":74,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HlmButtonModule.html":{},"overview.html":{}}}],["express",{"_index":483,"title":{},"body":{"components/LoginPageComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":104,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["false",{"_index":236,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":533,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["fields",{"_index":551,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["fields.join",{"_index":637,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":807,"title":{},"body":{"index.html":{}}}],["fill",{"_index":506,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["filling",{"_index":514,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["fine",{"_index":526,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["firebase",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":481,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["firstname",{"_index":642,"title":{},"body":{"classes/User.html":{}}}],["flex",{"_index":360,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["focus",{"_index":370,"title":{},"body":{"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":670,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["font",{"_index":366,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["foreground",{"_index":385,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":563,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formbuilder",{"_index":429,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formgroup",{"_index":475,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["found",{"_index":530,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["foundusername",{"_index":430,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["framework",{"_index":840,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["full",{"_index":561,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["fullwidth",{"_index":231,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["function",{"_index":173,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{}}}],["functions",{"_index":790,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":673,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generated",{"_index":793,"title":{},"body":{"index.html":{}}}],["getter.service",{"_index":482,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["getter.service.ts",{"_index":587,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["getter.service.ts:43",{"_index":661,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:44",{"_index":654,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:53",{"_index":659,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:71",{"_index":660,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:81",{"_index":657,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:97",{"_index":655,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getting",{"_index":662,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["getusernamebyemail",{"_index":653,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getusernamebyemail(email",{"_index":508,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["getuserpartial",{"_index":634,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["getuserpartial(userid",{"_index":656,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["ghost",{"_index":208,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["git",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":591,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["goes",{"_index":599,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["graph",{"_index":854,"title":{},"body":{"modules.html":{}}}],["h",{"_index":396,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["handle",{"_index":445,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["handler",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handling",{"_index":107,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["hascontent",{"_index":235,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["helm",{"_index":199,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["helm/src/index.ts",{"_index":418,"title":{},"body":{"modules/HlmButtonModule.html":{}}}],["helm/src/lib/hlm",{"_index":158,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["helpbuilding",{"_index":817,"title":{},"body":{"index.html":{}}}],["here",{"_index":548,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hide",{"_index":532,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["highlightedtext",{"_index":300,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["hlm",{"_index":168,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{}}}],["hlm(buttonvariants",{"_index":338,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["hlmbtn",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["hlmbuttondirective",{"_index":59,"title":{"directives/HlmButtonDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hlmbuttonmodule",{"_index":196,"title":{"modules/HlmButtonModule.html":{}},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"modules/HlmButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["holder",{"_index":452,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["home",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["host",{"_index":406,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["hover:bg",{"_index":386,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["hover:text",{"_index":391,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["hover:underline",{"_index":395,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["http",{"_index":116,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["http://localhost:4200",{"_index":802,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":92,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["httpclientmodule",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["httpparams",{"_index":588,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["httpparams().set('fields",{"_index":636,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["https",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["https.js",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":214,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":184,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["identifier",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":218,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"changelog.html":{}}}],["imports",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["include",{"_index":631,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["includes",{"_index":810,"title":{},"body":{"index.html":{}}}],["including",{"_index":848,"title":{},"body":{"index.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":590,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["infomation",{"_index":596,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["information",{"_index":523,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"changelog.html":{},"index.html":{}}}],["inject",{"_index":166,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{}}}],["inject(brnbuttonconfigtoken",{"_index":179,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["inject(formbuilder",{"_index":459,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inject(platform_id",{"_index":221,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["inject(usergetterservice",{"_index":470,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["injectable",{"_index":89,"title":{"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"injectables/UserGetterService.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["injectables",{"_index":573,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"injectables/UserGetterService.html":{},"overview.html":{}}}],["injectbrnbuttonconfig",{"_index":178,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectiontoken",{"_index":164,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["injectiontoken('brnbuttonconfig",{"_index":172,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":359,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":195,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["input('basic",{"_index":315,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["input('cancel",{"_index":311,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["input('confirm",{"_index":313,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["input('default",{"_index":227,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["input('press",{"_index":226,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["input(false",{"_index":229,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["input(this._config.size",{"_index":345,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["input(this._config.variant",{"_index":349,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["inputs",{"_index":271,"title":{},"body":{"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["install",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["instead",{"_index":513,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["interface",{"_index":75,"title":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{}},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":77,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"overview.html":{}}}],["invalid",{"_index":549,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["isplatformbrowser",{"_index":201,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":243,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["isregistering",{"_index":431,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["issues",{"_index":605,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["items",{"_index":361,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["jest",{"_index":713,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["justify",{"_index":363,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":99,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["karma",{"_index":830,"title":{},"body":{"index.html":{}}}],["karma.conf.js",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":643,"title":{},"body":{"classes/User.html":{}}}],["launch.json",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"overview.html":{}}}],["lg",{"_index":213,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["lib/hlm",{"_index":419,"title":{},"body":{"modules/HlmButtonModule.html":{}}}],["libs/.../hlm",{"_index":791,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/ui/ui",{"_index":156,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":204,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":724,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loading",{"_index":230,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["local",{"_index":797,"title":{},"body":{"index.html":{}}}],["localhost:8000",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/login",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/register",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/user",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/user/me",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":112,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["logic",{"_index":547,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"miscellaneous/variables.html":{}}}],["login(email",{"_index":143,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["loginform",{"_index":432,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"email.emailstring\")?.value",{"_index":571,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"email.provider\")?.value",{"_index":570,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"password\")?.value",{"_index":568,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"username\")?.value",{"_index":567,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.status",{"_index":565,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginpagecomponent",{"_index":52,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["loginservice",{"_index":123,"title":{"injectables/LoginService.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":135,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":139,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["making",{"_index":115,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["mark",{"_index":550,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["matching",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":365,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":367,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":103,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["messages",{"_index":604,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["methods",{"_index":111,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{}}}],["minimize",{"_index":626,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["miscellaneous",{"_index":789,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":295,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["modal.component",{"_index":485,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["modal.component.html",{"_index":296,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.scss",{"_index":297,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts",{"_index":294,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:12",{"_index":306,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:13",{"_index":321,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:14",{"_index":319,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:15",{"_index":316,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:16",{"_index":314,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:17",{"_index":312,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:18",{"_index":317,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:20",{"_index":308,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:21",{"_index":307,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:23",{"_index":310,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:27",{"_index":309,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal/confirmation",{"_index":293,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["modify",{"_index":703,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["module",{"_index":64,"title":{"modules/AppRoutingModule.html":{},"modules/HlmButtonModule.html":{}},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["modules",{"_index":66,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/HlmButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":847,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":262,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["myui",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["myuicomponent",{"_index":55,"title":{"components/MyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["myuiservice",{"_index":582,"title":{"injectables/MyUiService.html":{}},"body":{"injectables/MyUiService.html":{},"coverage.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":812,"title":{},"body":{"index.html":{}}}],["names",{"_index":630,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["navigate",{"_index":801,"title":{},"body":{"index.html":{}}}],["needs",{"_index":844,"title":{},"body":{"index.html":{}}}],["new",{"_index":147,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newuser@example.com",{"_index":129,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["next",{"_index":246,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{}}}],["ng",{"_index":676,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng/brain",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["ng/brain/core",{"_index":351,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["ng/ui",{"_index":198,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["ngmodule",{"_index":69,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HlmButtonModule.html":{}}}],["ngoninit",{"_index":237,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["none",{"_index":372,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":209,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/typealiases.html":{}}}],["null).subscribe",{"_index":501,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["number",{"_index":186,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"classes/User.html":{}}}],["object",{"_index":223,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":94,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observable((observer",{"_index":619,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observer.complete",{"_index":621,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observer.next",{"_index":620,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["occur",{"_index":606,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["offset",{"_index":376,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["oncancel",{"_index":302,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["onclick",{"_index":270,"title":{},"body":{"components/ButtonComponent.html":{}}}],["onclick(event",{"_index":261,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["onconfirm",{"_index":303,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["one",{"_index":842,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":191,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["open",{"_index":800,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":826,"title":{},"body":{"index.html":{}}}],["optional",{"_index":85,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["os",{"_index":717,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["out",{"_index":417,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["outline",{"_index":206,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":188,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["outputs",{"_index":272,"title":{},"body":{"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["overview",{"_index":852,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":766,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":423,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["page.component.html",{"_index":425,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.scss",{"_index":426,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts",{"_index":422,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:125",{"_index":449,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:145",{"_index":444,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:164",{"_index":456,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:174",{"_index":455,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:32",{"_index":460,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:33",{"_index":471,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:34",{"_index":462,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:35",{"_index":473,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:36",{"_index":472,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:37",{"_index":458,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:38",{"_index":457,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:39",{"_index":469,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:40",{"_index":461,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:41",{"_index":468,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:46",{"_index":453,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:58",{"_index":448,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:77",{"_index":447,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/login",{"_index":421,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":140,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["parameters",{"_index":275,"title":{},"body":{"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":635,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["partial",{"_index":150,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["partialuserresponse",{"_index":585,"title":{"interfaces/PartialUserResponse.html":{}},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["password",{"_index":130,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["password123",{"_index":131,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["password123').subscribe(response",{"_index":125,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["passwordvalue",{"_index":488,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["passwordvalue.trim",{"_index":491,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["path",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":627,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["performance",{"_index":827,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":816,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":192,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["platformid",{"_index":222,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["please",{"_index":538,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["point",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":633,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["postcss",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["powerful",{"_index":811,"title":{},"body":{"index.html":{}}}],["present",{"_index":519,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["primary",{"_index":384,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["primary/90",{"_index":387,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":134,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["production",{"_index":825,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":669,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projects",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["projects/.../button.component.ts",{"_index":863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/my",{"_index":182,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"properties.html":{}}}],["property",{"_index":96,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["protected",{"_index":327,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["provide",{"_index":175,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["providebrnbuttonconfig",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["providebrnbuttonconfig(config",{"_index":174,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"miscellaneous/functions.html":{}}}],["provideclienthydration(witheventreplay",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":100,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["providedin",{"_index":133,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["providehttpclient(withfetch",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":569,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["providerouter(routes",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":411,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":110,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["provideserverrendering",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proxy",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["proxy.conf.js",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":220,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"classes/User.html":{}}}],["px",{"_index":399,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["py",{"_index":398,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["question",{"_index":318,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["reactiveformsmodule",{"_index":424,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["readonly",{"_index":224,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{}}}],["real",{"_index":545,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["received",{"_index":82,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["reference",{"_index":853,"title":{},"body":{"index.html":{}}}],["references",{"_index":850,"title":{},"body":{"index.html":{}}}],["register",{"_index":113,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["register(userdata",{"_index":152,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["registerdiv",{"_index":442,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["registers",{"_index":146,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["registerurl",{"_index":137,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["registration",{"_index":108,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["reload",{"_index":805,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":109,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["render",{"_index":247,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["rendermode",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["represents",{"_index":80,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["reqhandler",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":632,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["requests",{"_index":117,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["required",{"_index":557,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["reset",{"_index":416,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["resolve(serverdistfolder",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":846,"title":{},"body":{"index.html":{}}}],["respone",{"_index":595,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["response",{"_index":81,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["response.userexists",{"_index":498,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["responsible",{"_index":106,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["results",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":629,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["retrieves",{"_index":624,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["retrieving",{"_index":521,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["return",{"_index":144,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["returned",{"_index":597,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["returns",{"_index":142,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["ring",{"_index":375,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":644,"title":{},"body":{"classes/User.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["root'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["rounded",{"_index":364,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":70,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":73,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":71,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":68,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":716,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["runner",{"_index":832,"title":{},"body":{"index.html":{}}}],["running",{"_index":799,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":95,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"dependencies.html":{}}}],["safer",{"_index":250,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["scaffolding",{"_index":809,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":814,"title":{},"body":{"index.html":{}}}],["script",{"_index":692,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["secondary",{"_index":207,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["secondary/80",{"_index":392,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":572,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["selected",{"_index":602,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["serve",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["serveonce",{"_index":798,"title":{},"body":{"index.html":{}}}],["server",{"_index":689,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":105,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["set",{"_index":529,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["setclass",{"_index":331,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["setclass(classes",{"_index":332,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["settimeout",{"_index":249,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{}}}],["shared/confirmation",{"_index":484,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["show",{"_index":301,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{}}}],["showemailconfirmation",{"_index":433,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["signal",{"_index":335,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["simple",{"_index":594,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["simpler",{"_index":239,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["size",{"_index":160,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["sm",{"_index":212,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["solution",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":598,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"index.html":{}}}],["spartan",{"_index":197,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"dependencies.html":{}}}],["specific",{"_index":625,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["speed",{"_index":828,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":67,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/login",{"_index":420,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/login.service.ts",{"_index":78,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:44",{"_index":578,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:45",{"_index":575,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:55",{"_index":576,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:68",{"_index":577,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/shared/confirmation",{"_index":292,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":586,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["src/app/user.ts",{"_index":641,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":646,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:3",{"_index":649,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":652,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":647,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":648,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:7",{"_index":650,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:8",{"_index":651,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.development.ts",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":242,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["standalone",{"_index":215,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"changelog.html":{}}}],["start",{"_index":796,"title":{},"body":{"index.html":{}}}],["started",{"_index":663,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["startup",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":564,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["steps",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["store",{"_index":821,"title":{},"body":{"index.html":{}}}],["string",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["studio",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":579,"title":{},"body":{"components/MyUiComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{}}}],["subscribe",{"_index":509,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["subscribe(response",{"_index":132,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["successful",{"_index":102,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["such",{"_index":815,"title":{},"body":{"index.html":{}}}],["suits",{"_index":843,"title":{},"body":{"index.html":{}}}],["support",{"_index":715,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["svg",{"_index":856,"title":{},"body":{"modules.html":{}}}],["table",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["tailwindcss/postcss",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["templateref",{"_index":193,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{}}}],["terranova.client",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["terranova.client.esproj",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["terranovaclient",{"_index":792,"title":{},"body":{"index.html":{}}}],["test",{"_index":831,"title":{},"body":{"index.html":{}}}],["testing",{"_index":837,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":834,"title":{},"body":{"index.html":{}}}],["tests",{"_index":706,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":225,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["there's",{"_index":257,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this._additionalclasses",{"_index":342,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["this._additionalclasses.set(classes",{"_index":407,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["this.buttonclick.emit",{"_index":266,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.cancelled.emit",{"_index":323,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.confirmed.emit",{"_index":322,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.contenttemplate",{"_index":260,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.disabled",{"_index":264,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.elementref.nativeelement.queryselector('button",{"_index":254,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.emailerror",{"_index":522,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.emailexists",{"_index":502,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.formbuilder.group",{"_index":463,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.foundusername",{"_index":515,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.hascontent",{"_index":259,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.http.get",{"_index":617,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.http.get(`${this.usercheckerurl}/${email",{"_index":616,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.http.get(`${this.userinfourl",{"_index":623,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.http.post",{"_index":153,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.http.post(`${this.loginurl",{"_index":145,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.id",{"_index":267,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.isregistering",{"_index":499,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loading",{"_index":265,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.loginform.get('email')?.errors",{"_index":500,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('email')?.value",{"_index":492,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('password')?.value",{"_index":489,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('username')?.errors",{"_index":493,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":487,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.markallastouched",{"_index":556,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.patchvalue",{"_index":531,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":542,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":544,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginservice.login('user@example.com",{"_index":124,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.loginservice.register",{"_index":127,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.registerurl",{"_index":154,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.showemailconfirmation",{"_index":516,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.size",{"_index":340,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["this.usercheckerurl}/${username",{"_index":618,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.userclass",{"_index":341,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["this.usergetterservice",{"_index":507,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.usergetterservice.userexists(email",{"_index":494,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.userinfourl}/${userid",{"_index":638,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.userinfourl}/usernamebyemail/${email",{"_index":640,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.usernamechecked",{"_index":496,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.usernameexist",{"_index":497,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.value",{"_index":268,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.variant",{"_index":339,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["timestamp",{"_index":185,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["token",{"_index":87,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["tools",{"_index":671,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["touched",{"_index":552,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["transition",{"_index":368,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["true",{"_index":180,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":861,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":121,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["ui",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["ui.component.ts",{"_index":581,"title":{},"body":{"components/MyUiComponent.html":{},"coverage.html":{}}}],["ui.service.ts",{"_index":583,"title":{},"body":{"injectables/MyUiService.html":{},"coverage.html":{}}}],["ui.service.ts:6",{"_index":584,"title":{},"body":{"injectables/MyUiService.html":{}}}],["ui/src/lib/button/button.component.ts",{"_index":183,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/button/button.component.ts:40",{"_index":274,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:42",{"_index":287,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:46",{"_index":290,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:47",{"_index":291,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:48",{"_index":289,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:49",{"_index":276,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:50",{"_index":279,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:51",{"_index":277,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:52",{"_index":278,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:53",{"_index":280,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:55",{"_index":281,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:57",{"_index":286,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:59",{"_index":288,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:61",{"_index":282,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:75",{"_index":283,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/my",{"_index":580,"title":{},"body":{"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"coverage.html":{}}}],["undefined",{"_index":210,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["underline",{"_index":393,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":719,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["update",{"_index":546,"title":{},"body":{"components/LoginPageComponent.html":{},"changelog.html":{}}}],["updated",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["updatedata",{"_index":443,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["upon",{"_index":101,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["use",{"_index":537,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["used",{"_index":672,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":88,"title":{"classes/User.html":{}},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/me",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercheckerurl",{"_index":612,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["userclass",{"_index":330,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["userdata",{"_index":149,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userexist",{"_index":593,"title":{"interfaces/UserExist.html":{}},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["userexists",{"_index":589,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userexists(email",{"_index":658,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["usergetter",{"_index":601,"title":{"interfaces/UserGetter.html":{}},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["usergetterservice",{"_index":434,"title":{"injectables/UserGetterService.html":{}},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["userid",{"_index":628,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userinfo",{"_index":622,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userinfourl",{"_index":610,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":464,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["username).subscribe",{"_index":495,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamechecked",{"_index":435,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernameexist",{"_index":436,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernameresponse",{"_index":510,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernameresponse.username",{"_index":511,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamevalue",{"_index":486,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamevalue.trim",{"_index":490,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["users",{"_index":114,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["usevalue",{"_index":176,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["using",{"_index":238,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"index.html":{}}}],["valid",{"_index":562,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validation",{"_index":554,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validationerrors",{"_index":476,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validator",{"_index":477,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validatorfn",{"_index":478,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators",{"_index":479,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.email",{"_index":467,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.minlength(4",{"_index":466,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.required",{"_index":465,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["value",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["valueprovider",{"_index":165,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["variable",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":864,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variance",{"_index":354,"title":{},"body":{"directives/HlmButtonDirective.html":{},"dependencies.html":{}}}],["variant",{"_index":161,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["variantprops",{"_index":352,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{}}}],["variants",{"_index":382,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":794,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visible:outline",{"_index":371,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["visible:ring",{"_index":373,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["visit",{"_index":851,"title":{},"body":{"index.html":{}}}],["visual",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":263,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{}}}],["w",{"_index":404,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["we'll",{"_index":255,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["weather",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["whenever",{"_index":806,"title":{},"body":{"index.html":{}}}],["works",{"_index":241,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/MyUiComponent.html":{}}}],["write",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["wrong",{"_index":600,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["zone.js",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":415,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FrontEnd'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'FrontEnd';\n}\n\n    \n\n    \n        \n\tHome\n\tAbout\n\tContact\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tHome\tAbout\tContact'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the response received after an authentication attempt.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Represents the response received after an authentication attempt.\n * \n * @interface AuthResponse\n * @property {User} user - The authenticated user details.\n * @property {string} token - The JWT token provided upon successful authentication.\n * @property {string} [error] - An optional error message if the authentication fails.\n */\ninterface AuthResponse {\n\tuser: User;\n\ttoken: string;\n\terror?: string;\n}\n\n/**\n * Service responsible for handling user authentication and registration.\n * \n * @remarks\n * This service provides methods to log in and register users by making HTTP requests to the backend API.\n * \n * @example\n * ```typescript\n * constructor(private loginService: LoginService) {}\n * \n * this.loginService.login('user@example.com', 'password123').subscribe(response => {\n *   console.log(response);\n * });\n * \n * this.loginService.register({ email: 'newuser@example.com', password: 'password123' }).subscribe(response => {\n *   console.log(response);\n * });\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LoginService {\n\tprivate loginUrl = environment.loginUrl;\n\tprivate registerUrl = environment.registerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Logs in a user with the provided email and password.\n\t * \n\t * @param email - The email address of the user.\n\t * @param password - The password of the user.\n\t * @returns An observable of the authentication response.\n\t */\n\tlogin(email: string, password: string): Observable {\n\t\treturn this.http.post(`${this.loginUrl}`, {\n\t\t\temail,\n\t\t\tpassword,\n\t\t});\n\t}\n\n\t/**\n\t * Registers a new user with the provided user data.\n\t * \n\t * @param userData - Partial user data containing at least email and password.\n\t * @returns An observable of the authentication response.\n\t */\n\tregister(userData: Partial): Observable {\n\t\treturn this.http.post(\n\t\t\t`${this.registerUrl}`,\n\t\t\tuserData\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BrnButtonConfig.html":{"url":"interfaces/BrnButtonConfig.html","title":"interface - BrnButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BrnButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            variant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         ButtonVariants['size']\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonVariants['size']\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         ButtonVariants['variant']\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonVariants['variant']\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, ValueProvider, inject } from '@angular/core';\nimport type { ButtonVariants } from './hlm-button.directive';\n\nexport interface BrnButtonConfig {\n\tvariant: ButtonVariants['variant'];\n\tsize: ButtonVariants['size'];\n}\n\nconst defaultConfig: BrnButtonConfig = {\n\tvariant: 'default',\n\tsize: 'default',\n};\n\nconst BrnButtonConfigToken = new InjectionToken('BrnButtonConfig');\n\nexport function provideBrnButtonConfig(config: Partial): ValueProvider {\n\treturn { provide: BrnButtonConfigToken, useValue: { ...defaultConfig, ...config } };\n}\n\nexport function injectBrnButtonConfig(): BrnButtonConfig {\n\treturn inject(BrnButtonConfigToken, { optional: true }) ?? defaultConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonClickEvent.html":{"url":"interfaces/ButtonClickEvent.html","title":"interface - ButtonClickEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonClickEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/my-ui/src/lib/button/button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Output,\n  AfterContentInit,\n  ElementRef,\n  OnInit,\n  PLATFORM_ID,\n  Inject,\n  TemplateRef,\n  ContentChild,\n  input\n} from '@angular/core';\nimport { HlmButtonModule } from '@spartan-ng/ui-button-helm';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\n\nexport type ButtonVariant =\n\t| 'link'\n\t| 'default'\n\t| 'destructive'\n\t| 'outline'\n\t| 'secondary'\n\t| 'ghost'\n\t| null\n\t| undefined;\nexport type ButtonSize = 'default' | 'sm' | 'lg' | 'icon';\n\nexport interface ButtonClickEvent {\n\tid?: string;\n\tvalue?: any;\n\ttimestamp: number;\n}\n@Component({\n\tselector: 'my-ui-button',\n\tstandalone: true,\n\timports: [CommonModule, HlmButtonModule],\n\ttemplateUrl: './button.component.html',\n\tstyleUrl: './button.component.scss',\n})\nexport class ButtonComponent implements OnInit {\n\tconstructor(\n\t\tpublic elementRef: ElementRef,\n\t\t@Inject(PLATFORM_ID) private platformId: Object\n\t) {}\n\n\treadonly text = input('Press me');\n\treadonly variant = input('default');\n\treadonly size = input('default');\n\treadonly disabled = input(false);\n\treadonly loading = input(false);\n\treadonly fullWidth = input(false);\n\treadonly id = input();\n\treadonly value = input();\n\n\t@Output() buttonClick = new EventEmitter();\n\n\t@ContentChild(TemplateRef) contentTemplate!: TemplateRef;\n\n\thasContent = false;\n\n\tngOnInit() {\n\t\t// Using a simpler approach that works with SSR\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// In the browser, we can check after the next render cycle\n\t\t\tsetTimeout(() => {\n\t\t\t\t// This is safer than checking DOM content directly\n\t\t\t\tconst button =\n\t\t\t\t\tthis.elementRef.nativeElement.querySelector('button');\n\t\t\t\t// We'll consider it has content if there's anything other than the loading icon\n\t\t\t\tthis.hasContent = !!this.contentTemplate;\n\t\t\t});\n\t\t}\n\t}\n\n\tonClick(event: MouseEvent): void {\n\t\tif (this.disabled() || this.loading()) return;\n\n\t\tthis.buttonClick.emit({\n\t\t\tid: this.id(),\n\t\t\tvalue: this.value(),\n\t\t\ttimestamp: Date.now(),\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/my-ui/src/lib/button/button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-ui-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                HlmButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n            \n                styleUrl\n                ./button.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contentTemplate\n                            \n                            \n                                    Readonly\n                                disabled\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Readonly\n                                fullWidth\n                            \n                            \n                                hasContent\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                loading\n                            \n                            \n                                    Readonly\n                                size\n                            \n                            \n                                    Readonly\n                                text\n                            \n                            \n                                    Readonly\n                                value\n                            \n                            \n                                    Readonly\n                                variant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                fullWidth\n                            \n                            \n                                id\n                            \n                            \n                                loading\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fullWidth\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:53\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:55\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/my-ui/src/lib/button/button.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/my-ui/src/lib/button/button.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contentTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        elementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fullWidth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('default')\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('Press me')\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        variant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('default')\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Output,\n  AfterContentInit,\n  ElementRef,\n  OnInit,\n  PLATFORM_ID,\n  Inject,\n  TemplateRef,\n  ContentChild,\n  input\n} from '@angular/core';\nimport { HlmButtonModule } from '@spartan-ng/ui-button-helm';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\n\nexport type ButtonVariant =\n\t| 'link'\n\t| 'default'\n\t| 'destructive'\n\t| 'outline'\n\t| 'secondary'\n\t| 'ghost'\n\t| null\n\t| undefined;\nexport type ButtonSize = 'default' | 'sm' | 'lg' | 'icon';\n\nexport interface ButtonClickEvent {\n\tid?: string;\n\tvalue?: any;\n\ttimestamp: number;\n}\n@Component({\n\tselector: 'my-ui-button',\n\tstandalone: true,\n\timports: [CommonModule, HlmButtonModule],\n\ttemplateUrl: './button.component.html',\n\tstyleUrl: './button.component.scss',\n})\nexport class ButtonComponent implements OnInit {\n\tconstructor(\n\t\tpublic elementRef: ElementRef,\n\t\t@Inject(PLATFORM_ID) private platformId: Object\n\t) {}\n\n\treadonly text = input('Press me');\n\treadonly variant = input('default');\n\treadonly size = input('default');\n\treadonly disabled = input(false);\n\treadonly loading = input(false);\n\treadonly fullWidth = input(false);\n\treadonly id = input();\n\treadonly value = input();\n\n\t@Output() buttonClick = new EventEmitter();\n\n\t@ContentChild(TemplateRef) contentTemplate!: TemplateRef;\n\n\thasContent = false;\n\n\tngOnInit() {\n\t\t// Using a simpler approach that works with SSR\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// In the browser, we can check after the next render cycle\n\t\t\tsetTimeout(() => {\n\t\t\t\t// This is safer than checking DOM content directly\n\t\t\t\tconst button =\n\t\t\t\t\tthis.elementRef.nativeElement.querySelector('button');\n\t\t\t\t// We'll consider it has content if there's anything other than the loading icon\n\t\t\t\tthis.hasContent = !!this.contentTemplate;\n\t\t\t});\n\t\t}\n\t}\n\n\tonClick(event: MouseEvent): void {\n\t\tif (this.disabled() || this.loading()) return;\n\n\t\tthis.buttonClick.emit({\n\t\t\tid: this.id(),\n\t\t\tvalue: this.value(),\n\t\t\ttimestamp: Date.now(),\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n    \n  \n  \n  {{ text() }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ text() }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationModalComponent.html":{"url":"components/ConfirmationModalComponent.html","title":"component - ConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/confirmation-modal/confirmation-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-modal\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                ButtonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./confirmation-modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                cancelText\n                            \n                            \n                                    Readonly\n                                confirmText\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                highlightedText\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                show\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelled\n                            \n                            \n                                confirmed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelled\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirm\n                        \n                    \n                \n            \n            \n                \nonConfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        cancelText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('Cancel')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        confirmText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('Confirm')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('Basic Description')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('Basic question')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        show\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('basic configuration')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Output, EventEmitter, input } from '@angular/core';\nimport { ButtonComponent } from 'my-ui';\n\n@Component({\n\tselector: 'app-confirmation-modal',\n\timports: [CommonModule, ButtonComponent],\n\ttemplateUrl: './confirmation-modal.component.html',\n\tstyleUrl: './confirmation-modal.component.scss',\n})\nexport class ConfirmationModalComponent {\n\treadonly show = input(false);\n\treadonly title = input('basic configuration');\n\treadonly message = input('Basic question');\n\treadonly description = input('Basic Description');\n\treadonly confirmText = input('Confirm');\n\treadonly cancelText = input('Cancel');\n\treadonly highlightedText = input('');\n\n\t@Output() confirmed = new EventEmitter();\n\t@Output() cancelled = new EventEmitter();\n\n\tonConfirm(): void {\n\t\tthis.confirmed.emit();\n\t}\n\n\tonCancel(): void {\n\t\tthis.cancelled.emit();\n\t}\n}\n//\n    \n\n    \n        \n\t\n\t\t{{ title() }}\n\t\t{{ message() }}\n\t\t\n\t\t\t{{ description() }}\n\t\t\t{{ highlightedText() }}\n\t\t\n\t\t\n\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ title() }}\t\t{{ message() }}\t\t\t\t\t{{ description() }}\t\t\t{{ highlightedText() }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HlmButtonDirective.html":{"url":"directives/HlmButtonDirective.html","title":"directive - HlmButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  HlmButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hlmBtn]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n                    \n                        exportAs\n                        hlmBtn\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _additionalClasses\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _computedClass\n                            \n                            \n                                    Private\n                                    Readonly\n                                _config\n                            \n                            \n                                    Public\n                                    Readonly\n                                size\n                            \n                            \n                                    Public\n                                    Readonly\n                                userClass\n                            \n                            \n                                    Public\n                                    Readonly\n                                variant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setClass\n                        \n                    \n                \n            \n            \n                \nsetClass(classes: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classes\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _additionalClasses\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _computedClass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n\t\thlm(buttonVariants({ variant: this.variant(), size: this.size() }), this.userClass(), this._additionalClasses()),\n\t)\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectBrnButtonConfig()\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(this._config.size)\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userClass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('', { alias: 'class' })\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        variant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(this._config.variant)\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, computed, input, signal } from '@angular/core';\nimport { hlm } from '@spartan-ng/brain/core';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport type { ClassValue } from 'clsx';\nimport { injectBrnButtonConfig } from './hlm-button.token';\n\nexport const buttonVariants = cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\t\t\t\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n\t\t\t\toutline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'underline-offset-4 hover:underline text-primary',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 py-2 px-4',\n\t\t\t\tsm: 'h-9 px-3 rounded-md',\n\t\t\t\tlg: 'h-11 px-8 rounded-md',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n);\nexport type ButtonVariants = VariantProps;\n\n@Directive({\n\tselector: '[hlmBtn]',\n\tstandalone: true,\n\texportAs: 'hlmBtn',\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class HlmButtonDirective {\n\tprivate readonly _config = injectBrnButtonConfig();\n\n\tprivate readonly _additionalClasses = signal('');\n\n\tpublic readonly userClass = input('', { alias: 'class' });\n\n\tprotected readonly _computedClass = computed(() =>\n\t\thlm(buttonVariants({ variant: this.variant(), size: this.size() }), this.userClass(), this._additionalClasses()),\n\t);\n\n\tpublic readonly variant = input(this._config.variant);\n\n\tpublic readonly size = input(this._config.size);\n\n\tsetClass(classes: string): void {\n\t\tthis._additionalClasses.set(classes);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HlmButtonModule.html":{"url":"modules/HlmButtonModule.html","title":"module - HlmButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    HlmButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HlmButtonModule\n\n\n\ncluster_HlmButtonModule_exports\n\n\n\ncluster_HlmButtonModule_imports\n\n\n\n\nHlmButtonDirective\n\nHlmButtonDirective\n\n\n\nHlmButtonModule\n\nHlmButtonModule\n\nHlmButtonModule -->\n\nHlmButtonDirective->HlmButtonModule\n\n\n\n\n\nHlmButtonDirective \n\nHlmButtonDirective \n\nHlmButtonDirective  -->\n\nHlmButtonModule->HlmButtonDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui/ui-button-helm/src/index.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HlmButtonDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HlmButtonDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HlmButtonDirective } from './lib/hlm-button.directive';\nexport * from './lib/hlm-button.token';\n\nexport * from './lib/hlm-button.directive';\n\n@NgModule({\n\timports: [HlmButtonDirective],\n\texports: [HlmButtonDirective],\n})\nexport class HlmButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                ConfirmationModalComponent\n                                ButtonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailError\n                            \n                            \n                                emailExists\n                            \n                            \n                                    Private\n                                formBuilder\n                            \n                            \n                                foundUsername\n                            \n                            \n                                    Private\n                                isRegistering\n                            \n                            \n                                loginForm\n                            \n                            \n                                showEmailConfirmation\n                            \n                            \n                                    Private\n                                userGetterService\n                            \n                            \n                                usernameChecked\n                            \n                            \n                                usernameExist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEmailConfirmation\n                            \n                            \n                                checkEmailExists\n                            \n                            \n                                checkIfUserExist\n                            \n                            \n                                confirmEmailUser\n                            \n                            \n                                dataAvailable\n                            \n                            \n                                registerDiv\n                            \n                            \n                                UpdateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEmailConfirmation\n                        \n                    \n                \n            \n            \n                \ncancelEmailConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Handle user canceling the email confirmation\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmailExists\n                        \n                    \n                \n            \n            \n                \ncheckEmailExists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserExist\n                        \n                    \n                \n            \n            \n                \ncheckIfUserExist()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmEmailUser\n                        \n                    \n                \n            \n            \n                \nconfirmEmailUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Handle user confirming they are the account holder\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataAvailable\n                        \n                    \n                \n            \n            \n                \ndataAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDiv\n                        \n                    \n                \n            \n            \n                \nregisterDiv()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateData\n                        \n                    \n                \n            \n            \n                \nUpdateData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foundUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isRegistering\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n\t\tusername: ['', [Validators.required, Validators.minLength(4)]],\n\t\tpassword: ['', Validators.required],\n\t\temail: ['', Validators.email],\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showEmailConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userGetterService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserGetterService)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameChecked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameExist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { inject } from '@angular/core';\nimport {\n\tAbstractControl,\n\tFormBuilder,\n\tFormGroup,\n\tReactiveFormsModule,\n\tValidationErrors,\n\tValidator,\n\tValidatorFn,\n\tValidators,\n} from '@angular/forms';\nimport { first } from 'rxjs';\nimport { UserGetterService } from '../user-getter.service';\nimport { response } from 'express';\nimport { ConfirmationModalComponent } from '../shared/confirmation-modal/confirmation-modal.component';\nimport { ButtonComponent } from 'my-ui';\n@Component({\n\tselector: 'app-login-page',\n\tstandalone: true,\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tConfirmationModalComponent,\n\t\tButtonComponent,\n\t],\n\ttemplateUrl: './login-page.component.html',\n\tstyleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n\tprivate formBuilder = inject(FormBuilder);\n\tprivate userGetterService = inject(UserGetterService);\n\tprivate isRegistering: boolean = false;\n\tusernameExist: boolean = false;\n\tusernameChecked: string = '';\n\temailExists: boolean = false;\n\temailError: string = '';\n\tshowEmailConfirmation: boolean = false;\n\tfoundUsername: string = '';\n\tloginForm = this.formBuilder.group({\n\t\tusername: ['', [Validators.required, Validators.minLength(4)]],\n\t\tpassword: ['', Validators.required],\n\t\temail: ['', Validators.email],\n\t});\n\tdataAvailable(): boolean {\n\t\tconst usernameValue: string =\n\t\t\tthis.loginForm.get('username')?.value || '';\n\t\tconst passwordValue: string =\n\t\t\tthis.loginForm.get('password')?.value || '';\n\t\treturn !!(\n\t\t\tusernameValue &&\n\t\t\tpasswordValue &&\n\t\t\tusernameValue.trim() !== '' &&\n\t\t\tpasswordValue.trim() !== ''\n\t\t);\n\t}\n\tcheckIfUserExist(): void {\n\t\tconst username: string | null =\n\t\t\tthis.loginForm.get('username')?.value || '';\n\t\tconst email: string | null = this.loginForm.get('email')?.value || '';\n\n\t\tif (!username && !email && !this.loginForm.get('username')?.errors)\n\t\t\treturn;\n\t\tthis.userGetterService.userExists(email, username).subscribe({\n\t\t\tnext: (response) => {\n\t\t\t\tif (username) {\n\t\t\t\t\tthis.usernameChecked = username;\n\t\t\t\t\tthis.usernameExist = response.userExists;\n\t\t\t\t\tif (!this.usernameExist) {\n\t\t\t\t\t\tthis.isRegistering = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\tcheckEmailExists(): void {\n\t\tconst email = this.loginForm.get('email')?.value;\n\n\t\tif (email && !this.loginForm.get('email')?.errors) {\n\t\t\tthis.userGetterService.userExists(email, null).subscribe({\n\t\t\t\tnext: (response) => {\n\t\t\t\t\tthis.emailExists = response.userExists;\n\n\t\t\t\t\tif (this.emailExists) {\n\t\t\t\t\t\t// Email exists, get the username but don't auto-fill\n\t\t\t\t\t\tthis.userGetterService\n\t\t\t\t\t\t\t.getUsernameByEmail(email)\n\t\t\t\t\t\t\t.subscribe({\n\t\t\t\t\t\t\t\tnext: (usernameResponse) => {\n\t\t\t\t\t\t\t\t\tif (usernameResponse.username) {\n\t\t\t\t\t\t\t\t\t\t// Show confirmation dialog instead of auto-filling\n\t\t\t\t\t\t\t\t\t\tthis.foundUsername =\n\t\t\t\t\t\t\t\t\t\t\tusernameResponse.username;\n\t\t\t\t\t\t\t\t\t\tthis.showEmailConfirmation = true;\n\t\t\t\t\t\t\t\t\t\tconsole.log('email already present');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: (error) => {\n\t\t\t\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\t\t\t'Error retrieving username:',\n\t\t\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.emailError =\n\t\t\t\t\t\t\t\t\t\t'Error retrieving account information.';\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Email doesn't exist, which is fine for registration\n\t\t\t\t\t\tthis.emailError = '';\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: (error) => {\n\t\t\t\t\tconsole.error('Error checking email existence:', error);\n\t\t\t\t\tthis.emailError = 'Error checking email.';\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Handle user confirming they are the account holder\n\t */\n\tconfirmEmailUser(): void {\n\t\t// Set the username from the found account\n\t\tthis.loginForm.patchValue({\n\t\t\tusername: this.foundUsername,\n\t\t});\n\t\tthis.usernameChecked = this.foundUsername;\n\t\tthis.usernameExist = true;\n\n\t\t// Hide the confirmation dialog\n\t\tthis.showEmailConfirmation = false;\n\n\t\t// Focus on the password field\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById('password')?.focus();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * Handle user canceling the email confirmation\n\t */\n\tcancelEmailConfirmation(): void {\n\t\t// Hide the confirmation dialog\n\t\tthis.showEmailConfirmation = false;\n\n\t\t// Clear the email field\n\t\tthis.loginForm.patchValue({\n\t\t\temail: '',\n\t\t});\n\n\t\t// Show error message\n\t\tthis.emailError =\n\t\t\t'This email is already in use. Please use a different email.';\n\n\t\t// Focus back on the email field\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById('email')?.focus();\n\t\t}, 100);\n\t}\n\n\tUpdateData(): void {\n\t\tif (this.loginForm.valid) {\n\t\t\tconsole.log('Form data:', this.loginForm.value);\n\t\t\t// You could do your real update logic here\n\t\t} else {\n\t\t\tconsole.log('Form is invalid');\n\t\t\t// Mark all fields as touched to display validation errors\n\t\t\tthis.loginForm.markAllAsTouched();\n\t\t}\n\t}\n\tregisterDiv(): boolean {\n\t\treturn !this.usernameExist && this.usernameChecked !== '';\n\t  }\n}\n\n    \n\n    \n        \n\tLogin Page\n\n\t\n\t\t\n\t\t\n\t\t\tUsername:\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tUsername is required\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tUsername must be at least 4 characters\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tUser exists. Please enter password to login.\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tUsername not found. Please complete registration.\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\tFull Email:\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tPlease enter a valid email\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t{{ emailError }}\n\t\t\t\n\t\t\n\n\t\t\n\n\t\t\n\t\t\tPassword:\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tPassword is required\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\n\t\t\t\n\n\t\t\t\n\t\t\n\t\n\n\tForm Status: {{ loginForm.status }}\n\t\n\t\n\tciao\n\t\n\n\n\n\n\tForm Data:\n\tUsername = {{ loginForm.get(\"username\")?.value || \"\" }}\n\tPassword = {{ loginForm.get(\"password\")?.value || \"\" }}\n\tEmail Provider = {{ loginForm.get(\"email.provider\")?.value || \"\" }}\n\tEmail = {{ loginForm.get(\"email.emailString\")?.value || \"\" }}\n\n\n\n\tComplete the form to see data\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tLogin Page\t\t\t\t\t\t\t\tUsername:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUsername is required\t\t\t\t\t\t\t\t\t\t\t\t\tUsername must be at least 4 characters\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser exists. Please enter password to login.\t\t\t\t\t\t\t\t\t\t\t\t\tUsername not found. Please complete registration.\t\t\t\t\t\t\t\t\t\t\t\t\t\tFull Email:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPlease enter a valid email\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ emailError }}\t\t\t\t\t\t\t\t\t\t\t\tPassword:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPassword is required\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tForm Status: {{ loginForm.status }}\t\t\tciao\t\tForm Data:\tUsername = {{ loginForm.get(\"username\")?.value || \"\" }}\tPassword = {{ loginForm.get(\"password\")?.value || \"\" }}\tEmail Provider = {{ loginForm.get(\"email.provider\")?.value || \"\" }}\tEmail = {{ loginForm.get(\"email.emailString\")?.value || \"\" }}\tComplete the form to see data'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for handling user authentication and registration.\nThis service provides methods to log in and register users by making HTTP requests to the backend API.\nExample :```typescript\nconstructor(private loginService: LoginService) {}Example :  console.log(response);\n});Example :  console.log(response);\n});Example :\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loginUrl\n                            \n                            \n                                    Private\n                                registerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Logs in a user with the provided email and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email address of the user.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the authentication response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the provided user data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPartial user data containing at least email and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the authentication response.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.loginUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/login.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.registerUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/login.service.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Represents the response received after an authentication attempt.\n * \n * @interface AuthResponse\n * @property {User} user - The authenticated user details.\n * @property {string} token - The JWT token provided upon successful authentication.\n * @property {string} [error] - An optional error message if the authentication fails.\n */\ninterface AuthResponse {\n\tuser: User;\n\ttoken: string;\n\terror?: string;\n}\n\n/**\n * Service responsible for handling user authentication and registration.\n * \n * @remarks\n * This service provides methods to log in and register users by making HTTP requests to the backend API.\n * \n * @example\n * ```typescript\n * constructor(private loginService: LoginService) {}\n * \n * this.loginService.login('user@example.com', 'password123').subscribe(response => {\n *   console.log(response);\n * });\n * \n * this.loginService.register({ email: 'newuser@example.com', password: 'password123' }).subscribe(response => {\n *   console.log(response);\n * });\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LoginService {\n\tprivate loginUrl = environment.loginUrl;\n\tprivate registerUrl = environment.registerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Logs in a user with the provided email and password.\n\t * \n\t * @param email - The email address of the user.\n\t * @param password - The password of the user.\n\t * @returns An observable of the authentication response.\n\t */\n\tlogin(email: string, password: string): Observable {\n\t\treturn this.http.post(`${this.loginUrl}`, {\n\t\t\temail,\n\t\t\tpassword,\n\t\t});\n\t}\n\n\t/**\n\t * Registers a new user with the provided user data.\n\t * \n\t * @param userData - Partial user data containing at least email and password.\n\t * @returns An observable of the authentication response.\n\t */\n\tregister(userData: Partial): Observable {\n\t\treturn this.http.post(\n\t\t\t`${this.registerUrl}`,\n\t\t\tuserData\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyUiComponent.html":{"url":"components/MyUiComponent.html","title":"component - MyUiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyUiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/my-ui/src/lib/my-ui.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-myUi\n            \n\n\n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n  my-ui works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-myUi',\n  imports: [],\n  template: `\n    \n      my-ui works!\n    \n  `,\n  styles: ``\n})\nexport class MyUiComponent {\n\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  my-ui works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'MyUiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MyUiService.html":{"url":"injectables/MyUiService.html","title":"injectable - MyUiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MyUiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/my-ui/src/lib/my-ui.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/my-ui/src/lib/my-ui.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyUiService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartialUserResponse.html":{"url":"interfaces/PartialUserResponse.html","title":"interface - PartialUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PartialUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Response interface for partial user data requests\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            userData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userData:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\n\n/**\n * Simple respone for user infomation\n * @property user - the user returned by the response\n * @property errors - Optional errors if something goes wrong\n */\ninterface UserGetter {\n\tuser: User;\n\terrors?: string;\n}\n\n/**\n * Response interface for partial user data requests\n * @property userData - Selected user fields\n * @property errors - Array of error messages if issues occur\n */\ninterface PartialUserResponse {\n\tuserData: Partial;\n\terrors?: string[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * Service to handle user information\n * Checks with the Auth API for the user existance and info\n */\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Check if a user with provided credentials exist\n\t * @param email - Email to check if a corresponding user exists\n\t * @param username - Username to check if a corresponding user exists\n\t * @returns Observable - Observable that returns the user existence\n\t */\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n\n\tuserInfo(): Observable {\n\t\treturn this.http.get(`${this.userInfoUrl}`);\n\t}\n\n\t/**\n\t * Retrieves specific user fields to minimize payload size\n\t * @param userId - ID of the user to retrieve\n\t * @param fields - Array of field names to include in response\n\t * @returns Observable containing requested user fields and possible error messages\n\t */\n\tgetUserPartial(\n\t\tuserId: string,\n\t\tfields: string[]\n\t): Observable {\n\t\tconst params = new HttpParams().set('fields', fields.join(','));\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/${userId}`,\n\t\t\t{ params }\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the username associated with the provided email\n\t * @param email - Email of the user to retrieve the username for\n\t * @returns Observable containing the username and possible error messages\n\t */\n\tgetUsernameByEmail(email: string): Observable {\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/usernameByEmail/${email}`\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                role\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, username: string, email: string, firstName: string, lastName: string, role: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        role\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\tconstructor(\n\t\tpublic id: number,\n\t\tpublic username: string,\n\t\tpublic email: string,\n\t\tpublic firstName: string,\n\t\tpublic lastName: string,\n\t\tpublic role: string\n\t) {\n\t\t\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserExist.html":{"url":"interfaces/UserExist.html","title":"interface - UserExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Response interface for user existence check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userExists\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userExists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userExists:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\n\n/**\n * Simple respone for user infomation\n * @property user - the user returned by the response\n * @property errors - Optional errors if something goes wrong\n */\ninterface UserGetter {\n\tuser: User;\n\terrors?: string;\n}\n\n/**\n * Response interface for partial user data requests\n * @property userData - Selected user fields\n * @property errors - Array of error messages if issues occur\n */\ninterface PartialUserResponse {\n\tuserData: Partial;\n\terrors?: string[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * Service to handle user information\n * Checks with the Auth API for the user existance and info\n */\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Check if a user with provided credentials exist\n\t * @param email - Email to check if a corresponding user exists\n\t * @param username - Username to check if a corresponding user exists\n\t * @returns Observable - Observable that returns the user existence\n\t */\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n\n\tuserInfo(): Observable {\n\t\treturn this.http.get(`${this.userInfoUrl}`);\n\t}\n\n\t/**\n\t * Retrieves specific user fields to minimize payload size\n\t * @param userId - ID of the user to retrieve\n\t * @param fields - Array of field names to include in response\n\t * @returns Observable containing requested user fields and possible error messages\n\t */\n\tgetUserPartial(\n\t\tuserId: string,\n\t\tfields: string[]\n\t): Observable {\n\t\tconst params = new HttpParams().set('fields', fields.join(','));\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/${userId}`,\n\t\t\t{ params }\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the username associated with the provided email\n\t * @param email - Email of the user to retrieve the username for\n\t * @returns Observable containing the username and possible error messages\n\t */\n\tgetUsernameByEmail(email: string): Observable {\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/usernameByEmail/${email}`\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserGetter.html":{"url":"interfaces/UserGetter.html","title":"interface - UserGetter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserGetter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Simple respone for user infomation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\n\n/**\n * Simple respone for user infomation\n * @property user - the user returned by the response\n * @property errors - Optional errors if something goes wrong\n */\ninterface UserGetter {\n\tuser: User;\n\terrors?: string;\n}\n\n/**\n * Response interface for partial user data requests\n * @property userData - Selected user fields\n * @property errors - Array of error messages if issues occur\n */\ninterface PartialUserResponse {\n\tuserData: Partial;\n\terrors?: string[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * Service to handle user information\n * Checks with the Auth API for the user existance and info\n */\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Check if a user with provided credentials exist\n\t * @param email - Email to check if a corresponding user exists\n\t * @param username - Username to check if a corresponding user exists\n\t * @returns Observable - Observable that returns the user existence\n\t */\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n\n\tuserInfo(): Observable {\n\t\treturn this.http.get(`${this.userInfoUrl}`);\n\t}\n\n\t/**\n\t * Retrieves specific user fields to minimize payload size\n\t * @param userId - ID of the user to retrieve\n\t * @param fields - Array of field names to include in response\n\t * @returns Observable containing requested user fields and possible error messages\n\t */\n\tgetUserPartial(\n\t\tuserId: string,\n\t\tfields: string[]\n\t): Observable {\n\t\tconst params = new HttpParams().set('fields', fields.join(','));\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/${userId}`,\n\t\t\t{ params }\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the username associated with the provided email\n\t * @param email - Email of the user to retrieve the username for\n\t * @returns Observable containing the username and possible error messages\n\t */\n\tgetUsernameByEmail(email: string): Observable {\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/usernameByEmail/${email}`\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGetterService.html":{"url":"injectables/UserGetterService.html","title":"injectable - UserGetterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserGetterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userCheckerUrl\n                            \n                            \n                                    Private\n                                userInfoUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsernameByEmail\n                            \n                            \n                                getUserPartial\n                            \n                            \n                                userExists\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-getter.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsernameByEmail\n                        \n                    \n                \n            \n            \n                \ngetUsernameByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Retrieves the username associated with the provided email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEmail of the user to retrieve the username for\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable containing the username and possible error messages\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserPartial\n                        \n                    \n                \n            \n            \n                \ngetUserPartial(userId: string, fields: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Retrieves specific user fields to minimize payload size\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the user to retrieve\n\n\n                                            \n                                        \n                                        \n                                                fields\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nArray of field names to include in response\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable containing requested user fields and possible error messages\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userExists\n                        \n                    \n                \n            \n            \n                \nuserExists(email: string | null, username: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Check if a user with provided credentials exist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEmail to check if a corresponding user exists\n\n\n                                            \n                                        \n                                        \n                                                username\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUsername to check if a corresponding user exists\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable - Observable that returns the user existence\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userCheckerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.userCheckerUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/user-getter.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userInfoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.userInfoUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/user-getter.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\n\n/**\n * Simple respone for user infomation\n * @property user - the user returned by the response\n * @property errors - Optional errors if something goes wrong\n */\ninterface UserGetter {\n\tuser: User;\n\terrors?: string;\n}\n\n/**\n * Response interface for partial user data requests\n * @property userData - Selected user fields\n * @property errors - Array of error messages if issues occur\n */\ninterface PartialUserResponse {\n\tuserData: Partial;\n\terrors?: string[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * Service to handle user information\n * Checks with the Auth API for the user existance and info\n */\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Check if a user with provided credentials exist\n\t * @param email - Email to check if a corresponding user exists\n\t * @param username - Username to check if a corresponding user exists\n\t * @returns Observable - Observable that returns the user existence\n\t */\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n\n\tuserInfo(): Observable {\n\t\treturn this.http.get(`${this.userInfoUrl}`);\n\t}\n\n\t/**\n\t * Retrieves specific user fields to minimize payload size\n\t * @param userId - ID of the user to retrieve\n\t * @param fields - Array of field names to include in response\n\t * @returns Observable containing requested user fields and possible error messages\n\t */\n\tgetUserPartial(\n\t\tuserId: string,\n\t\tfields: string[]\n\t): Observable {\n\t\tconst params = new HttpParams().set('fields', fields.join(','));\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/${userId}`,\n\t\t\t{ params }\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the username associated with the provided email\n\t * @param email - Email of the user to retrieve the username for\n\t * @returns Observable containing the username and possible error messages\n\t */\n\tgetUsernameByEmail(email: string): Observable {\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/usernameByEmail/${email}`\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nThis file explains how Visual Studio created the project.\nThe following tools were used to generate this project:\n\nAngular CLI (ng)\n\nThe following steps were used to generate this project:\n\nCreate Angular project with ng: ng new terranova.client --defaults --skip-install --skip-git --no-standalone .\nAdd proxy.conf.js to proxy calls to the backend ASP.NET server.\nAdd aspnetcore-https.js script to install https certs.\nUpdate package.json to call aspnetcore-https.js and serve with https.\nUpdate angular.json to point to proxy.conf.js.\nUpdate app.component.ts component to fetch and display weather information.\nModify app.component.spec.ts with updated tests.\nUpdate app.module.ts to import the HttpClientModule.\nCreate project file (terranova.client.esproj).\nCreate launch.json to enable debugging.\nUpdate package.json to add jest-editor-support.\nUpdate package.json to add run-script-os.\nAdd karma.conf.js for unit tests.\nUpdate angular.json to point to karma.conf.js.\nAdd project to solution.\nUpdate proxy endpoint to be the backend server endpoint.\nAdd project to the startup projects list.\nWrite this file.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n            \n            directive\n            HlmButtonDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n            \n            variable\n            buttonVariants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n            \n            type alias\n            ButtonVariants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            interface\n            BrnButtonConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            function\n            injectBrnButtonConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            function\n            provideBrnButtonConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            variable\n            BrnButtonConfigToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            variable\n            defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/my-ui/src/lib/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/my-ui/src/lib/button/button.component.ts\n            \n            interface\n            ButtonClickEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        projects/my-ui/src/lib/button/button.component.ts\n            \n            type alias\n            ButtonSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/my-ui/src/lib/button/button.component.ts\n            \n            type alias\n            ButtonVariant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/my-ui/src/lib/my-ui.component.ts\n            \n            component\n            MyUiComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/my-ui/src/lib/my-ui.service.ts\n            \n            injectable\n            MyUiService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            interface\n            AuthResponse\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/confirmation-modal/confirmation-modal.component.ts\n            \n            component\n            ConfirmationModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            injectable\n            UserGetterService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            interface\n            PartialUserResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            interface\n            UserExist\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            interface\n            UserGetter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 19.2.3\n        \n            @angular/common : ^19.2.2\n        \n            @angular/compiler : ^19.2.2\n        \n            @angular/core : ^19.2.2\n        \n            @angular/forms : ^19.2.2\n        \n            @angular/platform-browser : ^19.2.2\n        \n            @angular/platform-browser-dynamic : ^19.2.2\n        \n            @angular/platform-server : ^19.2.2\n        \n            @angular/router : ^19.2.2\n        \n            @angular/ssr : ^19.2.3\n        \n            @spartan-ng/brain : 0.0.1-alpha.424\n        \n            @tailwindcss/postcss : ^4.0.14\n        \n            class-variance-authority : ^0.7.1\n        \n            clsx : ^2.1.1\n        \n            express : ^4.21.2\n        \n            jest-editor-support : *\n        \n            postcss : ^8.5.3\n        \n            run-script-os : *\n        \n            rxjs : ~7.8.2\n        \n            tslib : ^2.8.1\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            injectBrnButtonConfig   (libs/.../hlm-button.token.ts)\n                        \n                        \n                            provideBrnButtonConfig   (libs/.../hlm-button.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        injectBrnButtonConfig\n                        \n                    \n                \n            \n            \n                \ninjectBrnButtonConfig()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         BrnButtonConfig\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideBrnButtonConfig\n                        \n                    \n                \n            \n            \n                \nprovideBrnButtonConfig(config: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTerranovaClient\nThis project was generated using Angular CLI version 19.2.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HlmButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HlmButtonModule\n\n\n\ncluster_HlmButtonModule_imports\n\n\n\ncluster_HlmButtonModule_exports\n\n\n\n\nHlmButtonDirective\n\nHlmButtonDirective\n\n\n\nHlmButtonModule\n\nHlmButtonModule\n\nHlmButtonModule -->\n\nHlmButtonDirective->HlmButtonModule\n\n\n\n\n\nHlmButtonDirective \n\nHlmButtonDirective \n\nHlmButtonDirective  -->\n\nHlmButtonModule->HlmButtonDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ButtonSize   (projects/.../button.component.ts)\n                        \n                        \n                            ButtonVariant   (projects/.../button.component.ts)\n                        \n                        \n                            ButtonVariants   (libs/.../hlm-button.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/my-ui/src/lib/button/button.component.ts\n    \n    \n        \n            \n                \n                    \n                    ButtonSize\n                \n            \n            \n                \n                        \"default\" | \"sm\" | \"lg\" | \"icon\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ButtonVariant\n                \n            \n            \n                \n                        \"link\" | \"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | null | undefined\n\n                \n            \n        \n    \n    libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n    \n    \n        \n            \n                \n                    \n                    ButtonVariants\n                \n            \n            \n                \n                        VariantProps<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            BrnButtonConfigToken   (libs/.../hlm-button.token.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            buttonVariants   (libs/.../hlm-button.directive.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            defaultConfig   (libs/.../hlm-button.token.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproviders: [\n\t\tprovideZoneChangeDetection({ eventCoalescing: true }),\n\t\tprovideRouter(routes),\n\t\tprovideClientHydration(withEventReplay()),\n\t\tprovideHttpClient(withFetch()),\n\t],\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BrnButtonConfigToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('BrnButtonConfig')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BrnButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n\tvariant: 'default',\n\tsize: 'default',\n}\n                    \n                \n\n\n        \n    \n\n    libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buttonVariants\n                        \n                    \n                \n            \n                \n                    \n                        Default value : cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\t\t\t\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n\t\t\t\toutline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'underline-offset-4 hover:underline text-primary',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 py-2 px-4',\n\t\t\t\tsm: 'h-9 px-3 rounded-md',\n\t\t\t\tlg: 'h-11 px-8 rounded-md',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  authUrl: '/auth',\n  loginUrl: '/login',\n  registerUrl: '/register',\n  userInfoUrl: '/user/me',\n  userCheckerUrl: '/user',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproduction: true,\n\tauthUrl: 'localhost:8000',\n\tloginUrl: 'localhost:8000/login',\n\tregisterUrl: 'localhost:8000/register',\n\tuserInfoUrl: 'localhost:8000/user/me',\n\tuserCheckerUrl: 'localhost:8000/user',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
