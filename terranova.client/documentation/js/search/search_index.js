var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.724,1,1.338]],["body/components/AppComponent.html",[0,0.64,1,1.384,2,0.917,3,0.185,4,0.162,5,0.681,6,0.681,7,0.681,8,0.162,9,1.018,10,0.609,11,1.857,12,1.77,13,0.828,14,0.917,15,2.671,16,1.14,17,2.07,18,1.14,19,2.07,20,0.162,21,0.398,22,4.102,23,0.162,24,0.04,25,0.296,26,0.329,27,0.447,28,1.704,29,0.447,30,1.236,31,0.353,32,0.185,33,1.018,34,0.185,35,0.118,36,1.704,37,4.189,38,4.189,39,2.07,40,2.07,41,2.07,42,3.761,43,4.496,44,2.07,45,2.07,46,2.07,47,3.124,48,2.07,49,2.07,50,2.07,51,3.761,52,4.907,53,2.07,54,2.07,55,2.07,56,3.124,57,5.169,58,2.07,59,2.07,60,2.07,61,3.761,62,2.07,63,2.07,64,2.07,65,4.907,66,3.761,67,2.07,68,2.07,69,2.07,70,3.124,71,2.07,72,2.07,73,2.07,74,3.124,75,2.07,76,2.07,77,2.07,78,4.189,79,3.124,80,4.727,81,3.124,82,2.07,83,3.211,84,3.701,85,1.936,86,3.468,87,3.124,88,2.07,89,5.63,90,3.57,91,3.782,92,3.761,93,3.761,94,4.189,95,3.124,96,3.124,97,4.727,98,2.376,99,3.124,100,3.124,101,3.124,102,3.124,103,3.124,104,4.907,105,4.189,106,3.124,107,3.761,108,3.124,109,2.659,110,2.07,111,3.124,112,2.07,113,2.07,114,2.07,115,2.07,116,3.124,117,1.021,118,2.07,119,3.124,120,3.124,121,3.124,122,4.189,123,3.124,124,3.124,125,2.07,126,5.169,127,2.07,128,3.124,129,2.07,130,5.051,131,2.07,132,3.701,133,3.57,134,2.208,135,3.468,136,2.961,137,4.189,138,2.961,139,3.761,140,2.07,141,2.07,142,2.07,143,2.07,144,2.659,145,2.07,146,4.189,147,2.07,148,2.07,149,2.07,150,2.07,151,2.07,152,2.07,153,3.761,154,2.07,155,3.761,156,3.124,157,3.124,158,3.178,159,2.659,160,2.07,161,4.907,162,3.124,163,3.124,164,2.571,165,3.124,166,3.124,167,2.07,168,3.124,169,3.124,170,2.571,171,3.124,172,2.07,173,3.124,174,2.07,175,2.07,176,2.07,177,2.208,178,3.124,179,3.124,180,2.07,181,2.07,182,2.07,183,2.07,184,2.07,185,1.14,186,2.07,187,1.463,188,2.07,189,2.07,190,4.496,191,4.496,192,1.704,193,1.463,194,1.283,195,1.283,196,2.571,197,2.07,198,3.761,199,3.761,200,2.07,201,2.571,202,3.097,203,2.07,204,2.07,205,2.07,206,2.07,207,2.07,208,2.07,209,1.704,210,2.07,211,2.07,212,3.124,213,2.215,214,2.07,215,2.07,216,2.07,217,2.07,218,1.463,219,2.07,220,2.07,221,1.384,222,2.07,223,2.07,224,2.07,225,2.07,226,3.124,227,0.548,228,1.14,229,1.14,230,0.447,231,0.681,232,0.873,233,0.681,234,0.494,235,0.681,236,0.548,237,0.681,238,0.681,239,0.548,240,0.609,241,0.681,242,0.548,243,0.681,244,0.681,245,0.548,246,0.404,247,0.609,248,0.681,249,0.013,250,0.013]],["title/interfaces/AuthResponse.html",[251,0.514,252,1.871]],["body/interfaces/AuthResponse.html",[3,0.44,4,0.383,8,0.383,13,1.172,20,0.383,21,0.771,23,0.599,24,0.041,25,1.365,31,0.878,32,0.44,34,0.44,35,0.279,221,1.778,249,0.026,250,0.026,251,0.684,252,2.837,253,1.299,254,2.072,255,1.299,256,3.304,257,2.181,258,3.304,259,4.486,260,3.304,261,1.219,262,2.359,263,4.381,264,1.957,265,1.185,266,1.172,267,1.444,268,1.977,269,1.444,270,2.539,271,1.172,272,2.254,273,2.413,274,2.413,275,2.413,276,2.254,277,2.413,278,2.413,279,1.817,280,2.413,281,2.413,282,2.413,283,2.072,284,2.413,285,2.413,286,1.299,287,2.413,288,2.072,289,2.413,290,2.413,291,1.977,292,1.444,293,2.413,294,1.444,295,2.072,296,2.413,297,1.605,298,2.837,299,2.413,300,2.413,301,3.304,302,2.413,303,2.128,304,2.413,305,3.852,306,2.413,307,2.413,308,1.299,309,1.605,310,2.072,311,2.413,312,2.072,313,2.413,314,2.413,315,2.254,316,2.413,317,1.185,318,2.413,319,1.311,320,2.413,321,2.413,322,0.703,323,1.778,324,1.977,325,1.605,326,1.444,327,2.413,328,2.413,329,2.413]],["title/interfaces/BrnButtonConfig.html",[251,0.514,330,1.661]],["body/interfaces/BrnButtonConfig.html",[3,0.587,4,0.512,8,0.512,20,0.512,21,0.93,23,0.688,24,0.04,26,1.291,31,0.825,32,0.587,34,0.789,117,1.847,249,0.031,250,0.031,251,0.667,253,1.734,261,1.043,319,1.583,322,0.938,325,1.565,330,3.027,331,1.734,332,1.414,333,1.928,334,2.426,335,3.111,336,5.262,337,5.262,338,3.913,339,3.988,340,3.221,341,2.154,342,3.221,343,3.221,344,1.751,345,3.72,346,3.424,347,3.221,348,3.424,349,3.221,350,3.913,351,3.913,352,2.426,353,2.426,354,3.913,355,1.734]],["title/interfaces/ButtonClickEvent.html",[251,0.514,356,1.871]],["body/interfaces/ButtonClickEvent.html",[0,1.002,3,0.467,4,0.407,8,0.407,11,1.379,14,1.379,16,1.713,18,1.713,20,0.407,21,0.802,23,0.688,24,0.04,25,1.209,26,1.344,27,1.958,31,0.804,32,0.467,34,0.757,35,0.297,98,1.533,117,1.017,135,2.2,185,2.3,213,1.533,234,1.244,249,0.027,250,0.027,251,0.53,253,1.379,261,1.344,297,1.244,319,1.365,322,0.746,332,1.51,335,1.713,344,1.51,355,1.379,356,2.59,357,1.533,358,1.929,359,2.401,360,4.331,361,3.335,362,2.954,363,3.137,364,2.954,365,3.44,366,3.884,367,2.059,368,1.929,369,2.562,370,2.562,371,2.59,372,1.713,373,2.59,374,1.713,375,1.713,376,1.713,377,1.713,378,1.244,379,2.2,380,2.59,381,1.713,382,1.713,383,1.713,384,1.713,385,2.562,386,2.562,387,2.562,388,2.562,389,2.562,390,1.823,391,2.562,392,2.562,393,2.562,394,2.562,395,2.562,396,1.379,397,2.562,398,2.2,399,3.44,400,2.562,401,3.44,402,2.562,403,2.562,404,3.44,405,2.562,406,3.44,407,2.562,408,2.562,409,2.562,410,2.562,411,2.562,412,2.562,413,2.562,414,2.562,415,1.713,416,2.562,417,2.562,418,2.562,419,2.562,420,2.562,421,2.562]],["title/components/ButtonComponent.html",[0,0.724,234,1.207]],["body/components/ButtonComponent.html",[0,0.977,1,1.05,2,1.53,3,0.355,4,0.31,5,1.304,6,1.304,7,1.304,8,0.31,10,1.167,11,2.328,12,1.805,14,1.53,16,1.9,18,1.9,20,0.31,21,0.663,23,0.736,24,0.04,25,1.073,26,1.5,27,2.015,29,2.034,31,0.694,32,0.355,34,0.671,35,0.226,83,2.463,98,2.007,117,1.331,135,1.675,185,2.733,213,1.167,227,1.05,228,1.9,229,1.9,230,0.856,231,1.304,232,1.554,233,1.304,234,1.789,235,1.304,236,1.05,237,1.304,238,1.304,239,1.05,240,1.167,241,1.304,242,1.05,243,1.304,244,1.304,245,1.05,246,0.774,247,1.167,248,1.304,249,0.022,250,0.022,251,0.404,261,0.92,286,1.53,297,0.947,317,1.019,319,1.128,322,0.568,332,1.472,335,2.242,344,1.248,355,1.53,356,1.469,357,2.796,358,1.469,359,2.108,360,2.842,361,1.675,362,2.879,363,2.949,364,2.44,365,3.353,366,4.088,367,2.007,368,1.469,369,1.95,370,1.95,371,2.525,372,1.304,373,2.525,374,1.304,375,1.304,376,1.304,377,1.304,378,0.947,379,1.675,380,2.525,381,1.304,382,1.304,383,1.304,384,1.9,385,2.842,386,2.842,387,2.842,388,2.842,389,3.353,390,1.898,391,3.353,392,3.353,393,3.353,394,3.353,395,3.684,396,1.05,397,1.95,398,1.675,399,2.842,400,1.95,401,2.842,402,1.95,403,1.95,404,2.842,405,1.95,406,2.842,407,1.95,408,1.95,409,1.95,410,1.95,411,1.95,412,1.95,413,2.842,414,3.353,415,2.242,416,1.95,417,1.95,418,1.95,419,1.95,420,1.95,421,1.95,422,3.452,423,2.842,424,2.842,425,1.304,426,2.369,427,2.369,428,1.701,429,1.805,430,2.369,431,2.369,432,2.369,433,2.369,434,2.369,435,2.369,436,2.369,437,2.369,438,2.369,439,2.369,440,2.369,441,2.369,442,2.369]],["title/components/ConfirmationModalComponent.html",[0,0.724,236,1.338]],["body/components/ConfirmationModalComponent.html",[0,1.043,1,1.182,2,1.665,3,0.4,4,0.349,5,1.468,6,1.468,7,1.468,8,0.349,10,1.314,11,2.402,12,2.207,14,1.665,16,2.068,18,2.068,20,0.349,22,4.1,23,0.721,24,0.04,25,1.239,26,1.414,27,1.918,29,2.041,31,0.741,32,0.4,34,0.4,35,0.254,83,2.6,98,1.851,227,1.182,228,2.068,229,2.068,230,0.964,231,1.468,232,1.422,233,1.468,234,1.889,235,1.468,236,2.093,237,2.922,238,1.468,239,1.182,240,1.314,241,1.468,242,1.182,243,1.468,244,1.468,245,1.182,246,0.871,247,1.314,248,1.468,249,0.024,250,0.024,255,2.353,279,3.087,286,1.665,317,1.11,322,0.901,355,1.665,362,3.52,363,2.984,364,3.075,371,2.697,372,1.468,384,2.068,390,1.358,415,2.6,423,3.093,424,3.093,429,1.182,443,4.693,444,4.03,445,2.195,446,3.757,447,3.757,448,3.757,449,4.724,450,4.724,451,4.351,452,4.351,453,4.98,454,3.582,455,4.351,456,4.351,457,3.757,458,2.667,459,3.757,460,2.667,461,5.166,462,2.667,463,2.667,464,3.757,465,2.667,466,2.667,467,3.757,468,2.667,469,2.667,470,2.667,471,2.667,472,2.667,473,2.667,474,2.667]],["title/directives/HlmButtonDirective.html",[230,1.091,246,0.986]],["body/directives/HlmButtonDirective.html",[3,0.374,4,0.326,8,0.326,10,1.228,11,1.587,20,0.326,21,0.687,23,0.599,24,0.04,25,1.005,26,1.467,27,1.826,29,1.881,31,0.827,32,0.374,34,0.629,35,0.462,36,2.051,85,1.545,90,3.238,91,1.761,109,2.531,117,1.701,133,1.761,134,1.761,136,2.531,138,1.761,158,1.761,159,1.761,177,1.761,185,2.671,187,2.531,193,2.962,194,1.545,195,2.219,213,1.228,230,1.294,232,0.814,245,1.104,246,1.17,247,2.257,249,0.023,250,0.023,261,0.664,286,1.587,309,2.02,317,0.736,331,2.36,332,1.925,333,2.624,335,2.865,341,1.971,342,2.948,344,0.9,353,2.598,355,1.587,363,2.522,368,1.545,374,2.307,375,1.372,376,2.307,377,1.372,381,1.971,382,1.372,383,1.372,384,1.971,415,1.971,428,1.228,475,1.545,476,3.58,477,5.854,478,4.191,479,4.191,480,4.581,481,4.191,482,4.465,483,4.191,484,3.58,485,3.58,486,2.492,487,2.051,488,4.191,489,2.492,490,4.191,491,3.58,492,3.58,493,3.58,494,3.58,495,3.58,496,2.492,497,2.492,498,3.58,499,2.492,500,2.948,501,2.492,502,3.58,503,2.492,504,2.492,505,2.948,506,2.948,507,2.051,508,2.051,509,2.492,510,2.051,511,2.051,512,3.45,513,3.45,514,2.051,515,2.051,516,3.238,517,2.051,518,3.45,519,2.948,520,3.45,521,2.051,522,2.051,523,2.051,524,2.051,525,3.45,526,3.45,527,3.995,528,3.995,529,2.051,530,2.051,531,2.948,532,2.051,533,2.051,534,2.051,535,3.772,536,3.45,537,2.051,538,3.45,539,2.051,540,1.761,541,2.051,542,2.051,543,2.051,544,2.492]],["title/modules/HlmButtonModule.html",[367,1.487,545,2.133]],["body/modules/HlmButtonModule.html",[3,0.619,4,0.54,8,0.54,14,2.218,24,0.039,31,0.853,32,0.619,34,0.808,35,0.393,227,1.828,246,1.988,249,0.032,250,0.032,331,1.828,332,1.491,343,4.12,367,2.908,511,3.396,545,2.916,546,2.916,547,2.557,548,3.396,549,2.557,550,2.916,551,4.435,552,3.396,553,3.396,554,3.396,555,4.12,556,3.396,557,3.396,558,4.125,559,5.004,560,5.387]],["title/components/LoginPageComponent.html",[0,0.724,239,1.338]],["body/components/LoginPageComponent.html",[0,0.707,1,0.63,2,1.03,3,0.213,4,0.186,5,0.782,6,0.782,7,0.782,8,0.186,10,0.7,11,1.965,12,1.663,14,1.03,16,1.279,18,1.279,20,0.186,21,0.446,23,0.556,24,0.041,25,1.222,26,1.257,27,1.706,29,1.908,31,0.782,32,0.349,34,0.349,35,0.135,83,1.873,86,1.642,98,1.145,132,1.17,195,1.44,202,1.17,227,0.63,228,1.279,229,1.279,230,0.514,231,0.782,232,0.963,233,0.782,234,1.361,235,0.782,236,1.508,237,2.217,238,0.782,239,1.508,240,2.472,241,0.782,242,0.63,243,0.782,244,0.782,245,0.63,246,0.464,247,0.7,248,0.782,249,0.015,250,0.015,257,1.306,262,2.142,264,1.389,271,0.568,279,0.881,283,2.083,286,1.03,288,1.642,303,2.271,305,3.416,309,1.835,317,1.255,319,1.499,323,1.663,340,1.17,344,1.658,348,1.005,355,1.785,371,1.827,372,0.782,378,1.61,384,1.279,390,1.706,396,0.63,398,1.642,415,2.598,429,2.185,444,1.005,454,1.913,516,1.642,561,4.388,562,4.388,563,1.17,564,2.802,565,2.947,566,2.323,567,2.323,568,3.752,569,2.947,570,3.403,571,2.947,572,2.947,573,2.947,574,2.947,575,1.508,576,2.947,577,2.947,578,3.403,579,3.403,580,3.403,581,3.403,582,3.403,583,3.403,584,3.403,585,1.421,586,1.873,587,2.323,588,1.421,589,1.421,590,1.421,591,2.323,592,3.403,593,2.323,594,1.421,595,1.421,596,1.421,597,1.421,598,1.421,599,2.323,600,1.421,601,1.421,602,1.421,603,2.323,604,2.669,605,3.403,606,2.323,607,2.323,608,1.421,609,1.421,610,2.323,611,1.421,612,1.421,613,1.421,614,2.323,615,2.323,616,2.323,617,1.421,618,2.323,619,1.421,620,1.17,621,1.421,622,1.421,623,1.005,624,1.421,625,1.421,626,1.421,627,3.403,628,2.323,629,1.421,630,2.323,631,1.421,632,1.421,633,1.421,634,1.421,635,2.323,636,1.421,637,1.421,638,1.421,639,2.323,640,1.421,641,2.323,642,2.323,643,2.323,644,1.421,645,1.421,646,1.421,647,2.323,648,1.421,649,2.323,650,1.421,651,2.947,652,2.947,653,3.403,654,2.323,655,1.421,656,1.421,657,1.421,658,2.323,659,1.622,660,1.421,661,2.323,662,1.421,663,0.782,664,1.421,665,1.421,666,2.323,667,2.947,668,1.421,669,1.421,670,2.947,671,2.947,672,1.421,673,2.323,674,1.421,675,1.421,676,2.323,677,3.403,678,0.7,679,1.421,680,0.782,681,1.421,682,1.421,683,2.323,684,0.782,685,1.421,686,2.947,687,2.323,688,2.323,689,1.622,690,1.421,691,1.421,692,1.913,693,4.25,694,1.421,695,1.421,696,1.421,697,1.421,698,2.323,699,1.421,700,1.421,701,1.421,702,1.421,703,1.421,704,1.421,705,1.421,706,0.782,707,1.421,708,0.782,709,1.421,710,3.403,711,2.323,712,3.403,713,2.802,714,2.323,715,2.323,716,4.027,717,2.323,718,2.323,719,2.323,720,2.323,721,2.323,722,2.323,723,2.323]],["title/injectables/LoginService.html",[265,0.891,298,1.871]],["body/injectables/LoginService.html",[3,0.382,4,0.333,8,0.333,13,1.018,20,0.333,21,0.698,23,0.555,24,0.04,25,1.326,26,0.969,27,1.314,29,1.768,31,0.834,32,0.382,34,0.382,35,0.243,221,2.05,232,1.386,240,1.792,249,0.024,250,0.024,251,0.62,252,2.254,254,1.8,255,1.88,256,2.096,257,2.169,258,2.096,259,4.488,260,2.096,261,1.233,262,1.88,263,3.492,264,1.94,265,1.074,266,1.018,267,1.254,268,2.28,269,1.254,270,2.686,271,1.018,272,2.09,273,2.096,274,2.096,275,2.096,276,2.411,277,2.096,278,2.096,279,1.578,280,2.096,281,2.994,282,2.994,283,2.57,284,2.096,285,2.994,286,2.05,287,2.994,288,3.27,289,2.994,290,2.994,291,2.28,292,1.792,293,2.994,294,1.792,295,3.459,296,2.994,297,1.696,298,3.155,299,2.096,300,2.096,301,3.809,302,2.096,303,2.212,304,2.096,305,3.996,306,2.096,307,2.096,308,1.128,309,2.035,310,2.998,311,2.994,312,2.998,313,2.994,314,2.994,315,2.09,316,2.994,317,1.366,318,2.994,319,1.188,320,2.096,321,2.994,322,0.872,323,2.05,324,2.09,325,1.957,326,1.792,327,2.994,328,2.096,329,2.096,425,1.402,428,2.09,724,1.578,725,2.096,726,3.636,727,2.546,728,2.546,729,2.546]],["title/components/MyUiComponent.html",[0,0.724,242,1.338]],["body/components/MyUiComponent.html",[0,1.263,1,1.738,2,2.15,3,0.588,4,0.513,5,2.67,6,2.158,7,2.158,8,0.513,10,1.932,11,2.615,12,2.334,14,1.738,24,0.04,31,0.668,32,0.588,34,0.588,35,0.374,83,3.029,98,2.711,227,1.738,228,2.67,229,2.67,230,1.417,231,2.158,232,1.721,233,2.158,234,1.568,235,2.158,236,1.738,237,2.158,238,2.158,239,1.738,240,1.932,241,2.158,242,2.439,243,2.899,244,2.899,245,1.738,246,1.281,247,1.932,248,2.158,249,0.031,250,0.031,357,1.932,730,5.267,731,2.771,732,3.228,733,5.267]],["title/injectables/MyUiService.html",[265,0.891,734,2.133]],["body/injectables/MyUiService.html",[3,0.672,4,0.586,8,0.586,13,1.792,24,0.039,29,1.619,31,0.763,32,0.672,34,0.672,35,0.427,249,0.034,250,0.034,265,1.552,308,1.986,357,2.59,425,3.071,724,2.778,731,3.716,734,3.716,735,3.689,736,4.481]],["title/interfaces/PartialUserResponse.html",[251,0.514,737,1.487]],["body/interfaces/PartialUserResponse.html",[3,0.547,4,0.334,8,0.334,13,1.021,20,0.334,21,0.7,23,0.477,24,0.041,25,1.343,31,0.835,32,0.383,34,0.383,35,0.243,117,0.834,221,1.131,249,0.024,250,0.024,251,0.868,253,1.131,255,1.131,257,2.171,261,1.132,262,1.883,264,1.946,265,1.076,266,1.021,267,1.258,268,1.795,269,1.258,270,2.688,271,1.021,272,2.413,276,1.795,291,1.258,292,1.795,294,1.258,297,1.021,303,2.096,308,1.131,309,1.457,315,2.413,317,1.368,319,1.751,322,1.111,323,1.615,324,2.413,325,1.959,326,1.795,344,0.923,359,1.131,378,1.457,390,1.317,396,2.053,429,1.131,575,1.131,586,1.405,604,2.641,659,2.338,663,1.405,678,1.258,680,1.405,684,2.005,689,1.405,706,2.696,708,2.951,737,1.795,738,1.405,739,1.405,740,1.582,741,3.036,742,1.582,743,1.582,744,1.582,745,1.258,746,1.582,747,1.582,748,1.582,749,1.582,750,1.582,751,1.582,752,1.582,753,1.258,754,1.582,755,2.258,756,2.633,757,1.582,758,1.582,759,1.582,760,1.582,761,1.582,762,1.405,763,1.582,764,1.405,765,1.582,766,1.582,767,2.258,768,2.633,769,2.633,770,2.633,771,1.582,772,2.633,773,1.582,774,1.582,775,1.582,776,2.258,777,1.582,778,1.582,779,1.582,780,2.258,781,2.258,782,1.582,783,1.582,784,1.582,785,2.258,786,1.582,787,2.258,788,1.582,789,1.582,790,1.582,791,1.582,792,1.582,793,1.582]],["title/classes/User.html",[35,0.288,264,0.986]],["body/classes/User.html",[3,0.557,4,0.486,8,0.486,20,0.486,21,0.9,23,0.755,24,0.039,25,1.473,29,2.086,34,0.557,35,0.354,232,1.214,249,0.03,250,0.03,261,0.99,264,1.532,303,2.226,359,2.392,361,3.816,425,2.581,428,1.83,482,5.036,487,3.058,604,2.742,794,3.058,795,5.566,796,5.566,797,5.566,798,3.714,799,3.714,800,3.714,801,3.714,802,3.714,803,3.714,804,3.714,805,3.714]],["title/interfaces/UserExist.html",[251,0.514,745,1.487]],["body/interfaces/UserExist.html",[3,0.552,4,0.338,8,0.338,13,1.034,20,0.338,21,0.706,23,0.338,24,0.041,25,1.312,31,0.839,32,0.388,34,0.388,35,0.246,117,0.845,221,1.146,249,0.024,250,0.024,251,0.872,253,1.146,255,1.146,257,2.182,261,0.689,262,1.896,264,1.949,265,1.086,266,1.034,267,1.274,268,1.812,269,1.274,270,2.696,271,1.034,272,2.425,276,1.812,291,1.274,292,1.274,294,1.274,297,1.034,303,2.104,308,1.146,309,1.47,315,2.425,317,1.376,319,1.757,322,1.117,323,1.146,324,1.812,325,1.47,326,1.812,344,0.935,359,1.146,378,1.47,390,1.329,396,2.182,429,1.896,575,1.146,586,1.424,604,2.65,659,2.355,663,1.424,678,1.274,680,1.424,684,2.355,689,1.424,706,2.71,708,2.71,737,1.274,738,1.424,739,1.424,740,1.603,741,3.334,742,1.603,743,1.603,744,1.603,745,1.812,746,1.603,747,1.603,748,1.603,749,1.603,750,1.603,751,1.603,752,1.603,753,1.274,754,1.603,755,2.279,756,2.652,757,1.603,758,1.603,759,1.603,760,1.603,761,1.603,762,1.424,763,1.603,764,1.424,765,1.603,766,1.603,767,2.279,768,2.652,769,2.652,770,2.652,771,1.603,772,2.652,773,1.603,774,1.603,775,1.603,776,2.279,777,1.603,778,1.603,779,1.603,780,2.279,781,2.279,782,1.603,783,1.603,784,1.603,785,2.279,786,1.603,787,2.279,788,1.603,789,1.603,790,1.603,791,1.603,792,1.603,793,1.603]],["title/interfaces/UserGetter.html",[251,0.514,753,1.487]],["body/interfaces/UserGetter.html",[3,0.548,4,0.335,8,0.335,13,1.023,20,0.335,21,0.701,23,0.477,24,0.041,25,1.344,31,0.835,32,0.384,34,0.384,35,0.244,117,0.836,221,1.134,249,0.024,250,0.024,251,0.835,253,1.134,255,1.134,257,2.055,261,1.133,262,1.885,264,1.97,265,1.078,266,1.023,267,1.261,268,1.798,269,1.261,270,2.689,271,1.023,272,2.416,276,1.798,291,1.261,292,1.261,294,1.261,297,1.023,303,2.098,308,1.134,309,1.459,315,2.416,317,1.369,319,1.753,322,1.112,323,1.134,324,1.798,325,1.459,326,1.798,344,0.925,359,1.134,378,1.459,390,1.319,396,2.055,429,1.134,575,1.134,586,1.409,604,2.643,659,2.342,663,1.409,678,1.261,680,1.409,684,2.009,689,1.409,706,2.699,708,2.953,737,1.261,738,1.409,739,1.409,740,1.587,741,3.039,742,1.587,743,1.587,744,1.587,745,1.261,746,2.263,747,2.263,748,2.263,749,1.587,750,1.587,751,1.587,752,1.587,753,1.798,754,1.587,755,2.263,756,2.637,757,1.587,758,1.587,759,1.587,760,1.587,761,1.587,762,1.409,763,1.587,764,1.409,765,1.587,766,1.587,767,2.263,768,2.637,769,2.637,770,2.637,771,1.587,772,2.637,773,1.587,774,1.587,775,1.587,776,2.263,777,1.587,778,1.587,779,1.587,780,2.263,781,2.263,782,1.587,783,1.587,784,1.587,785,2.263,786,1.587,787,2.263,788,1.587,789,1.587,790,1.587,791,1.587,792,1.587,793,1.587]],["title/injectables/UserGetterService.html",[265,0.891,575,1.338]],["body/injectables/UserGetterService.html",[3,0.477,4,0.278,8,0.278,13,0.849,20,0.278,21,0.611,23,0.624,24,0.04,25,1.393,26,0.848,27,1.15,29,1.788,31,0.774,32,0.318,34,0.318,35,0.202,117,1.04,221,0.941,232,1.386,249,0.021,250,0.021,251,0.774,255,1.692,257,2.014,261,1.211,262,2.014,264,1.944,265,0.94,266,0.849,267,1.046,268,2.09,269,1.046,270,2.804,271,0.849,272,2.239,276,2.09,286,1.41,291,1.568,292,1.046,294,1.046,297,0.849,303,2.18,308,0.941,309,1.908,315,2.239,317,1.537,319,1.663,322,1.017,323,0.941,324,1.568,325,1.273,326,2.09,344,0.767,359,1.41,378,1.908,390,1.15,396,2.193,425,1.168,428,2.09,429,0.941,575,1.41,586,1.168,604,2.742,659,2.502,663,1.752,678,1.046,680,1.752,684,2.102,689,1.752,706,2.865,708,2.502,724,1.316,725,1.747,737,1.046,738,2.801,739,1.168,740,1.316,741,3.067,742,1.316,743,1.316,744,1.316,745,1.046,746,1.316,747,1.316,748,1.316,749,1.316,750,1.316,751,1.316,752,1.316,753,1.046,754,1.316,755,2.367,756,2.817,757,1.316,758,1.316,759,1.316,760,1.316,761,1.316,762,2.102,763,1.973,764,2.102,765,1.973,766,1.973,767,2.63,768,2.367,769,2.367,770,2.367,771,1.316,772,2.367,773,1.316,774,2.63,775,1.316,776,2.63,777,1.973,778,1.973,779,1.973,780,2.367,781,2.63,782,1.973,783,1.973,784,1.973,785,2.63,786,2.367,787,1.973,788,1.316,789,1.316,790,1.316,791,1.973,792,1.316,793,1.316,806,3.182,807,3.182,808,2.122,809,2.122,810,2.122,811,2.122,812,2.122,813,2.122,814,2.122]],["title/coverage.html",[815,3.37]],["body/coverage.html",[0,1.233,1,1.292,8,0.381,9,2.399,12,1.292,23,0.642,24,0.04,35,0.278,84,5.023,85,2.478,86,2.06,230,1.053,234,1.165,236,1.292,239,1.292,242,1.292,246,0.952,249,0.026,250,0.026,251,0.905,252,1.807,254,2.825,264,0.952,265,1.347,266,1.598,298,1.807,322,0.699,330,1.604,331,2.455,332,2.002,333,2.73,334,3.188,341,2.2,345,2.06,346,2.06,348,2.825,352,1.807,353,1.807,356,1.807,357,2.617,358,3.043,373,1.807,380,1.807,443,2.399,444,2.06,445,2.399,475,2.828,500,3.755,540,2.06,549,1.807,561,2.399,562,2.399,563,2.399,575,1.292,731,2.825,732,2.399,734,2.06,735,2.399,737,1.436,738,2.702,739,2.702,745,1.436,753,1.436,794,2.399,815,2.399,816,2.914,817,2.914,818,2.914,819,3.997,820,5.894,821,6.004,822,2.914,823,2.399,824,2.914,825,2.914,826,3.997,827,3.29,828,2.399,829,2.399,830,2.399,831,2.399,832,2.399,833,2.914,834,2.914,835,2.914,836,2.914,837,2.914,838,2.914,839,2.914,840,3.997,841,3.997,842,2.914,843,2.399,844,2.399,845,2.399,846,4.234,847,2.399,848,2.399,849,2.399,850,2.914,851,2.399,852,2.914,853,2.914]],["title/dependencies.html",[547,2.246,854,2.085]],["body/dependencies.html",[24,0.04,32,0.623,33,3.418,35,0.396,249,0.032,250,0.032,271,1.66,368,2.573,372,2.285,507,3.418,508,3.418,510,3.418,547,2.573,620,3.418,623,2.934,855,4.151,856,4.151,857,5.963,858,4.151,859,5.401,860,3.114,861,4.151,862,2.934,863,4.151,864,3.418,865,4.151,866,4.151,867,4.151,868,4.151,869,4.151,870,4.151,871,4.151,872,4.151,873,4.151,874,4.151,875,4.151,876,4.151,877,4.151,878,4.151,879,4.151]],["title/miscellaneous/functions.html",[880,1.248,881,2.561]],["body/miscellaneous/functions.html",[20,0.586,23,0.586,24,0.038,232,1.464,249,0.034,250,0.034,261,1.194,317,1.552,325,2.102,330,2.467,331,1.986,332,1.619,333,2.208,334,3.459,339,3.689,349,3.689,352,2.778,353,3.459,428,2.208,823,4.328,880,2.208,881,3.167,882,3.716]],["title/index.html",[20,0.331,883,2.533,884,2.533]],["body/index.html",[0,1.216,2,1.598,4,0.472,24,0.03,26,1.226,28,2.969,144,3.774,164,2.969,209,3.789,218,3.899,245,1.598,249,0.03,250,0.03,295,3.987,322,0.865,564,2.969,678,1.777,692,2.969,713,2.969,860,2.235,862,3.583,864,2.969,885,5.069,886,3.606,887,4.602,888,2.969,889,4.602,890,3.606,891,5.516,892,5.641,893,3.606,894,3.606,895,3.606,896,3.606,897,4.602,898,3.606,899,3.606,900,3.606,901,3.606,902,3.606,903,4.602,904,4.602,905,3.606,906,3.606,907,3.606,908,5.069,909,3.606,910,3.606,911,3.606,912,3.606,913,3.606,914,3.606,915,3.606,916,4.173,917,3.606,918,3.606,919,3.606,920,3.606,921,3.606,922,3.606,923,2.969,924,3.606,925,3.606,926,3.606,927,4.602,928,5.069,929,3.606,930,3.606,931,3.606,932,3.606,933,3.606,934,5.069,935,3.606,936,5.641,937,3.606,938,4.602,939,3.606,940,3.606,941,3.606,942,3.606,943,3.606,944,3.606,945,3.606,946,3.606,947,3.606,948,3.606,949,3.606,950,3.606,951,3.606,952,3.606,953,2.549,954,3.606]],["title/modules.html",[546,2.893]],["body/modules.html",[24,0.035,196,3.911,249,0.035,250,0.035,367,2.34,546,3.358,860,2.945,955,4.75,956,4.75]],["title/overview.html",[953,2.893]],["body/overview.html",[2,1.942,24,0.037,35,0.417,170,3.607,192,4.55,194,2.716,227,1.942,230,1.583,246,1.952,249,0.034,250,0.034,253,1.942,367,2.874,545,3.667,547,2.716,548,3.607,549,2.716,550,3.097,551,3.607,552,3.607,553,3.607,554,3.607,555,4.271,556,3.607,557,3.607,724,2.716,953,3.097,957,4.382]],["title/properties.html",[21,0.696,854,2.085]],["body/properties.html",[21,0.917,24,0.037,249,0.035,250,0.035,888,3.93,958,4.773]],["title/miscellaneous/typealiases.html",[880,1.248,959,3.623]],["body/miscellaneous/typealiases.html",[20,0.571,23,0.571,24,0.04,26,1.379,213,2.149,249,0.033,250,0.033,331,1.933,332,1.576,333,2.149,341,2.848,357,2.149,358,2.704,373,3.208,374,2.401,375,2.401,376,2.401,377,2.401,378,1.744,379,3.083,380,3.208,381,2.401,382,2.401,383,2.401,475,3.208,505,3.591,880,2.149,882,3.083,960,4.362,961,5.175]],["title/miscellaneous/variables.html",[880,1.248,962,2.983]],["body/miscellaneous/variables.html",[12,1.645,20,0.343,23,0.672,24,0.04,26,1.586,27,2.098,85,1.624,90,3.313,91,1.852,109,2.623,117,1.408,133,1.852,134,1.852,136,2.623,138,1.852,144,1.852,158,1.852,159,1.852,177,1.852,185,2.723,187,2.623,193,3.046,194,1.624,195,2.301,201,2.157,213,1.291,218,1.852,249,0.024,250,0.024,266,1.874,310,2.623,312,2.623,322,0.89,330,1.443,331,1.645,332,1.341,333,1.829,334,2.672,335,2.372,341,2.043,345,2.623,346,2.623,347,2.157,352,2.672,355,1.645,363,1.443,374,2.372,375,1.443,376,2.372,377,1.443,381,2.043,382,1.443,383,1.443,390,0.947,475,2.301,506,2.157,512,3.548,513,3.548,514,2.157,515,2.157,516,3.313,517,2.157,518,3.548,519,3.056,520,3.548,521,2.157,522,2.157,523,2.157,524,2.157,525,3.548,526,3.548,527,4.073,528,4.073,529,2.157,530,2.157,531,3.056,532,2.157,533,2.157,534,2.157,535,3.859,536,3.548,537,2.157,538,3.548,539,2.157,540,1.852,541,2.157,542,2.157,543,2.157,549,2.301,550,2.623,623,1.852,762,2.043,764,2.043,827,2.157,828,3.548,829,2.157,830,3.056,831,2.157,832,3.056,843,2.157,844,2.157,845,2.157,846,2.157,847,3.056,848,3.056,849,3.056,851,3.056,860,1.624,862,1.852,880,1.291,881,1.852,882,3.046,916,2.157,923,3.056,962,2.157,963,4.947,964,2.621,965,2.621,966,3.712,967,2.621,968,2.621,969,2.621,970,2.621,971,2.621,972,2.621,973,2.621,974,2.621,975,2.621,976,2.621,977,2.621,978,2.621,979,2.621,980,2.621,981,3.712,982,2.621,983,2.621,984,2.621,985,2.621,986,2.621,987,2.621,988,2.621,989,2.621,990,2.621,991,3.712,992,3.712,993,3.712,994,3.712,995,3.712,996,3.712,997,3.712,998,2.621,999,2.621,1000,2.621]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":958,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["0.006",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["0.00875rem",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["0.014",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["0.015",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["0.125rem",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["0.15.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["0.238",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["0.24",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["0.246",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["0.25rem",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["0.274",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["0.277",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["0.28",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["0.375rem",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["0.3s",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["0.5rem",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["0.7.0",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["0.73rem",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["0.75rem",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["0.875rem",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["1.25rem",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["1.4rem",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["1.5rem",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["1.75rem",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":536,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["11",{"_index":540,"title":{},"body":{"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["15.34",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["18.0.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["180deg",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["19.2.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["19.2.1",{"_index":864,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1px",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["2.1.1",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["2.75rem",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["2/18",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["263.83",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["296.97",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.125rem",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["3/6",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["300.98",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["302.71",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["304.04",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["305.88",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["31.68",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["33",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["332.77",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["37",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["3rem",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["4.0.14",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["50",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":957,"title":{},"body":{"overview.html":{}}}],["650px",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["7.8.0",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["700px",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":541,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["8.5.3",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":539,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["9.2rem",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["900",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["90deg",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["_additionalclasses",{"_index":478,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["_computedclass",{"_index":480,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["_config",{"_index":481,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["a:hover",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["abstractcontrol",{"_index":614,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["accent",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":592,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["actual_component",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["additional",{"_index":946,"title":{},"body":{"index.html":{}}}],["address",{"_index":316,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["aftercontentinit",{"_index":365,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["alias",{"_index":500,"title":{},"body":{"directives/HlmButtonDirective.html":{},"coverage.html":{}}}],["aliases",{"_index":960,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["alpha.422",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":673,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["angular",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":372,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":269,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["angular/compiler",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":620,"title":{},"body":{"components/LoginPageComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["antialiased",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["api",{"_index":294,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apple",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["application",{"_index":897,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arial",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["around",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["array",{"_index":755,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["array.from(buttonel.childnodes",{"_index":402,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["artifacts",{"_index":920,"title":{},"body":{"index.html":{}}}],["associated",{"_index":791,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["attempt",{"_index":260,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["auth",{"_index":760,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["authenticated",{"_index":273,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["authentication",{"_index":259,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["authority",{"_index":508,"title":{},"body":{"directives/HlmButtonDirective.html":{},"dependencies.html":{}}}],["authresponse",{"_index":252,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["authurl",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":661,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["automatically",{"_index":898,"title":{},"body":{"index.html":{}}}],["available",{"_index":911,"title":{},"body":{"index.html":{}}}],["back",{"_index":695,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["backend",{"_index":293,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["background",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":461,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["bg",{"_index":525,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["blinkmacsystemfont",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["block",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":429,"title":{},"body":{"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["bootstrap",{"_index":549,"title":{},"body":{"modules/HlmButtonModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["bottom",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["bright",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["brnbuttonconfig",{"_index":330,"title":{"interfaces/BrnButtonConfig.html":{}},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["brnbuttonconfigtoken",{"_index":346,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":956,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":860,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":916,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":917,"title":{},"body":{"index.html":{}}}],["button",{"_index":332,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button'},{'name",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["button.component.html",{"_index":385,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":386,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["button.directive",{"_index":343,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"modules/HlmButtonModule.html":{}}}],["button.directive.ts",{"_index":475,"title":{},"body":{"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button.directive.ts:43",{"_index":497,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:45",{"_index":489,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:47",{"_index":501,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:49",{"_index":496,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:53",{"_index":503,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:55",{"_index":499,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.directive.ts:57",{"_index":486,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["button.token",{"_index":511,"title":{},"body":{"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{}}}],["button.token.ts",{"_index":334,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["buttonclick",{"_index":393,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["buttonclickevent",{"_index":356,"title":{"interfaces/ButtonClickEvent.html":{}},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":234,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["buttonel",{"_index":399,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["buttonsize",{"_index":380,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["buttonvariant",{"_index":373,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["buttonvariants",{"_index":341,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonvariants['size",{"_index":336,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["buttonvariants['variant",{"_index":337,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["cancel",{"_index":457,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["cancelemailconfirmation",{"_index":578,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["canceling",{"_index":587,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["cancelled",{"_index":455,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["canceltext",{"_index":451,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["center",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["characters",{"_index":711,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["check",{"_index":396,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["checkemailexists",{"_index":579,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checkifuserexist",{"_index":580,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checking",{"_index":683,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checks",{"_index":759,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["child(6n",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["choose",{"_index":942,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":487,"title":{},"body":{"directives/HlmButtonDirective.html":{},"classes/User.html":{}}}],["classvalue",{"_index":509,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["clear",{"_index":691,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["cli",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clsx",{"_index":510,"title":{},"body":{"directives/HlmButtonDirective.html":{},"dependencies.html":{}}}],["cluster_hlmbuttonmodule",{"_index":552,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["cluster_hlmbuttonmodule_exports",{"_index":553,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["cluster_hlmbuttonmodule_imports",{"_index":554,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["code",{"_index":903,"title":{},"body":{"index.html":{}}}],["color",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["colors",{"_index":515,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["come",{"_index":940,"title":{},"body":{"index.html":{}}}],["command",{"_index":934,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":371,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{}}}],["compile",{"_index":918,"title":{},"body":{"index.html":{}}}],["complete",{"_index":713,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":490,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["config",{"_index":352,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":467,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirm",{"_index":459,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirmation",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["confirmationmodalcomponent",{"_index":236,"title":{"components/ConfirmationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["confirmed",{"_index":456,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirmemailuser",{"_index":581,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["confirming",{"_index":591,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["confirmtext",{"_index":452,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["congratulations",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error",{"_index":675,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.error('error",{"_index":682,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log('email",{"_index":672,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log('form",{"_index":698,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log(response",{"_index":301,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["const",{"_index":344,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["constructor",{"_index":425,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{}}}],["constructor(elementref",{"_index":426,"title":{},"body":{"components/ButtonComponent.html":{}}}],["constructor(http",{"_index":725,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserGetterService.html":{}}}],["constructor(id",{"_index":798,"title":{},"body":{"classes/User.html":{}}}],["constructor(private",{"_index":297,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["containing",{"_index":326,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["contains",{"_index":637,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["content",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["corresponding",{"_index":767,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["coverage",{"_index":815,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":766,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["cva",{"_index":506,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":323,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["dataavailable",{"_index":582,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["date.now",{"_index":421,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["declarations",{"_index":548,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["decoration",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":345,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultvariants",{"_index":543,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{}}}],["dependencies",{"_index":547,"title":{"dependencies.html":{}},"body":{"modules/HlmButtonModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":255,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/ConfirmationModalComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["destructive",{"_index":374,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["destructive/90",{"_index":530,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["detailed",{"_index":950,"title":{},"body":{"index.html":{}}}],["details",{"_index":274,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["dev",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":889,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":667,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["different",{"_index":694,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["direction",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":230,"title":{"directives/HlmButtonDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"index.html":{}}}],["directory",{"_index":922,"title":{},"body":{"index.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disabled",{"_index":389,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["disabled:opacity",{"_index":521,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["disabled:pointer",{"_index":522,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["dist",{"_index":921,"title":{},"body":{"index.html":{}}}],["divider",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["docs",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('email')?.focus",{"_index":696,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["document.getelementbyid('password')?.focus",{"_index":690,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["documentation",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":679,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["don't",{"_index":660,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["during",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":937,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":939,"title":{},"body":{"index.html":{}}}],["ease",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["electric",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["elementref",{"_index":366,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["email",{"_index":303,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["email.includes(emailprovider",{"_index":638,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["email/username",{"_index":744,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["emailcontrol",{"_index":628,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailcontrol.errors",{"_index":632,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailcontrol.value",{"_index":634,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailerror",{"_index":568,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailexists",{"_index":569,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailprovider",{"_index":635,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailprovidermismatch",{"_index":640,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailprovidervalidator",{"_index":626,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emoji",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["empty",{"_index":407,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["end",{"_index":936,"title":{},"body":{"index.html":{}}}],["enter",{"_index":712,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["environment",{"_index":266,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.loginurl",{"_index":311,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["environment.registerurl",{"_index":313,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["environment.usercheckerurl",{"_index":765,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["environment.userinfourl",{"_index":763,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["environments/environment",{"_index":267,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["error",{"_index":262,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["errors",{"_index":708,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["event",{"_index":441,"title":{},"body":{"components/ButtonComponent.html":{}}}],["eventcoalescing",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":362,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["events",{"_index":523,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":295,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["execute",{"_index":929,"title":{},"body":{"index.html":{}}}],["exist",{"_index":680,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["existance",{"_index":761,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["existence",{"_index":684,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["exists",{"_index":659,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["explore",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["exportas",{"_index":476,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["exports",{"_index":551,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["express",{"_index":623,"title":{},"body":{"components/LoginPageComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":280,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["false",{"_index":390,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["field",{"_index":689,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["fields",{"_index":706,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["fields.join",{"_index":789,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["files",{"_index":902,"title":{},"body":{"index.html":{}}}],["fill",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["filling",{"_index":669,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["fine",{"_index":681,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["firebase",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":621,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["firstname",{"_index":795,"title":{},"body":{"classes/User.html":{}}}],["flex",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["focus",{"_index":516,"title":{},"body":{"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":933,"title":{},"body":{"index.html":{}}}],["font",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["foreground",{"_index":527,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":716,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formbuilder",{"_index":570,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formgroup",{"_index":615,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formgroup.get(email",{"_index":629,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formgroup.get(provider",{"_index":631,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["found",{"_index":686,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["foundusername",{"_index":571,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["framework",{"_index":941,"title":{},"body":{"index.html":{}}}],["french",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["full",{"_index":714,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["fullwidth",{"_index":392,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["function",{"_index":348,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["functions",{"_index":881,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["generate",{"_index":908,"title":{},"body":{"index.html":{}}}],["generated",{"_index":886,"title":{},"body":{"index.html":{}}}],["getter.service",{"_index":622,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["getter.service.ts",{"_index":739,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["getter.service.ts:101",{"_index":808,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:43",{"_index":814,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:44",{"_index":807,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:53",{"_index":812,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:75",{"_index":813,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:85",{"_index":810,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getting",{"_index":883,"title":{"index.html":{}},"body":{}}],["getusernamebyemail",{"_index":806,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getusernamebyemail(email",{"_index":663,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["getuserpartial",{"_index":786,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["getuserpartial(userid",{"_index":809,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["ghost",{"_index":377,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["given",{"_index":743,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["goes",{"_index":751,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["gradient",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["gray",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["grayscale",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["group",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["h",{"_index":535,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["h1",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["handle",{"_index":586,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["handler",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handling",{"_index":282,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["hascontent",{"_index":394,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["hasprojectedcontent",{"_index":401,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["height",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["hello",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["helm",{"_index":370,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["helm/src/index.ts",{"_index":558,"title":{},"body":{"modules/HlmButtonModule.html":{}}}],["helm/src/lib/hlm",{"_index":333,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["helpbuilding",{"_index":915,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["here",{"_index":703,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hide",{"_index":688,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["highlightedtext",{"_index":453,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["hlm",{"_index":342,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{}}}],["hlm(buttonvariants",{"_index":491,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["hlmbtn",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["hlmbuttondirective",{"_index":246,"title":{"directives/HlmButtonDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hlmbuttonmodule",{"_index":367,"title":{"modules/HlmButtonModule.html":{}},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"modules/HlmButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["holder",{"_index":593,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["horizontal",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["host",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{}}}],["hot",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["hover:bg",{"_index":528,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["hover:text",{"_index":531,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["hover:underline",{"_index":534,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["http",{"_index":291,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["http://localhost:4200",{"_index":896,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":268,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["httpparams",{"_index":740,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["httpparams().set('fields",{"_index":788,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["https://angular.dev",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.dev/tools/cli",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.dev/tools/devtools",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.dev/tools/language",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.dev/tutorials",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":383,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":359,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["identifier",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":387,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["imports",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["include",{"_index":783,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["includes",{"_index":905,"title":{},"body":{"index.html":{}}}],["including",{"_index":949,"title":{},"body":{"index.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":742,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["infomation",{"_index":748,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["information",{"_index":678,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"index.html":{}}}],["inherit",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":340,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"components/LoginPageComponent.html":{}}}],["inject(brnbuttonconfigtoken",{"_index":354,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["inject(formbuilder",{"_index":599,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inject(usergetterservice",{"_index":610,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["injectable",{"_index":265,"title":{"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"injectables/UserGetterService.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["injectables",{"_index":724,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"injectables/UserGetterService.html":{},"overview.html":{}}}],["injectbrnbuttonconfig",{"_index":353,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectiontoken",{"_index":338,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["injectiontoken('brnbuttonconfig",{"_index":347,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":363,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["input(this._config.size",{"_index":498,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["input(this._config.variant",{"_index":502,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["inputs",{"_index":423,"title":{},"body":{"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["instead",{"_index":668,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inter",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["interface",{"_index":251,"title":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{}},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":253,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"overview.html":{}}}],["invalid",{"_index":704,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["isregistering",{"_index":572,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["issues",{"_index":757,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["item",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["item.title",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":275,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["karma",{"_index":930,"title":{},"body":{"index.html":{}}}],["language",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["lastname",{"_index":796,"title":{},"body":{"classes/User.html":{}}}],["learn",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"overview.html":{}}}],["letter",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["lg",{"_index":382,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["lib/hlm",{"_index":560,"title":{},"body":{"modules/HlmButtonModule.html":{}}}],["libs/.../hlm",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/ui/ui",{"_index":331,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["linear",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["link",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["links",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":910,"title":{},"body":{"index.html":{}}}],["loading",{"_index":391,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["local",{"_index":890,"title":{},"body":{"index.html":{}}}],["localhost:8000",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/login",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/register",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/user",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/user/me",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":287,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["logic",{"_index":702,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{}}}],["login(email",{"_index":318,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["loginform",{"_index":573,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"email.emailstring\")?.value",{"_index":722,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"email.provider\")?.value",{"_index":721,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"password\")?.value",{"_index":720,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"username\")?.value",{"_index":719,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.status",{"_index":718,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginpagecomponent",{"_index":239,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["loginservice",{"_index":298,"title":{"injectables/LoginService.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":310,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["logs",{"_index":314,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["lollo",{"_index":792,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["main",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["making",{"_index":290,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["margin",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["mark",{"_index":705,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["matching",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["md",{"_index":513,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["medium",{"_index":514,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":279,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["messages",{"_index":756,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["methods",{"_index":286,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{}}}],["min",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["minimize",{"_index":778,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["miscellaneous",{"_index":880,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mix(in",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["modal",{"_index":446,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["modal.component",{"_index":625,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["modal.component.html",{"_index":447,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.scss",{"_index":448,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts",{"_index":445,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:13",{"_index":466,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:14",{"_index":468,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:15",{"_index":465,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:16",{"_index":462,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:17",{"_index":460,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:18",{"_index":458,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:19",{"_index":463,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:21",{"_index":470,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:22",{"_index":469,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:24",{"_index":472,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:28",{"_index":471,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal/confirmation",{"_index":444,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["modify",{"_index":901,"title":{},"body":{"index.html":{}}}],["module",{"_index":545,"title":{"modules/HlmButtonModule.html":{}},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["modules",{"_index":546,"title":{"modules.html":{}},"body":{"modules/HlmButtonModule.html":{},"modules.html":{}}}],["more",{"_index":948,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":414,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["moz",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["myui",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["myuicomponent",{"_index":242,"title":{"components/MyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{},"coverage.html":{}}}],["myuiservice",{"_index":734,"title":{"injectables/MyUiService.html":{}},"body":{"injectables/MyUiService.html":{},"coverage.html":{}}}],["name",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":909,"title":{},"body":{"index.html":{}}}],["names",{"_index":782,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["navigate",{"_index":895,"title":{},"body":{"index.html":{}}}],["needs",{"_index":945,"title":{},"body":{"index.html":{}}}],["new",{"_index":322,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newuser@example.com",{"_index":304,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["next",{"_index":651,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["ng",{"_index":892,"title":{},"body":{"index.html":{}}}],["ng/brain",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["ng/brain/core",{"_index":504,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["ng/ui",{"_index":369,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["ngaftercontentinit",{"_index":395,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["ngmodule",{"_index":559,"title":{},"body":{"modules/HlmButtonModule.html":{}}}],["node",{"_index":404,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["node.nodetype",{"_index":408,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["node.text_node",{"_index":409,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["node[]).some((node",{"_index":403,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["nodes",{"_index":406,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["none",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["null",{"_index":378,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/typealiases.html":{}}}],["null).subscribe",{"_index":657,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["number",{"_index":361,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"classes/User.html":{}}}],["object",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":270,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observable((observer",{"_index":768,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observer.complete",{"_index":770,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observer.next",{"_index":769,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["occur",{"_index":758,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["offset",{"_index":520,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["oklch(19.37",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(36.98",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(47.66",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(51.01",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(53.18",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(61.42",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(63.32",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(69.02",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(70.9",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["oncancel",{"_index":449,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["onclick",{"_index":422,"title":{},"body":{"components/ButtonComponent.html":{}}}],["onclick(event",{"_index":413,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["onconfirm",{"_index":450,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["one",{"_index":943,"title":{},"body":{"index.html":{}}}],["open",{"_index":894,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":924,"title":{},"body":{"index.html":{}}}],["optional",{"_index":261,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["orange",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["osx",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":557,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["outline",{"_index":375,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":364,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["outputs",{"_index":424,"title":{},"body":{"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["overview",{"_index":953,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":854,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["page",{"_index":564,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["page.component.html",{"_index":566,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.scss",{"_index":567,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts",{"_index":563,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:107",{"_index":588,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:154",{"_index":590,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:174",{"_index":585,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:193",{"_index":596,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:203",{"_index":595,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:62",{"_index":600,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:63",{"_index":611,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:64",{"_index":602,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:65",{"_index":613,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:66",{"_index":612,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:67",{"_index":598,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:68",{"_index":597,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:69",{"_index":609,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:70",{"_index":601,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:71",{"_index":608,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:76",{"_index":594,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:88",{"_index":589,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/login",{"_index":562,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":315,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["parameters",{"_index":428,"title":{},"body":{"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":787,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["partial",{"_index":325,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["partialuserresponse",{"_index":737,"title":{"interfaces/PartialUserResponse.html":{}},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["password",{"_index":305,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["password123",{"_index":306,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["password123').subscribe(response",{"_index":300,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["passwordvalue",{"_index":643,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["passwordvalue.trim",{"_index":646,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["path",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":779,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["performance",{"_index":925,"title":{},"body":{"index.html":{}}}],["pill",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["pill:hover",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["pill:nth",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["pink",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":914,"title":{},"body":{"index.html":{}}}],["please",{"_index":693,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["position",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["possible",{"_index":785,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["postcss",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["powerful",{"_index":906,"title":{},"body":{"index.html":{}}}],["present",{"_index":674,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["press",{"_index":388,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["primary",{"_index":526,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["primary/90",{"_index":529,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":309,"title":{},"body":{"interfaces/AuthResponse.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["production",{"_index":923,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":885,"title":{},"body":{"index.html":{}}}],["projected",{"_index":397,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["projects/.../button.component.ts",{"_index":961,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/my",{"_index":357,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"properties.html":{}}}],["property",{"_index":272,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["protected",{"_index":479,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["provide",{"_index":350,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["providebrnbuttonconfig",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["providebrnbuttonconfig(config",{"_index":349,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"miscellaneous/functions.html":{}}}],["provideclienthydration(witheventreplay",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":276,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["providedin",{"_index":308,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["providehttpclient(withfetch",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":627,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["providercontrol",{"_index":630,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["providercontrol.errors",{"_index":633,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["providercontrol.value",{"_index":636,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["providerouter(routes",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":550,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":285,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["provideserverrendering",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":482,"title":{},"body":{"directives/HlmButtonDirective.html":{},"classes/User.html":{}}}],["purple",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["px",{"_index":538,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["py",{"_index":537,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["question",{"_index":464,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["radius",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodule",{"_index":565,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["readonly",{"_index":477,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["real",{"_index":700,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["received",{"_index":258,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["red",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["reference",{"_index":954,"title":{},"body":{"index.html":{}}}],["references",{"_index":951,"title":{},"body":{"index.html":{}}}],["register",{"_index":288,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["register(userdata",{"_index":327,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["registerdiv",{"_index":583,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["registers",{"_index":321,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["registerurl",{"_index":312,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["registration",{"_index":283,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["relative",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["reload",{"_index":899,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":284,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["rendermode",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["represents",{"_index":256,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["reqhandler",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":784,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["requests",{"_index":292,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["required",{"_index":710,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["reset",{"_index":556,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}],["resolve(serverdistfolder",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":947,"title":{},"body":{"index.html":{}}}],["respone",{"_index":747,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["response",{"_index":257,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["response.userexists",{"_index":654,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["responsible",{"_index":281,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["results",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":781,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["retrieves",{"_index":776,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["retrieving",{"_index":676,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["return",{"_index":319,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["returned",{"_index":749,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["returns",{"_index":317,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["ring",{"_index":519,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["roboto",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["role",{"_index":797,"title":{},"body":{"classes/User.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["root'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["rounded",{"_index":512,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["routeroutlet",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":891,"title":{},"body":{"index.html":{}}}],["runner",{"_index":932,"title":{},"body":{"index.html":{}}}],["running",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["rxjs",{"_index":271,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"dependencies.html":{}}}],["sans",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffolding",{"_index":904,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":912,"title":{},"body":{"index.html":{}}}],["screen",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["secondary",{"_index":376,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["secondary/80",{"_index":532,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":723,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["segoe",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["selected",{"_index":754,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["serif",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["serveonce",{"_index":893,"title":{},"body":{"index.html":{}}}],["server",{"_index":862,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["set",{"_index":685,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["setclass",{"_index":484,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["setclass(classes",{"_index":485,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["settimeout",{"_index":398,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/LoginPageComponent.html":{}}}],["shared/confirmation",{"_index":624,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["show",{"_index":454,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{}}}],["showemailconfirmation",{"_index":574,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["signal",{"_index":488,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["simple",{"_index":746,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["size",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["skip",{"_index":405,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["sm",{"_index":381,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["smoothing",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["social",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["something",{"_index":750,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"modules/HlmButtonModule.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"index.html":{}}}],["space",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["spacing",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["spartan",{"_index":368,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"dependencies.html":{}}}],["specific",{"_index":777,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["speed",{"_index":926,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":831,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/login",{"_index":561,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/login.service.ts",{"_index":254,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:44",{"_index":729,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:45",{"_index":726,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:55",{"_index":727,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:68",{"_index":728,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/shared/confirmation",{"_index":443,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":738,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["src/app/user.ts",{"_index":794,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":799,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:3",{"_index":802,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":805,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":800,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":801,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:7",{"_index":803,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:8",{"_index":804,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.development.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["standalone",{"_index":384,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{}}}],["start",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["started",{"_index":884,"title":{"index.html":{}},"body":{}}],["statements",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":717,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["store",{"_index":919,"title":{},"body":{"index.html":{}}}],["string",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["style",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":730,"title":{},"body":{"components/MyUiComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{}}}],["subscribe",{"_index":664,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["subscribe(response",{"_index":307,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["successful",{"_index":278,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["such",{"_index":913,"title":{},"body":{"index.html":{}}}],["suits",{"_index":944,"title":{},"body":{"index.html":{}}}],["support",{"_index":955,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["symbol",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["system",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["tailwindcss/postcss",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{}}}],["test",{"_index":931,"title":{},"body":{"index.html":{}}}],["testing",{"_index":938,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":935,"title":{},"body":{"index.html":{}}}],["tests",{"_index":928,"title":{},"body":{"index.html":{}}}],["text",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["text).textcontent",{"_index":410,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this._additionalclasses",{"_index":495,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["this._additionalclasses.set(classes",{"_index":544,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["this.buttonclick.emit",{"_index":418,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.cancelled.emit",{"_index":474,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.confirmed.emit",{"_index":473,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.disabled",{"_index":416,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.elementref.nativeelement.queryselector('button",{"_index":400,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.emailerror",{"_index":677,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.emailexists",{"_index":658,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.formbuilder.group",{"_index":603,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.foundusername",{"_index":670,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.hascontent",{"_index":412,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.http.get",{"_index":772,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.http.get(`${this.usercheckerurl}/${email",{"_index":771,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.http.get(`${this.userinfourl",{"_index":775,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.http.post",{"_index":328,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.http.post(`${this.loginurl",{"_index":320,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.id",{"_index":419,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.isregistering",{"_index":655,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loading",{"_index":417,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.loginform.get('email')?.errors",{"_index":656,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('email')?.value",{"_index":647,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('password')?.value",{"_index":644,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('username')?.errors",{"_index":648,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":642,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.markallastouched",{"_index":709,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.patchvalue",{"_index":687,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":697,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":699,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginservice.login('user@example.com",{"_index":299,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.loginservice.register",{"_index":302,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.registerurl",{"_index":329,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.showemailconfirmation",{"_index":671,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.size",{"_index":493,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["this.usercheckerurl}/${username",{"_index":773,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.userclass",{"_index":494,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["this.usergetterservice",{"_index":662,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.usergetterservice.userexists(email",{"_index":649,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.userinfourl}/${userid",{"_index":790,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.userinfourl}/usernamebyemail/${email",{"_index":793,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.usernamechecked",{"_index":652,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.usernameexist",{"_index":653,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.value",{"_index":420,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["this.variant",{"_index":492,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["tight",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["timestamp",{"_index":360,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["token",{"_index":263,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["tools",{"_index":907,"title":{},"body":{"index.html":{}}}],["top",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["touched",{"_index":707,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["track",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["transition",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["transparent",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["trim",{"_index":411,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{}}}],["true",{"_index":355,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["tutorials",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["type",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":959,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":296,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["ui",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["ui.component.ts",{"_index":732,"title":{},"body":{"components/MyUiComponent.html":{},"coverage.html":{}}}],["ui.service.ts",{"_index":735,"title":{},"body":{"injectables/MyUiService.html":{},"coverage.html":{}}}],["ui.service.ts:6",{"_index":736,"title":{},"body":{"injectables/MyUiService.html":{}}}],["ui/src/lib/button/button.component.ts",{"_index":358,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/button/button.component.ts:29",{"_index":427,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:32",{"_index":435,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:33",{"_index":437,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:34",{"_index":434,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:35",{"_index":430,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:36",{"_index":433,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:37",{"_index":431,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:38",{"_index":432,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:39",{"_index":436,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:41",{"_index":438,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:43",{"_index":442,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:45",{"_index":439,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/button/button.component.ts:60",{"_index":440,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ui/src/lib/my",{"_index":731,"title":{},"body":{"components/MyUiComponent.html":{},"injectables/MyUiService.html":{},"coverage.html":{}}}],["undefined",{"_index":379,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["underline",{"_index":533,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":927,"title":{},"body":{"index.html":{}}}],["update",{"_index":701,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["updatedata",{"_index":584,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["upon",{"_index":277,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["use",{"_index":692,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["used",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":264,"title":{"classes/User.html":{}},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["usercheckerurl",{"_index":764,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["userclass",{"_index":483,"title":{},"body":{"directives/HlmButtonDirective.html":{}}}],["userdata",{"_index":324,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userexist",{"_index":745,"title":{"interfaces/UserExist.html":{}},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["userexists",{"_index":741,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userexists(email",{"_index":811,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["usergetter",{"_index":753,"title":{"interfaces/UserGetter.html":{}},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["usergetterservice",{"_index":575,"title":{"injectables/UserGetterService.html":{}},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["userid",{"_index":780,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userinfo",{"_index":774,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userinfourl",{"_index":762,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":604,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/PartialUserResponse.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["username).subscribe",{"_index":650,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamechecked",{"_index":576,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernameexist",{"_index":577,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernameresponse",{"_index":665,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernameresponse.username",{"_index":666,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamevalue",{"_index":641,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamevalue.trim",{"_index":645,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["users",{"_index":289,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["usevalue",{"_index":351,"title":{},"body":{"interfaces/BrnButtonConfig.html":{}}}],["using",{"_index":887,"title":{},"body":{"index.html":{}}}],["valid",{"_index":715,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validation",{"_index":639,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validationerrors",{"_index":616,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validator",{"_index":617,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validatorfn",{"_index":618,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators",{"_index":619,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.email",{"_index":607,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.minlength(4",{"_index":606,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.required",{"_index":605,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["value",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["valueprovider",{"_index":339,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/LoginPageComponent.html":{},"components/MyUiComponent.html":{}}}],["variable",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":962,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variance",{"_index":507,"title":{},"body":{"directives/HlmButtonDirective.html":{},"dependencies.html":{}}}],["variant",{"_index":335,"title":{},"body":{"interfaces/BrnButtonConfig.html":{},"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["variantprops",{"_index":505,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/typealiases.html":{}}}],["variants",{"_index":524,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":888,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["violet",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["visible:outline",{"_index":517,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["visible:ring",{"_index":518,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["visit",{"_index":952,"title":{},"body":{"index.html":{}}}],["vivid",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":415,"title":{},"body":{"interfaces/ButtonClickEvent.html":{},"components/ButtonComponent.html":{},"components/ConfirmationModalComponent.html":{},"directives/HlmButtonDirective.html":{},"components/LoginPageComponent.html":{}}}],["w",{"_index":542,"title":{},"body":{"directives/HlmButtonDirective.html":{},"miscellaneous/variables.html":{}}}],["webkit",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["weight",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["whenever",{"_index":900,"title":{},"body":{"index.html":{}}}],["width",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["works",{"_index":733,"title":{},"body":{"components/MyUiComponent.html":{}}}],["wrap",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["wrong",{"_index":752,"title":{},"body":{"interfaces/PartialUserResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["zone.js",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":555,"title":{},"body":{"modules/HlmButtonModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FrontEnd'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'FrontEnd';\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  :host {\n    --bright-blue: oklch(51.01% 0.274 263.83);\n    --electric-violet: oklch(53.18% 0.28 296.97);\n    --french-violet: oklch(47.66% 0.246 305.88);\n    --vivid-pink: oklch(69.02% 0.277 332.77);\n    --hot-red: oklch(61.42% 0.238 15.34);\n    --orange-red: oklch(63.32% 0.24 31.68);\n\n    --gray-900: oklch(19.37% 0.006 300.98);\n    --gray-700: oklch(36.98% 0.014 302.71);\n    --gray-400: oklch(70.9% 0.015 304.04);\n\n    --red-to-pink-to-purple-vertical-gradient: linear-gradient(\n      180deg,\n      var(--orange-red) 0%,\n      var(--vivid-pink) 50%,\n      var(--electric-violet) 100%\n    );\n\n    --red-to-pink-to-purple-horizontal-gradient: linear-gradient(\n      90deg,\n      var(--orange-red) 0%,\n      var(--vivid-pink) 50%,\n      var(--electric-violet) 100%\n    );\n\n    --pill-accent: var(--bright-blue);\n\n    font-family: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\";\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1 {\n    font-size: 3.125rem;\n    color: var(--gray-900);\n    font-weight: 500;\n    line-height: 100%;\n    letter-spacing: -0.125rem;\n    margin: 0;\n    font-family: \"Inter Tight\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\";\n  }\n\n  p {\n    margin: 0;\n    color: var(--gray-700);\n  }\n\n  main {\n    width: 100%;\n    min-height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem;\n    box-sizing: inherit;\n    position: relative;\n  }\n\n  .angular-logo {\n    max-width: 9.2rem;\n  }\n\n  .content {\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    max-width: 700px;\n    margin-bottom: 3rem;\n  }\n\n  .content h1 {\n    margin-top: 1.75rem;\n  }\n\n  .content p {\n    margin-top: 1.5rem;\n  }\n\n  .divider {\n    width: 1px;\n    background: var(--red-to-pink-to-purple-vertical-gradient);\n    margin-inline: 0.5rem;\n  }\n\n  .pill-group {\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    flex-wrap: wrap;\n    gap: 1.25rem;\n  }\n\n  .pill {\n    display: flex;\n    align-items: center;\n    --pill-accent: var(--bright-blue);\n    background: color-mix(in srgb, var(--pill-accent) 5%, transparent);\n    color: var(--pill-accent);\n    padding-inline: 0.75rem;\n    padding-block: 0.375rem;\n    border-radius: 2.75rem;\n    border: 0;\n    transition: background 0.3s ease;\n    font-family: var(--inter-font);\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.4rem;\n    letter-spacing: -0.00875rem;\n    text-decoration: none;\n  }\n\n  .pill:hover {\n    background: color-mix(in srgb, var(--pill-accent) 15%, transparent);\n  }\n\n  .pill-group .pill:nth-child(6n + 1) {\n    --pill-accent: var(--bright-blue);\n  }\n  .pill-group .pill:nth-child(6n + 2) {\n    --pill-accent: var(--french-violet);\n  }\n  .pill-group .pill:nth-child(6n + 3),\n  .pill-group .pill:nth-child(6n + 4),\n  .pill-group .pill:nth-child(6n + 5) {\n    --pill-accent: var(--hot-red);\n  }\n\n  .pill-group svg {\n    margin-inline-start: 0.25rem;\n  }\n\n  .social-links {\n    display: flex;\n    align-items: center;\n    gap: 0.73rem;\n    margin-top: 1.5rem;\n  }\n\n  .social-links path {\n    transition: fill 0.3s ease;\n    fill: var(--gray-400);\n  }\n\n  .social-links a:hover svg path {\n    fill: var(--gray-900);\n  }\n\n  @media screen and (max-width: 650px) {\n    .content {\n      flex-direction: column;\n      width: max-content;\n    }\n\n    .divider {\n      height: 1px;\n      width: 100%;\n      background: var(--red-to-pink-to-purple-horizontal-gradient);\n      margin-block: 1.5rem;\n    }\n  }\n\n\n\n  \n    \n      \n        \n          \n          \n        \n        \n          \n            \n            \n            \n          \n          \n            \n            \n            \n            \n          \n          \n        \n      \n      Hello, {{ title }}\n      Congratulations! Your app is running. 🎉\n    \n    \n    \n      \n        @for (item of [\n          { title: 'Explore the Docs', link: 'https://angular.dev' },\n          { title: 'Learn with Tutorials', link: 'https://angular.dev/tutorials' },\n          { title: 'CLI Docs', link: 'https://angular.dev/tools/cli' },\n          { title: 'Angular Language Service', link: 'https://angular.dev/tools/language-service' },\n          { title: 'Angular DevTools', link: 'https://angular.dev/tools/devtools' },\n        ]; track item.title) {\n          \n            {{ item.title }}\n            \n              \n            \n          \n        }\n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  :host {    --bright-blue: oklch(51.01% 0.274 263.83);    --electric-violet: oklch(53.18% 0.28 296.97);    --french-violet: oklch(47.66% 0.246 305.88);    --vivid-pink: oklch(69.02% 0.277 332.77);    --hot-red: oklch(61.42% 0.238 15.34);    --orange-red: oklch(63.32% 0.24 31.68);    --gray-900: oklch(19.37% 0.006 300.98);    --gray-700: oklch(36.98% 0.014 302.71);    --gray-400: oklch(70.9% 0.015 304.04);    --red-to-pink-to-purple-vertical-gradient: linear-gradient(      180deg,      var(--orange-red) 0%,      var(--vivid-pink) 50%,      var(--electric-violet) 100%    );    --red-to-pink-to-purple-horizontal-gradient: linear-gradient(      90deg,      var(--orange-red) 0%,      var(--vivid-pink) 50%,      var(--electric-violet) 100%    );    --pill-accent: var(--bright-blue);    font-family: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",      \"Segoe UI Symbol\";    box-sizing: border-box;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }  h1 {    font-size: 3.125rem;    color: var(--gray-900);    font-weight: 500;    line-height: 100%;    letter-spacing: -0.125rem;    margin: 0;    font-family: \"Inter Tight\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",      \"Segoe UI Symbol\";  }  p {    margin: 0;    color: var(--gray-700);  }  main {    width: 100%;    min-height: 100%;    display: flex;    justify-content: center;    align-items: center;    padding: 1rem;    box-sizing: inherit;    position: relative;  }  .angular-logo {    max-width: 9.2rem;  }  .content {    display: flex;    justify-content: space-around;    width: 100%;    max-width: 700px;    margin-bottom: 3rem;  }  .content h1 {    margin-top: 1.75rem;  }  .content p {    margin-top: 1.5rem;  }  .divider {    width: 1px;    background: var(--red-to-pink-to-purple-vertical-gradient);    margin-inline: 0.5rem;  }  .pill-group {    display: flex;    flex-direction: column;    align-items: start;    flex-wrap: wrap;    gap: 1.25rem;  }  .pill {    display: flex;    align-items: center;    --pill-accent: var(--bright-blue);    background: color-mix(in srgb, var(--pill-accent) 5%, transparent);    color: var(--pill-accent);    padding-inline: 0.75rem;    padding-block: 0.375rem;    border-radius: 2.75rem;    border: 0;    transition: background 0.3s ease;    font-family: var(--inter-font);    font-size: 0.875rem;    font-style: normal;    font-weight: 500;    line-height: 1.4rem;    letter-spacing: -0.00875rem;    text-decoration: none;  }  .pill:hover {    background: color-mix(in srgb, var(--pill-accent) 15%, transparent);  }  .pill-group .pill:nth-child(6n + 1) {    --pill-accent: var(--bright-blue);  }  .pill-group .pill:nth-child(6n + 2) {    --pill-accent: var(--french-violet);  }  .pill-group .pill:nth-child(6n + 3),  .pill-group .pill:nth-child(6n + 4),  .pill-group .pill:nth-child(6n + 5) {    --pill-accent: var(--hot-red);  }  .pill-group svg {    margin-inline-start: 0.25rem;  }  .social-links {    display: flex;    align-items: center;    gap: 0.73rem;    margin-top: 1.5rem;  }  .social-links path {    transition: fill 0.3s ease;    fill: var(--gray-400);  }  .social-links a:hover svg path {    fill: var(--gray-900);  }  @media screen and (max-width: 650px) {    .content {      flex-direction: column;      width: max-content;    }    .divider {      height: 1px;      width: 100%;      background: var(--red-to-pink-to-purple-horizontal-gradient);      margin-block: 1.5rem;    }  }                                                                                                                                                                                                                  Hello, {{ title }}      Congratulations! Your app is running. 🎉                          @for (item of [          { title: \\'Explore the Docs\\', link: \\'https://angular.dev\\' },          { title: \\'Learn with Tutorials\\', link: \\'https://angular.dev/tutorials\\' },          { title: \\'CLI Docs\\', link: \\'https://angular.dev/tools/cli\\' },          { title: \\'Angular Language Service\\', link: \\'https://angular.dev/tools/language-service\\' },          { title: \\'Angular DevTools\\', link: \\'https://angular.dev/tools/devtools\\' },        ]; track item.title) {                      {{ item.title }}                                                        }                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the response received after an authentication attempt.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Represents the response received after an authentication attempt.\n * \n * @interface AuthResponse\n * @property {User} user - The authenticated user details.\n * @property {string} token - The JWT token provided upon successful authentication.\n * @property {string} [error] - An optional error message if the authentication fails.\n */\ninterface AuthResponse {\n\tuser: User;\n\ttoken: string;\n\terror?: string;\n}\n\n/**\n * Service responsible for handling user authentication and registration.\n * \n * @remarks\n * This service provides methods to log in and register users by making HTTP requests to the backend API.\n * \n * @example\n * ```typescript\n * constructor(private loginService: LoginService) {}\n * \n * this.loginService.login('user@example.com', 'password123').subscribe(response => {\n *   console.log(response);\n * });\n * \n * this.loginService.register({ email: 'newuser@example.com', password: 'password123' }).subscribe(response => {\n *   console.log(response);\n * });\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LoginService {\n\tprivate loginUrl = environment.loginUrl;\n\tprivate registerUrl = environment.registerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Logs in a user with the provided email and password.\n\t * \n\t * @param email - The email address of the user.\n\t * @param password - The password of the user.\n\t * @returns An observable of the authentication response.\n\t */\n\tlogin(email: string, password: string): Observable {\n\t\treturn this.http.post(`${this.loginUrl}`, {\n\t\t\temail,\n\t\t\tpassword,\n\t\t});\n\t}\n\n\t/**\n\t * Registers a new user with the provided user data.\n\t * \n\t * @param userData - Partial user data containing at least email and password.\n\t * @returns An observable of the authentication response.\n\t */\n\tregister(userData: Partial): Observable {\n\t\treturn this.http.post(\n\t\t\t`${this.registerUrl}`,\n\t\t\tuserData\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BrnButtonConfig.html":{"url":"interfaces/BrnButtonConfig.html","title":"interface - BrnButtonConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BrnButtonConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            variant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         ButtonVariants['size']\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonVariants['size']\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         ButtonVariants['variant']\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonVariants['variant']\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, ValueProvider, inject } from '@angular/core';\nimport type { ButtonVariants } from './hlm-button.directive';\n\nexport interface BrnButtonConfig {\n\tvariant: ButtonVariants['variant'];\n\tsize: ButtonVariants['size'];\n}\n\nconst defaultConfig: BrnButtonConfig = {\n\tvariant: 'default',\n\tsize: 'default',\n};\n\nconst BrnButtonConfigToken = new InjectionToken('BrnButtonConfig');\n\nexport function provideBrnButtonConfig(config: Partial): ValueProvider {\n\treturn { provide: BrnButtonConfigToken, useValue: { ...defaultConfig, ...config } };\n}\n\nexport function injectBrnButtonConfig(): BrnButtonConfig {\n\treturn inject(BrnButtonConfigToken, { optional: true }) ?? defaultConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonClickEvent.html":{"url":"interfaces/ButtonClickEvent.html","title":"interface - ButtonClickEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonClickEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/my-ui/src/lib/button/button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, Output, AfterContentInit, ElementRef } from '@angular/core';\nimport { HlmButtonModule } from '@spartan-ng/ui-button-helm';\nimport { CommonModule } from '@angular/common';\n\nexport type ButtonVariant =\n    | 'link'\n    | 'default'\n    | 'destructive'\n    | 'outline'\n    | 'secondary'\n    | 'ghost'\n    | null\n    | undefined;\nexport type ButtonSize = 'default' | 'sm' | 'lg' | 'icon';\n\nexport interface ButtonClickEvent {\n    id?: string;\n    value?: any;\n    timestamp: number;\n}\n\n@Component({\n    selector: 'my-ui-button',\n    standalone: true,\n    imports: [CommonModule, HlmButtonModule],\n    templateUrl: './button.component.html',\n    styleUrl: './button.component.scss',\n})\nexport class ButtonComponent implements AfterContentInit {\n    constructor(private elementRef: ElementRef) {}\n\n    @Input() text = 'Press me';\n    @Input() variant: ButtonVariant = 'default';\n    @Input() size: ButtonSize = 'default';\n    @Input() disabled = false;\n    @Input() loading = false;\n    @Input() fullWidth = false;\n    @Input() id?: string;\n    @Input() value?: any;\n\n    @Output() buttonClick = new EventEmitter();\n    \n    hasContent = false;\n\n\tngAfterContentInit() {\n        // Check for projected content\n        setTimeout(() => {\n            const buttonEl = this.elementRef.nativeElement.querySelector('button');\n            if (buttonEl) {\n                const hasProjectedContent = Array.from(buttonEl.childNodes as Node[]).some((node: Node) => {\n                    // Skip text nodes or empty nodes\n                    return node.nodeType !== Node.TEXT_NODE || \n                           ((node as Text).textContent || '').trim() !== '';\n                });\n                this.hasContent = hasProjectedContent;\n            }\n        });\n    }\n\n    onClick(event: MouseEvent): void {\n        if (this.disabled || this.loading) return;\n\n        this.buttonClick.emit({\n            id: this.id,\n            value: this.value,\n            timestamp: Date.now(),\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/my-ui/src/lib/button/button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-ui-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                HlmButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n            \n                styleUrl\n                ./button.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                fullWidth\n                            \n                            \n                                id\n                            \n                            \n                                loading\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                            \n                                value\n                            \n                            \n                                variant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fullWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         ButtonSize\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Press me'\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :         ButtonVariant\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/my-ui/src/lib/button/button.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/my-ui/src/lib/button/button.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/my-ui/src/lib/button/button.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/my-ui/src/lib/button/button.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, AfterContentInit, ElementRef } from '@angular/core';\nimport { HlmButtonModule } from '@spartan-ng/ui-button-helm';\nimport { CommonModule } from '@angular/common';\n\nexport type ButtonVariant =\n    | 'link'\n    | 'default'\n    | 'destructive'\n    | 'outline'\n    | 'secondary'\n    | 'ghost'\n    | null\n    | undefined;\nexport type ButtonSize = 'default' | 'sm' | 'lg' | 'icon';\n\nexport interface ButtonClickEvent {\n    id?: string;\n    value?: any;\n    timestamp: number;\n}\n\n@Component({\n    selector: 'my-ui-button',\n    standalone: true,\n    imports: [CommonModule, HlmButtonModule],\n    templateUrl: './button.component.html',\n    styleUrl: './button.component.scss',\n})\nexport class ButtonComponent implements AfterContentInit {\n    constructor(private elementRef: ElementRef) {}\n\n    @Input() text = 'Press me';\n    @Input() variant: ButtonVariant = 'default';\n    @Input() size: ButtonSize = 'default';\n    @Input() disabled = false;\n    @Input() loading = false;\n    @Input() fullWidth = false;\n    @Input() id?: string;\n    @Input() value?: any;\n\n    @Output() buttonClick = new EventEmitter();\n    \n    hasContent = false;\n\n\tngAfterContentInit() {\n        // Check for projected content\n        setTimeout(() => {\n            const buttonEl = this.elementRef.nativeElement.querySelector('button');\n            if (buttonEl) {\n                const hasProjectedContent = Array.from(buttonEl.childNodes as Node[]).some((node: Node) => {\n                    // Skip text nodes or empty nodes\n                    return node.nodeType !== Node.TEXT_NODE || \n                           ((node as Text).textContent || '').trim() !== '';\n                });\n                this.hasContent = hasProjectedContent;\n            }\n        });\n    }\n\n    onClick(event: MouseEvent): void {\n        if (this.disabled || this.loading) return;\n\n        this.buttonClick.emit({\n            id: this.id,\n            value: this.value,\n            timestamp: Date.now(),\n        });\n    }\n}\n    \n\n    \n        \n  \n    \n    \n      \n      \n    \n  \n  \n  {{ text }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationModalComponent.html":{"url":"components/ConfirmationModalComponent.html","title":"component - ConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/confirmation-modal/confirmation-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                ButtonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./confirmation-modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelText\n                            \n                            \n                                confirmText\n                            \n                            \n                                description\n                            \n                            \n                                highlightedText\n                            \n                            \n                                message\n                            \n                            \n                                show\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelled\n                            \n                            \n                                confirmed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Cancel'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Confirm'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Basic Description'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightedText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Basic question'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'basic configuration'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelled\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirm\n                        \n                    \n                \n            \n            \n                \nonConfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ButtonComponent } from 'my-ui';\n\n@Component({\n\tselector: 'app-confirmation-modal',\n\tstandalone: true,\n\timports: [CommonModule, ButtonComponent],\n\ttemplateUrl: './confirmation-modal.component.html',\n\tstyleUrl: './confirmation-modal.component.scss',\n})\nexport class ConfirmationModalComponent {\n\t@Input() show = false;\n\t@Input() title = 'basic configuration';\n\t@Input() message = 'Basic question';\n\t@Input() description = 'Basic Description';\n\t@Input() confirmText = 'Confirm';\n\t@Input() cancelText = 'Cancel';\n\t@Input() highlightedText = '';\n\n\t@Output() confirmed = new EventEmitter();\n\t@Output() cancelled = new EventEmitter();\n\n\tonConfirm(): void {\n\t\tthis.confirmed.emit();\n\t}\n\n\tonCancel(): void {\n\t\tthis.cancelled.emit();\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t{{ title }}\n\t\t{{ message }}\n\t\t\n\t\t\t{{ description }}\n\t\t\t{{ highlightedText }}\n\t\t\n\t\t\n\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ title }}\t\t{{ message }}\t\t\t\t\t{{ description }}\t\t\t{{ highlightedText }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HlmButtonDirective.html":{"url":"directives/HlmButtonDirective.html","title":"directive - HlmButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  HlmButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [hlmBtn]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n                    \n                        exportAs\n                        hlmBtn\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _additionalClasses\n                            \n                            \n                                    Protected\n                                    Readonly\n                                _computedClass\n                            \n                            \n                                    Private\n                                    Readonly\n                                _config\n                            \n                            \n                                    Public\n                                    Readonly\n                                size\n                            \n                            \n                                    Public\n                                    Readonly\n                                userClass\n                            \n                            \n                                    Public\n                                    Readonly\n                                variant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setClass\n                        \n                    \n                \n            \n            \n                \nsetClass(classes: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classes\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _additionalClasses\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        _computedClass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n\t\thlm(buttonVariants({ variant: this.variant(), size: this.size() }), this.userClass(), this._additionalClasses()),\n\t)\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectBrnButtonConfig()\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(this._config.size)\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userClass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('', { alias: 'class' })\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        variant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(this._config.variant)\n                    \n                \n                    \n                        \n                                Defined in libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, computed, input, signal } from '@angular/core';\nimport { hlm } from '@spartan-ng/brain/core';\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport type { ClassValue } from 'clsx';\nimport { injectBrnButtonConfig } from './hlm-button.token';\n\nexport const buttonVariants = cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\t\t\t\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n\t\t\t\toutline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'underline-offset-4 hover:underline text-primary',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 py-2 px-4',\n\t\t\t\tsm: 'h-9 px-3 rounded-md',\n\t\t\t\tlg: 'h-11 px-8 rounded-md',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n);\nexport type ButtonVariants = VariantProps;\n\n@Directive({\n\tselector: '[hlmBtn]',\n\tstandalone: true,\n\texportAs: 'hlmBtn',\n\thost: {\n\t\t'[class]': '_computedClass()',\n\t},\n})\nexport class HlmButtonDirective {\n\tprivate readonly _config = injectBrnButtonConfig();\n\n\tprivate readonly _additionalClasses = signal('');\n\n\tpublic readonly userClass = input('', { alias: 'class' });\n\n\tprotected readonly _computedClass = computed(() =>\n\t\thlm(buttonVariants({ variant: this.variant(), size: this.size() }), this.userClass(), this._additionalClasses()),\n\t);\n\n\tpublic readonly variant = input(this._config.variant);\n\n\tpublic readonly size = input(this._config.size);\n\n\tsetClass(classes: string): void {\n\t\tthis._additionalClasses.set(classes);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HlmButtonModule.html":{"url":"modules/HlmButtonModule.html","title":"module - HlmButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    HlmButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HlmButtonModule\n\n\n\ncluster_HlmButtonModule_exports\n\n\n\ncluster_HlmButtonModule_imports\n\n\n\n\nHlmButtonDirective\n\nHlmButtonDirective\n\n\n\nHlmButtonModule\n\nHlmButtonModule\n\nHlmButtonModule -->\n\nHlmButtonDirective->HlmButtonModule\n\n\n\n\n\nHlmButtonDirective \n\nHlmButtonDirective \n\nHlmButtonDirective  -->\n\nHlmButtonModule->HlmButtonDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ui/ui-button-helm/src/index.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HlmButtonDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HlmButtonDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HlmButtonDirective } from './lib/hlm-button.directive';\nexport * from './lib/hlm-button.token';\n\nexport * from './lib/hlm-button.directive';\n\n@NgModule({\n\timports: [HlmButtonDirective],\n\texports: [HlmButtonDirective],\n})\nexport class HlmButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                ConfirmationModalComponent\n                                ButtonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailError\n                            \n                            \n                                emailExists\n                            \n                            \n                                    Private\n                                formBuilder\n                            \n                            \n                                foundUsername\n                            \n                            \n                                    Private\n                                isRegistering\n                            \n                            \n                                loginForm\n                            \n                            \n                                showEmailConfirmation\n                            \n                            \n                                    Private\n                                userGetterService\n                            \n                            \n                                usernameChecked\n                            \n                            \n                                usernameExist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEmailConfirmation\n                            \n                            \n                                checkEmailExists\n                            \n                            \n                                checkIfUserExist\n                            \n                            \n                                confirmEmailUser\n                            \n                            \n                                dataAvailable\n                            \n                            \n                                registerDiv\n                            \n                            \n                                UpdateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEmailConfirmation\n                        \n                    \n                \n            \n            \n                \ncancelEmailConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Handle user canceling the email confirmation\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmailExists\n                        \n                    \n                \n            \n            \n                \ncheckEmailExists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserExist\n                        \n                    \n                \n            \n            \n                \ncheckIfUserExist()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmEmailUser\n                        \n                    \n                \n            \n            \n                \nconfirmEmailUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Handle user confirming they are the account holder\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataAvailable\n                        \n                    \n                \n            \n            \n                \ndataAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDiv\n                        \n                    \n                \n            \n            \n                \nregisterDiv()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:203\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateData\n                        \n                    \n                \n            \n            \n                \nUpdateData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:193\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foundUsername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isRegistering\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n\t\tusername: ['', [Validators.required, Validators.minLength(4)]],\n\t\tpassword: ['', Validators.required],\n\t\temail: ['', Validators.email],\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showEmailConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userGetterService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserGetterService)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameChecked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameExist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { inject } from '@angular/core';\nimport {\n\tAbstractControl,\n\tFormBuilder,\n\tFormGroup,\n\tReactiveFormsModule,\n\tValidationErrors,\n\tValidator,\n\tValidatorFn,\n\tValidators,\n} from '@angular/forms';\nimport { first } from 'rxjs';\nimport { UserGetterService } from '../user-getter.service';\nimport { response } from 'express';\nimport { ConfirmationModalComponent } from '../shared/confirmation-modal/confirmation-modal.component';\nimport { ButtonComponent } from 'my-ui';\n\n/* export function EmailProviderValidator(\n    email: string,\n    provider: string\n): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n        const emailControl = formGroup.get(email);\n        const providerControl = formGroup.get(provider);\n\n        if (!emailControl || !providerControl || emailControl.errors || providerControl.errors) {\n            return null;\n        }\n        \n        const email: string = emailControl.value || '';\n        const emailProvider: string = providerControl.value || '';\n        \n        if (!emailProvider || !email) {\n            return null;\n        }\n        \n        // Check if email contains the provider\n        if (email.includes(emailProvider)) {\n            return null;\n        }\n        \n        // Return validation error\n        return { emailProviderMismatch: true };\n    };\n}\n */\n@Component({\n\tselector: 'app-login-page',\n\tstandalone: true,\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tConfirmationModalComponent,\n\t\tButtonComponent,\n\t],\n\ttemplateUrl: './login-page.component.html',\n\tstyleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n\tprivate formBuilder = inject(FormBuilder);\n\tprivate userGetterService = inject(UserGetterService);\n\tprivate isRegistering: boolean = false;\n\tusernameExist: boolean = false;\n\tusernameChecked: string = '';\n\temailExists: boolean = false;\n\temailError: string = '';\n\tshowEmailConfirmation: boolean = false;\n\tfoundUsername: string = '';\n\tloginForm = this.formBuilder.group({\n\t\tusername: ['', [Validators.required, Validators.minLength(4)]],\n\t\tpassword: ['', Validators.required],\n\t\temail: ['', Validators.email],\n\t});\n\tdataAvailable(): boolean {\n\t\tconst usernameValue: string =\n\t\t\tthis.loginForm.get('username')?.value || '';\n\t\tconst passwordValue: string =\n\t\t\tthis.loginForm.get('password')?.value || '';\n\t\treturn !!(\n\t\t\tusernameValue &&\n\t\t\tpasswordValue &&\n\t\t\tusernameValue.trim() !== '' &&\n\t\t\tpasswordValue.trim() !== ''\n\t\t);\n\t}\n\tcheckIfUserExist(): void {\n\t\tconst username: string | null =\n\t\t\tthis.loginForm.get('username')?.value || '';\n\t\tconst email: string | null = this.loginForm.get('email')?.value || '';\n\n\t\tif (!username && !email && !this.loginForm.get('username')?.errors)\n\t\t\treturn;\n\t\tthis.userGetterService.userExists(email, username).subscribe({\n\t\t\tnext: (response) => {\n\t\t\t\tif (username) {\n\t\t\t\t\tthis.usernameChecked = username;\n\t\t\t\t\tthis.usernameExist = response.userExists;\n\t\t\t\t\tif (!this.usernameExist) {\n\t\t\t\t\t\tthis.isRegistering = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\tcheckEmailExists(): void {\n\t\tconst email = this.loginForm.get('email')?.value;\n\n\t\tif (email && !this.loginForm.get('email')?.errors) {\n\t\t\tthis.userGetterService.userExists(email, null).subscribe({\n\t\t\t\tnext: (response) => {\n\t\t\t\t\tthis.emailExists = response.userExists;\n\n\t\t\t\t\tif (this.emailExists) {\n\t\t\t\t\t\t// Email exists, get the username but don't auto-fill\n\t\t\t\t\t\tthis.userGetterService\n\t\t\t\t\t\t\t.getUsernameByEmail(email)\n\t\t\t\t\t\t\t.subscribe({\n\t\t\t\t\t\t\t\tnext: (usernameResponse) => {\n\t\t\t\t\t\t\t\t\tif (usernameResponse.username) {\n\t\t\t\t\t\t\t\t\t\t// Show confirmation dialog instead of auto-filling\n\t\t\t\t\t\t\t\t\t\tthis.foundUsername =\n\t\t\t\t\t\t\t\t\t\t\tusernameResponse.username;\n\t\t\t\t\t\t\t\t\t\tthis.showEmailConfirmation = true;\n\t\t\t\t\t\t\t\t\t\tconsole.log('email already present');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: (error) => {\n\t\t\t\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\t\t\t'Error retrieving username:',\n\t\t\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.emailError =\n\t\t\t\t\t\t\t\t\t\t'Error retrieving account information.';\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Email doesn't exist, which is fine for registration\n\t\t\t\t\t\tthis.emailError = '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: (error) => {\n\t\t\t\t\tconsole.error('Error checking email existence:', error);\n\t\t\t\t\tthis.emailError = 'Error checking email.';\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Handle user confirming they are the account holder\n\t */\n\tconfirmEmailUser(): void {\n\t\t// Set the username from the found account\n\t\tthis.loginForm.patchValue({\n\t\t\tusername: this.foundUsername,\n\t\t});\n\t\tthis.usernameChecked = this.foundUsername;\n\t\tthis.usernameExist = true;\n\n\t\t// Hide the confirmation dialog\n\t\tthis.showEmailConfirmation = false;\n\n\t\t// Focus on the password field\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById('password')?.focus();\n\t\t}, 100);\n\t}\n\n\t/**\n\t * Handle user canceling the email confirmation\n\t */\n\tcancelEmailConfirmation(): void {\n\t\t// Hide the confirmation dialog\n\t\tthis.showEmailConfirmation = false;\n\n\t\t// Clear the email field\n\t\tthis.loginForm.patchValue({\n\t\t\temail: '',\n\t\t});\n\n\t\t// Show error message\n\t\tthis.emailError =\n\t\t\t'This email is already in use. Please use a different email.';\n\n\t\t// Focus back on the email field\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById('email')?.focus();\n\t\t}, 100);\n\t}\n\n\tUpdateData(): void {\n\t\tif (this.loginForm.valid) {\n\t\t\tconsole.log('Form data:', this.loginForm.value);\n\t\t\t// You could do your real update logic here\n\t\t} else {\n\t\t\tconsole.log('Form is invalid');\n\t\t\t// Mark all fields as touched to display validation errors\n\t\t\tthis.loginForm.markAllAsTouched();\n\t\t}\n\t}\n\tregisterDiv(): boolean {\n\t\treturn !this.usernameExist && this.usernameChecked !== '';\n\t  }\n}\n\n    \n\n    \n        \n\tLogin Page\n\n\t\n\t\t\n\t\t\n\t\t\tUsername:\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tUsername is required\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tUsername must be at least 4 characters\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tUser exists. Please enter password to login.\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tUsername not found. Please complete registration.\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\tFull Email:\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tPlease enter a valid email\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t{{ emailError }}\n\t\t\t\n\t\t\n\n\t\t\n\n\t\t\n\t\t\tPassword:\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tPassword is required\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\tLOGIN\n\t\t\t\n\n\t\t\t\n\t\t\t\tREGISTER\n\t\t\t\n\t\t\n\t\n\n\tForm Status: {{ loginForm.status }}\n\t\n\t\n\n\n\n\n\tForm Data:\n\tUsername = {{ loginForm.get(\"username\")?.value || \"\" }}\n\tPassword = {{ loginForm.get(\"password\")?.value || \"\" }}\n\tEmail Provider = {{ loginForm.get(\"email.provider\")?.value || \"\" }}\n\tEmail = {{ loginForm.get(\"email.emailString\")?.value || \"\" }}\n\n\n\n\tComplete the form to see data\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tLogin Page\t\t\t\t\t\t\t\tUsername:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUsername is required\t\t\t\t\t\t\t\t\t\t\t\t\tUsername must be at least 4 characters\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser exists. Please enter password to login.\t\t\t\t\t\t\t\t\t\t\t\t\tUsername not found. Please complete registration.\t\t\t\t\t\t\t\t\t\t\t\t\t\tFull Email:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPlease enter a valid email\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ emailError }}\t\t\t\t\t\t\t\t\t\t\t\tPassword:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPassword is required\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLOGIN\t\t\t\t\t\t\t\t\t\tREGISTER\t\t\t\t\t\t\tForm Status: {{ loginForm.status }}\t\t\tForm Data:\tUsername = {{ loginForm.get(\"username\")?.value || \"\" }}\tPassword = {{ loginForm.get(\"password\")?.value || \"\" }}\tEmail Provider = {{ loginForm.get(\"email.provider\")?.value || \"\" }}\tEmail = {{ loginForm.get(\"email.emailString\")?.value || \"\" }}\tComplete the form to see data'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for handling user authentication and registration.\nThis service provides methods to log in and register users by making HTTP requests to the backend API.\nExample :```typescript\nconstructor(private loginService: LoginService) {}Example :  console.log(response);\n});Example :  console.log(response);\n});Example :\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loginUrl\n                            \n                            \n                                    Private\n                                registerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Logs in a user with the provided email and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email address of the user.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the authentication response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the provided user data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPartial user data containing at least email and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the authentication response.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.loginUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/login.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.registerUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/login.service.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Represents the response received after an authentication attempt.\n * \n * @interface AuthResponse\n * @property {User} user - The authenticated user details.\n * @property {string} token - The JWT token provided upon successful authentication.\n * @property {string} [error] - An optional error message if the authentication fails.\n */\ninterface AuthResponse {\n\tuser: User;\n\ttoken: string;\n\terror?: string;\n}\n\n/**\n * Service responsible for handling user authentication and registration.\n * \n * @remarks\n * This service provides methods to log in and register users by making HTTP requests to the backend API.\n * \n * @example\n * ```typescript\n * constructor(private loginService: LoginService) {}\n * \n * this.loginService.login('user@example.com', 'password123').subscribe(response => {\n *   console.log(response);\n * });\n * \n * this.loginService.register({ email: 'newuser@example.com', password: 'password123' }).subscribe(response => {\n *   console.log(response);\n * });\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LoginService {\n\tprivate loginUrl = environment.loginUrl;\n\tprivate registerUrl = environment.registerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Logs in a user with the provided email and password.\n\t * \n\t * @param email - The email address of the user.\n\t * @param password - The password of the user.\n\t * @returns An observable of the authentication response.\n\t */\n\tlogin(email: string, password: string): Observable {\n\t\treturn this.http.post(`${this.loginUrl}`, {\n\t\t\temail,\n\t\t\tpassword,\n\t\t});\n\t}\n\n\t/**\n\t * Registers a new user with the provided user data.\n\t * \n\t * @param userData - Partial user data containing at least email and password.\n\t * @returns An observable of the authentication response.\n\t */\n\tregister(userData: Partial): Observable {\n\t\treturn this.http.post(\n\t\t\t`${this.registerUrl}`,\n\t\t\tuserData\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyUiComponent.html":{"url":"components/MyUiComponent.html","title":"component - MyUiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyUiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/my-ui/src/lib/my-ui.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-myUi\n            \n\n\n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n  my-ui works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-myUi',\n  imports: [],\n  template: `\n    \n      my-ui works!\n    \n  `,\n  styles: ``\n})\nexport class MyUiComponent {\n\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  my-ui works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'my-ui-button'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'MyUiComponent', 'selector': 'lib-myUi'}];\n    var DIRECTIVES = [{'name': 'HlmButtonDirective', 'selector': '[hlmBtn]'}];\n    var ACTUAL_COMPONENT = {'name': 'MyUiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MyUiService.html":{"url":"injectables/MyUiService.html","title":"injectable - MyUiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MyUiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/my-ui/src/lib/my-ui.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/my-ui/src/lib/my-ui.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyUiService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartialUserResponse.html":{"url":"interfaces/PartialUserResponse.html","title":"interface - PartialUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PartialUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Response interface for partial user data requests\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            userData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userData:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\n\n/**\n * Simple respone for user infomation\n * @property user - the user returned by the response\n * @property errors - Optional errors if something goes wrong\n */\ninterface UserGetter {\n\tuser: User;\n\terrors?: string;\n}\n\n/**\n * Response interface for partial user data requests\n * @property userData - Selected user fields\n * @property errors - Array of error messages if issues occur\n */\ninterface PartialUserResponse {\n\tuserData: Partial;\n\terrors?: string[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * Service to handle user information\n * Checks with the Auth API for the user existance and info\n */\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Check if a user with provided credentials exist\n\t * @param email - Email to check if a corresponding user exists\n\t * @param username - Username to check if a corresponding user exists\n\t * @returns Observable - Observable that returns the user existence\n\t */\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\treturn new Observable((observer) => {\n\t\t\tobserver.next({ userExists: false });\n\t\t\tobserver.complete();\n\t\t});\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n\n\tuserInfo(): Observable {\n\t\treturn this.http.get(`${this.userInfoUrl}`);\n\t}\n\n\t/**\n\t * Retrieves specific user fields to minimize payload size\n\t * @param userId - ID of the user to retrieve\n\t * @param fields - Array of field names to include in response\n\t * @returns Observable containing requested user fields and possible error messages\n\t */\n\tgetUserPartial(\n\t\tuserId: string,\n\t\tfields: string[]\n\t): Observable {\n\t\tconst params = new HttpParams().set('fields', fields.join(','));\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/${userId}`,\n\t\t\t{ params }\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the username associated with the provided email\n\t * @param email - Email of the user to retrieve the username for\n\t * @returns Observable containing the username and possible error messages\n\t */\n\tgetUsernameByEmail(email: string): Observable {\n\t\treturn new Observable((observer) => {\n\t\t\tobserver.next({ username : 'lollo' });\n\t\t\tobserver.complete();\n\t\t});\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/usernameByEmail/${email}`\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                role\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, username: string, email: string, firstName: string, lastName: string, role: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        role\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\tconstructor(\n\t\tpublic id: number,\n\t\tpublic username: string,\n\t\tpublic email: string,\n\t\tpublic firstName: string,\n\t\tpublic lastName: string,\n\t\tpublic role: string\n\t) {\n\t\t\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserExist.html":{"url":"interfaces/UserExist.html","title":"interface - UserExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Response interface for user existence check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userExists\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userExists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userExists:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\n\n/**\n * Simple respone for user infomation\n * @property user - the user returned by the response\n * @property errors - Optional errors if something goes wrong\n */\ninterface UserGetter {\n\tuser: User;\n\terrors?: string;\n}\n\n/**\n * Response interface for partial user data requests\n * @property userData - Selected user fields\n * @property errors - Array of error messages if issues occur\n */\ninterface PartialUserResponse {\n\tuserData: Partial;\n\terrors?: string[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * Service to handle user information\n * Checks with the Auth API for the user existance and info\n */\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Check if a user with provided credentials exist\n\t * @param email - Email to check if a corresponding user exists\n\t * @param username - Username to check if a corresponding user exists\n\t * @returns Observable - Observable that returns the user existence\n\t */\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\treturn new Observable((observer) => {\n\t\t\tobserver.next({ userExists: false });\n\t\t\tobserver.complete();\n\t\t});\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n\n\tuserInfo(): Observable {\n\t\treturn this.http.get(`${this.userInfoUrl}`);\n\t}\n\n\t/**\n\t * Retrieves specific user fields to minimize payload size\n\t * @param userId - ID of the user to retrieve\n\t * @param fields - Array of field names to include in response\n\t * @returns Observable containing requested user fields and possible error messages\n\t */\n\tgetUserPartial(\n\t\tuserId: string,\n\t\tfields: string[]\n\t): Observable {\n\t\tconst params = new HttpParams().set('fields', fields.join(','));\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/${userId}`,\n\t\t\t{ params }\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the username associated with the provided email\n\t * @param email - Email of the user to retrieve the username for\n\t * @returns Observable containing the username and possible error messages\n\t */\n\tgetUsernameByEmail(email: string): Observable {\n\t\treturn new Observable((observer) => {\n\t\t\tobserver.next({ username : 'lollo' });\n\t\t\tobserver.complete();\n\t\t});\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/usernameByEmail/${email}`\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserGetter.html":{"url":"interfaces/UserGetter.html","title":"interface - UserGetter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserGetter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Simple respone for user infomation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\n\n/**\n * Simple respone for user infomation\n * @property user - the user returned by the response\n * @property errors - Optional errors if something goes wrong\n */\ninterface UserGetter {\n\tuser: User;\n\terrors?: string;\n}\n\n/**\n * Response interface for partial user data requests\n * @property userData - Selected user fields\n * @property errors - Array of error messages if issues occur\n */\ninterface PartialUserResponse {\n\tuserData: Partial;\n\terrors?: string[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * Service to handle user information\n * Checks with the Auth API for the user existance and info\n */\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Check if a user with provided credentials exist\n\t * @param email - Email to check if a corresponding user exists\n\t * @param username - Username to check if a corresponding user exists\n\t * @returns Observable - Observable that returns the user existence\n\t */\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\treturn new Observable((observer) => {\n\t\t\tobserver.next({ userExists: false });\n\t\t\tobserver.complete();\n\t\t});\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n\n\tuserInfo(): Observable {\n\t\treturn this.http.get(`${this.userInfoUrl}`);\n\t}\n\n\t/**\n\t * Retrieves specific user fields to minimize payload size\n\t * @param userId - ID of the user to retrieve\n\t * @param fields - Array of field names to include in response\n\t * @returns Observable containing requested user fields and possible error messages\n\t */\n\tgetUserPartial(\n\t\tuserId: string,\n\t\tfields: string[]\n\t): Observable {\n\t\tconst params = new HttpParams().set('fields', fields.join(','));\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/${userId}`,\n\t\t\t{ params }\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the username associated with the provided email\n\t * @param email - Email of the user to retrieve the username for\n\t * @returns Observable containing the username and possible error messages\n\t */\n\tgetUsernameByEmail(email: string): Observable {\n\t\treturn new Observable((observer) => {\n\t\t\tobserver.next({ username : 'lollo' });\n\t\t\tobserver.complete();\n\t\t});\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/usernameByEmail/${email}`\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGetterService.html":{"url":"injectables/UserGetterService.html","title":"injectable - UserGetterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserGetterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userCheckerUrl\n                            \n                            \n                                    Private\n                                userInfoUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsernameByEmail\n                            \n                            \n                                getUserPartial\n                            \n                            \n                                userExists\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-getter.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsernameByEmail\n                        \n                    \n                \n            \n            \n                \ngetUsernameByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Retrieves the username associated with the provided email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEmail of the user to retrieve the username for\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable containing the username and possible error messages\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserPartial\n                        \n                    \n                \n            \n            \n                \ngetUserPartial(userId: string, fields: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Retrieves specific user fields to minimize payload size\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the user to retrieve\n\n\n                                            \n                                        \n                                        \n                                                fields\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nArray of field names to include in response\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable containing requested user fields and possible error messages\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userExists\n                        \n                    \n                \n            \n            \n                \nuserExists(email: string | null, username: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Check if a user with provided credentials exist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEmail to check if a corresponding user exists\n\n\n                                            \n                                        \n                                        \n                                                username\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUsername to check if a corresponding user exists\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable - Observable that returns the user existence\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userCheckerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.userCheckerUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/user-getter.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userInfoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.userInfoUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/user-getter.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\n\n/**\n * Simple respone for user infomation\n * @property user - the user returned by the response\n * @property errors - Optional errors if something goes wrong\n */\ninterface UserGetter {\n\tuser: User;\n\terrors?: string;\n}\n\n/**\n * Response interface for partial user data requests\n * @property userData - Selected user fields\n * @property errors - Array of error messages if issues occur\n */\ninterface PartialUserResponse {\n\tuserData: Partial;\n\terrors?: string[];\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * Service to handle user information\n * Checks with the Auth API for the user existance and info\n */\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Check if a user with provided credentials exist\n\t * @param email - Email to check if a corresponding user exists\n\t * @param username - Username to check if a corresponding user exists\n\t * @returns Observable - Observable that returns the user existence\n\t */\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\treturn new Observable((observer) => {\n\t\t\tobserver.next({ userExists: false });\n\t\t\tobserver.complete();\n\t\t});\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n\n\tuserInfo(): Observable {\n\t\treturn this.http.get(`${this.userInfoUrl}`);\n\t}\n\n\t/**\n\t * Retrieves specific user fields to minimize payload size\n\t * @param userId - ID of the user to retrieve\n\t * @param fields - Array of field names to include in response\n\t * @returns Observable containing requested user fields and possible error messages\n\t */\n\tgetUserPartial(\n\t\tuserId: string,\n\t\tfields: string[]\n\t): Observable {\n\t\tconst params = new HttpParams().set('fields', fields.join(','));\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/${userId}`,\n\t\t\t{ params }\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the username associated with the provided email\n\t * @param email - Email of the user to retrieve the username for\n\t * @returns Observable containing the username and possible error messages\n\t */\n\tgetUsernameByEmail(email: string): Observable {\n\t\treturn new Observable((observer) => {\n\t\t\tobserver.next({ username : 'lollo' });\n\t\t\tobserver.complete();\n\t\t});\n\t\treturn this.http.get(\n\t\t\t`${this.userInfoUrl}/usernameByEmail/${email}`\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n            \n            directive\n            HlmButtonDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n            \n            variable\n            buttonVariants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n            \n            type alias\n            ButtonVariants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            interface\n            BrnButtonConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            function\n            injectBrnButtonConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            function\n            provideBrnButtonConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            variable\n            BrnButtonConfigToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n            \n            variable\n            defaultConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/my-ui/src/lib/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/my-ui/src/lib/button/button.component.ts\n            \n            interface\n            ButtonClickEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        projects/my-ui/src/lib/button/button.component.ts\n            \n            type alias\n            ButtonSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        projects/my-ui/src/lib/button/button.component.ts\n            \n            type alias\n            ButtonVariant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/my-ui/src/lib/my-ui.component.ts\n            \n            component\n            MyUiComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/my-ui/src/lib/my-ui.service.ts\n            \n            injectable\n            MyUiService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            interface\n            AuthResponse\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/confirmation-modal/confirmation-modal.component.ts\n            \n            component\n            ConfirmationModalComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            injectable\n            UserGetterService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            interface\n            PartialUserResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            interface\n            UserExist\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            interface\n            UserGetter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 18.0.0\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/ssr : ^19.2.1\n        \n            @spartan-ng/brain : 0.0.1-alpha.422\n        \n            @tailwindcss/postcss : ^4.0.14\n        \n            class-variance-authority : ^0.7.0\n        \n            clsx : ^2.1.1\n        \n            express : ^4.18.2\n        \n            postcss : ^8.5.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            injectBrnButtonConfig   (libs/.../hlm-button.token.ts)\n                        \n                        \n                            provideBrnButtonConfig   (libs/.../hlm-button.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        injectBrnButtonConfig\n                        \n                    \n                \n            \n            \n                \ninjectBrnButtonConfig()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         BrnButtonConfig\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideBrnButtonConfig\n                        \n                    \n                \n            \n            \n                \nprovideBrnButtonConfig(config: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValueProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontEnd\nThis project was generated using Angular CLI version 19.2.1.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HlmButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HlmButtonModule\n\n\n\ncluster_HlmButtonModule_imports\n\n\n\ncluster_HlmButtonModule_exports\n\n\n\n\nHlmButtonDirective\n\nHlmButtonDirective\n\n\n\nHlmButtonModule\n\nHlmButtonModule\n\nHlmButtonModule -->\n\nHlmButtonDirective->HlmButtonModule\n\n\n\n\n\nHlmButtonDirective \n\nHlmButtonDirective \n\nHlmButtonDirective  -->\n\nHlmButtonModule->HlmButtonDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ButtonSize   (projects/.../button.component.ts)\n                        \n                        \n                            ButtonVariant   (projects/.../button.component.ts)\n                        \n                        \n                            ButtonVariants   (libs/.../hlm-button.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/my-ui/src/lib/button/button.component.ts\n    \n    \n        \n            \n                \n                    \n                    ButtonSize\n                \n            \n            \n                \n                        \"default\" | \"sm\" | \"lg\" | \"icon\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ButtonVariant\n                \n            \n            \n                \n                        \"link\" | \"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | null | undefined\n\n                \n            \n        \n    \n    libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n    \n    \n        \n            \n                \n                    \n                    ButtonVariants\n                \n            \n            \n                \n                        VariantProps<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            BrnButtonConfigToken   (libs/.../hlm-button.token.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            buttonVariants   (libs/.../hlm-button.directive.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            defaultConfig   (libs/.../hlm-button.token.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproviders: [\n\t\tprovideZoneChangeDetection({ eventCoalescing: true }),\n\t\tprovideRouter(routes),\n\t\tprovideClientHydration(withEventReplay()),\n\t\tprovideHttpClient(withFetch()),\n\t],\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    libs/ui/ui-button-helm/src/lib/hlm-button.token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BrnButtonConfigToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('BrnButtonConfig')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BrnButtonConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n\tvariant: 'default',\n\tsize: 'default',\n}\n                    \n                \n\n\n        \n    \n\n    libs/ui/ui-button-helm/src/lib/hlm-button.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buttonVariants\n                        \n                    \n                \n            \n                \n                    \n                        Default value : cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\t\t\t\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n\t\t\t\toutline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'underline-offset-4 hover:underline text-primary',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 py-2 px-4',\n\t\t\t\tsm: 'h-9 px-3 rounded-md',\n\t\t\t\tlg: 'h-11 px-8 rounded-md',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproduction: false,\n\tauthUrl: 'localhost:8000',\n\tloginUrl: 'localhost:8000/login',\n\tregisterUrl: 'localhost:8000/register',\n\tuserInfoUrl: 'localhost:8000/user/me',\n\tuserCheckerUrl: 'localhost:8000/user',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproduction: true,\n\tauthUrl: 'localhost:8000',\n\tloginUrl: 'localhost:8000/login',\n\tregisterUrl: 'localhost:8000/register',\n\tuserInfoUrl: 'localhost:8000/user/me',\n\tuserCheckerUrl: 'localhost:8000/user',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
