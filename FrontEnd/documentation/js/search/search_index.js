var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.018,1,1.407]],["body/components/AppComponent.html",[0,0.733,1,1.211,2,0.763,3,0.229,4,0.192,5,0.633,6,0.633,7,0.633,8,0.192,9,0.633,10,0.633,11,1.746,12,1.505,13,0.552,14,1.101,15,1.85,16,1.101,17,1.394,18,1.101,19,1.394,20,0.129,21,0.277,22,3.878,23,0.159,24,0.063,25,0.192,26,0.318,27,0.373,28,1.101,29,0.373,30,0.802,31,0.47,32,0.229,33,0.633,34,0.229,35,0.129,36,1.394,37,3.128,38,3.128,39,1.394,40,1.394,41,1.394,42,2.748,43,3.41,44,1.394,45,1.394,46,1.394,47,2.211,48,1.394,49,1.394,50,1.394,51,2.748,52,3.803,53,1.394,54,1.394,55,1.394,56,2.211,57,4.063,58,1.394,59,1.394,60,1.394,61,2.748,62,1.394,63,1.394,64,1.394,65,3.803,66,2.748,67,1.394,68,1.394,69,1.394,70,2.211,71,1.394,72,1.394,73,1.394,74,2.211,75,1.394,76,1.394,77,1.394,78,3.128,79,2.211,80,3.629,81,2.211,82,1.394,83,3.755,84,2.693,85,1.746,86,3.003,87,2.211,88,1.394,89,4.538,90,3.945,91,4.248,92,2.748,93,2.748,94,3.128,95,2.211,96,2.211,97,3.629,98,3.629,99,2.211,100,2.211,101,2.211,102,2.211,103,2.211,104,3.803,105,3.128,106,2.211,107,2.748,108,2.211,109,2.748,110,1.394,111,2.211,112,1.394,113,1.394,114,1.394,115,1.394,116,2.211,117,2.211,118,1.394,119,2.211,120,2.211,121,2.211,122,3.128,123,2.211,124,2.211,125,1.394,126,4.063,127,1.394,128,2.211,129,1.394,130,3.945,131,1.394,132,2.693,133,3.945,134,2.211,135,3.803,136,3.128,137,3.128,138,3.128,139,2.748,140,1.394,141,1.394,142,1.394,143,1.394,144,1.789,145,1.394,146,3.128,147,1.394,148,1.394,149,1.394,150,1.394,151,1.394,152,1.394,153,2.748,154,1.394,155,2.748,156,2.211,157,2.211,158,3.41,159,2.748,160,1.394,161,3.803,162,2.211,163,2.211,164,1.746,165,2.211,166,2.211,167,1.394,168,2.211,169,2.211,170,2.211,171,2.211,172,1.394,173,2.211,174,1.394,175,1.394,176,1.394,177,2.211,178,2.211,179,2.211,180,1.394,181,1.394,182,1.394,183,1.394,184,1.394,185,1.394,186,1.394,187,1.394,188,1.394,189,1.394,190,3.41,191,3.41,192,1.101,193,1.101,194,1.101,195,1.101,196,2.211,197,1.394,198,2.748,199,2.748,200,1.394,201,1.746,202,2.748,203,1.394,204,1.394,205,1.394,206,1.394,207,1.394,208,1.394,209,1.101,210,1.394,211,1.394,212,2.211,213,3.41,214,1.394,215,1.394,216,1.394,217,1.394,218,0.908,219,1.394,220,1.394,221,2.211,222,1.394,223,1.394,224,1.394,225,1.394,226,2.211,227,0.633,228,1.101,229,1.101,230,0.633,231,0.633,232,0.552,233,0.633,234,0.439,235,0.522,236,0.522,237,0.522,238,0.633,239,0.017,240,0.017]],["title/interfaces/AuthResponse.html",[241,0.616,242,1.407]],["body/interfaces/AuthResponse.html",[3,0.832,4,0.699,8,0.699,13,1.154,20,0.469,21,0.748,23,0.83,24,0.064,25,1.16,31,1.543,32,0.832,34,0.832,35,0.469,239,0.046,240,0.046,241,0.699,242,2.065,243,1.596,244,1.897,245,1.493,246,2.878,247,3.491,248,1.396,249,1.077,250,0.982,251,1.355,252,1.753,253,1.355,254,1.943,255,0.982,256,1.355,257,1.596,258,1.493,259,1.897,260,2.301,261,1.897,262,2.301,263,1.355,264,1.355,265,2.301,266,2.455,267,1.493,268,2.301,269,0.832,270,2.301,271,2.301,272,2.301,273,2.301,274,2.301]],["title/components/LoginPageComponent.html",[0,1.018,234,1.407]],["body/components/LoginPageComponent.html",[0,1.146,1,0.826,2,1.288,3,0.431,4,0.362,5,1.192,6,1.192,7,1.192,8,0.362,10,1.192,11,2.58,12,1.789,14,1.858,16,1.858,18,1.858,20,0.243,21,0.467,24,0.065,25,0.9,26,0.932,27,1.094,29,1.519,31,1.194,32,0.672,34,0.672,35,0.243,83,2.58,132,1.192,195,1.858,227,1.192,228,1.858,229,1.858,230,1.192,231,1.192,232,0.932,233,1.192,234,1.789,235,2.712,236,2.306,237,0.982,238,1.192,239,0.029,240,0.029,246,0.982,255,0.509,258,1.146,266,2.639,267,1.552,269,1.336,275,2.306,276,2.306,277,0.982,278,2.353,279,2.284,280,2.893,281,2.893,282,2.353,283,2.353,284,3.267,285,2.893,286,1.532,287,3.267,288,3.267,289,1.509,290,1.288,291,1.288,292,1.509,293,2.353,294,2.353,295,1.509,296,3.267,297,1.98,298,3.267,299,2.353,300,3.363,301,3.267,302,2.353,303,2.893,304,1.883,305,2.353,306,2.353,307,1.509,308,1.192,309,1.509,310,2.353,311,2.353,312,2.353,313,1.509,314,1.858,315,1.192,316,1.509,317,1.192,318,1.789,319,3.753,320,2.353,321,1.509,322,2.353,323,1.509,324,1.509,325,1.509,326,1.509,327,2.353,328,1.509,329,0.826,330,1.509,331,1.509,332,2.353,333,1.509,334,2.353,335,1.509,336,2.353,337,1.509,338,1.509,339,1.509,340,1.509,341,2.353,342,3.542,343,1.509,344,1.509,345,1.509,346,1.509,347,1.509,348,1.509,349,1.509,350,1.509,351,1.509,352,0.826,353,1.509,354,3.267,355,2.353,356,1.858,357,2.353,358,2.353,359,2.353,360,2.353,361,2.353,362,2.353,363,3.753,364,2.353,365,2.353,366,2.353,367,2.353,368,2.353,369,2.353,370,1.858,371,2.353]],["title/injectables/LoginService.html",[249,0.734,257,1.407]],["body/injectables/LoginService.html",[3,0.745,4,0.626,8,0.626,13,1.034,20,0.42,21,0.696,23,0.786,24,0.064,25,1.132,26,1.389,27,1.63,29,2.053,31,1.489,32,0.745,34,0.745,35,0.42,232,1.568,235,2.283,239,0.043,240,0.043,241,0.626,242,1.429,244,1.699,245,1.568,246,1.699,247,2.061,248,1.209,249,1.001,250,0.88,251,1.213,252,1.968,253,1.213,254,2.053,255,0.88,256,1.213,257,1.92,258,1.801,259,2.578,260,2.769,261,2.578,262,2.769,263,1.213,264,1.63,265,2.769,266,2.756,267,1.389,268,2.061,269,1.001,270,2.769,271,3.127,272,2.061,273,2.061,274,2.769,286,2.283,290,1.92,372,1.699,373,3.506,374,1.699,375,2.061,376,3.506,377,2.168,378,2.61,379,2.61,380,2.61]],["title/classes/User.html",[35,0.414,248,0.734]],["body/classes/User.html",[3,0.81,4,0.68,8,0.68,20,0.457,21,0.735,23,0.941,24,0.062,25,1.226,29,2.205,34,0.81,35,0.457,232,1.124,239,0.046,240,0.046,245,1.124,248,1.058,269,1.296,297,2.11,374,2.412,377,1.553,381,2.837,382,2.24,383,5.091,384,4.54,385,4.376,386,4.54,387,4.54,388,2.837,389,4.376,390,2.837,391,2.837,392,2.837,393,2.837,394,2.837,395,2.837,396,2.837]],["title/interfaces/UserExist.html",[241,0.616,397,1.195]],["body/interfaces/UserExist.html",[3,0.778,4,0.653,8,0.653,13,1.079,20,0.439,21,0.716,23,0.541,24,0.064,25,1.074,31,1.51,32,0.778,34,0.778,35,0.439,239,0.044,240,0.044,241,1.032,243,1.492,248,1.341,249,1.03,250,0.919,251,1.267,252,1.677,253,1.267,254,1.677,255,0.919,256,1.267,258,1.429,263,1.267,264,1.267,267,1.602,269,1.03,291,2.215,297,1.677,318,1.976,329,1.976,352,1.492,397,1.677,398,1.492,399,1.492,400,2.725,401,2.349,402,2.349,403,3.058,404,1.774,405,1.774,406,1.774,407,1.774,408,1.774,409,1.267,410,1.267,411,1.492,412,1.774,413,1.492,414,1.774,415,1.774,416,1.774,417,1.774,418,1.079,419,1.774,420,1.774,421,1.492,422,1.774]],["title/interfaces/UserGetter.html",[241,0.616,409,1.195]],["body/interfaces/UserGetter.html",[3,0.773,4,0.649,8,0.649,13,1.072,20,0.436,21,0.713,23,0.713,24,0.064,25,1.124,31,1.507,32,0.773,34,0.773,35,0.436,239,0.044,240,0.044,241,0.967,243,1.482,245,1.423,248,1.401,249,1.026,250,0.912,251,1.258,252,1.67,253,1.258,254,1.67,255,0.912,256,1.258,258,1.423,263,1.258,264,1.258,267,1.597,269,1.026,291,1.482,297,1.67,318,1.967,329,1.482,352,2.352,397,1.258,398,1.482,399,1.482,401,1.762,402,1.762,403,2.796,404,1.762,405,1.762,406,1.762,407,1.762,408,1.762,409,1.67,410,1.258,411,1.482,412,1.762,413,1.482,414,1.762,415,1.762,416,1.762,417,1.762,418,1.072,419,1.762,420,1.762,421,1.482,422,1.762]],["title/injectables/UserGetterService.html",[249,0.734,410,1.195]],["body/injectables/UserGetterService.html",[3,0.684,4,0.574,8,0.574,13,0.949,20,0.386,21,0.657,23,0.811,24,0.064,25,1.152,26,1.31,27,1.538,29,1.899,31,1.445,32,0.684,34,0.684,35,0.386,232,1.31,239,0.041,240,0.041,241,0.908,245,1.31,248,1.266,249,0.945,250,0.808,251,1.114,252,1.899,253,1.114,254,1.761,255,0.808,256,1.114,258,1.756,263,1.114,264,1.538,267,1.501,269,1.082,286,2.154,290,1.312,291,1.312,297,1.899,318,2.427,329,1.312,352,1.312,372,1.56,374,1.56,375,1.892,377,1.811,397,1.114,398,2.347,399,1.312,401,1.56,402,1.56,403,2.886,404,1.56,405,1.56,406,1.56,407,1.56,408,1.56,409,1.114,410,1.538,411,2.075,412,2.154,413,2.075,414,2.154,415,1.56,416,1.56,417,1.56,418,0.949,419,1.56,420,1.56,421,1.312,422,1.56,423,3.309,424,2.397,425,2.397,426,2.397]],["title/coverage.html",[427,2.74]],["body/coverage.html",[0,1.423,1,1.482,8,0.649,9,2.137,12,1.482,23,0.537,24,0.063,35,0.436,84,4.012,85,2.137,86,2.137,234,1.482,239,0.044,240,0.044,241,0.967,242,1.482,244,2.339,248,0.773,249,1.026,250,1.211,257,1.482,275,2.339,276,2.339,277,2.339,304,1.762,317,2.137,382,2.137,397,1.258,398,2.208,399,2.208,409,1.258,410,1.258,418,1.072,427,2.137,428,2.706,429,2.706,430,2.706,431,2.706,432,2.836,433,4.94,434,2.137,435,4.94,436,2.137,437,2.137,438,2.137,439,2.137,440,2.137,441,3.592,442,2.706,443,2.706,444,2.706,445,2.706,446,2.706,447,2.137,448,2.137,449,2.137,450,2.137,451,3.53,452,2.137,453,2.137,454,2.137,455,2.706,456,2.137,457,2.706,458,2.706]],["title/dependencies.html",[459,1.709,460,2.432]],["body/dependencies.html",[24,0.063,32,0.998,33,2.761,239,0.052,240,0.052,255,1.179,308,2.761,315,2.761,460,2.761,461,5.011,462,3.496,463,4.542,464,2.751,465,3.496,466,2.276,467,3.496,468,2.761,469,2.761,470,3.496,471,3.496,472,3.496,473,3.496,474,3.496,475,3.496]],["title/miscellaneous/functions.html",[476,1.185,477,2.005]],["body/miscellaneous/functions.html",[20,0.595,23,0.733,24,0.059,25,1.152,232,1.463,239,0.054,240,0.054,245,1.463,269,1.055,275,2.405,276,2.405,277,2.843,290,2.023,300,3.449,304,2.843,314,2.917,377,2.023,476,2.023,477,2.405,478,3.695,479,3.695]],["title/index.html",[20,0.348,480,2.164,481,2.164]],["body/index.html",[0,1.604,2,1.495,4,0.655,24,0.044,26,1.431,28,2.157,144,2.807,164,2.157,209,2.854,218,2.919,236,1.778,237,1.778,239,0.044,240,0.044,356,2.157,370,2.157,418,1.082,464,1.778,466,2.637,468,2.157,482,4.051,483,2.731,484,3.614,485,2.157,486,3.614,487,2.731,488,4.484,489,4.607,490,4.607,491,2.731,492,2.731,493,2.731,494,2.731,495,3.614,496,2.731,497,2.731,498,2.731,499,2.731,500,2.731,501,3.614,502,3.614,503,2.731,504,2.731,505,2.731,506,4.051,507,2.731,508,2.731,509,2.731,510,2.731,511,2.731,512,2.731,513,2.731,514,3.199,515,2.731,516,2.731,517,2.731,518,2.731,519,2.731,520,2.731,521,2.157,522,2.731,523,2.731,524,2.731,525,3.614,526,4.051,527,2.731,528,2.731,529,2.731,530,2.731,531,2.731,532,2.731,533,4.051,534,2.731,535,4.607,536,2.731,537,3.614,538,2.731,539,2.731,540,2.731,541,2.731,542,2.731,543,2.731,544,2.731,545,2.731,546,2.731,547,2.731,548,2.731,549,2.731,550,2.731,551,2.731,552,1.778,553,2.731]],["title/modules.html",[554,2.74]],["body/modules.html",[24,0.056,239,0.056,240,0.056,554,3.166]],["title/overview.html",[552,2.259]],["body/overview.html",[2,2.137,24,0.055,35,0.628,192,3.082,193,3.561,194,3.082,239,0.055,240,0.055,243,2.137,372,2.541,552,2.541]],["title/properties.html",[21,0.611,459,1.709]],["body/properties.html",[21,0.788,24,0.059,239,0.056,240,0.056,485,3.134,555,3.97]],["title/miscellaneous/variables.html",[476,1.185,556,2.432]],["body/miscellaneous/variables.html",[12,1.869,20,0.404,23,0.865,24,0.064,26,1.933,27,2.269,144,1.634,201,1.981,218,1.634,239,0.042,240,0.042,250,1.404,259,2.223,261,2.223,279,2.696,411,1.869,413,1.869,418,0.994,421,1.374,432,1.981,434,3.065,436,3.065,437,1.981,438,2.696,439,1.981,440,2.696,447,1.981,448,1.981,449,1.981,450,2.696,451,1.981,452,2.696,453,2.696,454,2.696,456,2.696,464,1.634,466,1.634,469,1.981,476,1.374,477,1.634,514,1.981,521,2.696,556,1.981,557,4.358,558,2.51,559,2.51,560,3.415,561,2.51,562,2.51,563,2.51,564,2.51,565,2.51,566,2.51,567,2.51,568,2.51,569,2.51,570,2.51,571,2.51,572,2.51,573,2.51,574,2.51,575,3.415,576,3.415,577,2.51,578,2.51,579,2.51,580,2.51,581,2.51,582,2.51,583,2.51,584,2.51,585,3.415,586,3.415,587,3.415,588,3.415,589,3.415,590,3.415,591,3.415,592,2.51,593,2.51,594,2.51]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":555,"title":{},"body":{"properties.html":{}}}],["0.006",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["0.00875rem",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["0.014",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["0.015",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["0.125rem",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["0.15.0",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["0.238",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["0.24",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["0.246",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["0.25rem",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["0.274",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["0.277",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["0.28",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["0.375rem",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["0.3s",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["0.5rem",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["0.73rem",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["0.75rem",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["0.875rem",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["1.25rem",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["1.4rem",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["1.5rem",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["1.75rem",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["15",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["15.34",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["180deg",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["19.2.0",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["19.2.1",{"_index":468,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1px",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["2.75rem",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["263.83",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["296.97",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["3.125rem",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["300.98",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["302.71",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["304.04",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["305.88",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["31.68",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["332.77",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["3rem",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["4.18.2",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["50",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["500",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["650px",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["7.8.0",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["700px",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["9.2rem",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["900",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["90deg",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["a:hover",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["abstractcontrol",{"_index":310,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["accent",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["additional",{"_index":545,"title":{},"body":{"index.html":{}}}],["align",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":308,"title":{},"body":{"components/LoginPageComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":253,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["angular/compiler",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":315,"title":{},"body":{"components/LoginPageComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["antialiased",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apple",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["application",{"_index":495,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arial",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["around",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["artifacts",{"_index":518,"title":{},"body":{"index.html":{}}}],["authresponse",{"_index":242,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["authurl",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":496,"title":{},"body":{"index.html":{}}}],["available",{"_index":509,"title":{},"body":{"index.html":{}}}],["background",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["blinkmacsystemfont",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["block",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":291,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["bootstrap",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["bottom",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["bright",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["browser",{"_index":464,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":514,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":515,"title":{},"body":{"index.html":{}}}],["center",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["characters",{"_index":355,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["check",{"_index":329,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["child(6n",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["choose",{"_index":541,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":381,"title":{},"body":{"classes/User.html":{}}}],["cli",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":501,"title":{},"body":{"index.html":{}}}],["color",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["column",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["come",{"_index":539,"title":{},"body":{"index.html":{}}}],["command",{"_index":533,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":280,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["compile",{"_index":516,"title":{},"body":{"index.html":{}}}],["complete",{"_index":370,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["congratulations",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('form",{"_index":341,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["const",{"_index":319,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["constructor",{"_index":374,"title":{},"body":{"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{}}}],["constructor(http",{"_index":375,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserGetterService.html":{}}}],["constructor(id",{"_index":388,"title":{},"body":{"classes/User.html":{}}}],["constructor(private",{"_index":263,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["contains",{"_index":330,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["content",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":427,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":342,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["dataavailable",{"_index":287,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["decoration",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{}}}],["dependencies",{"_index":460,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":400,"title":{},"body":{"interfaces/UserExist.html":{}}}],["detailed",{"_index":549,"title":{},"body":{"index.html":{}}}],["dev",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":486,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["directives",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"index.html":{}}}],["directory",{"_index":520,"title":{},"body":{"index.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["display",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["dist",{"_index":519,"title":{},"body":{"index.html":{}}}],["divider",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["docs",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["during",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":536,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":538,"title":{},"body":{"index.html":{}}}],["ease",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["electric",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["element",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["email",{"_index":269,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["email.emailstring",{"_index":305,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["email.provider",{"_index":306,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["email/username",{"_index":407,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["emailcontrol",{"_index":320,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailcontrol.errors",{"_index":324,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailcontrol.value",{"_index":326,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailprovider",{"_index":327,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailprovidermismatch",{"_index":333,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailprovidervalidator",{"_index":304,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emailprovidervalidator(email",{"_index":479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emailstring",{"_index":301,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emailstring.includes(emailprovider",{"_index":331,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emoji",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":535,"title":{},"body":{"index.html":{}}}],["enter",{"_index":359,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["environment",{"_index":250,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.loginurl",{"_index":260,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["environment.registerurl",{"_index":262,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["environment.usercheckerurl",{"_index":414,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["environment.userinfourl",{"_index":412,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["environments/environment",{"_index":251,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["error",{"_index":246,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["errors",{"_index":352,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["eventcoalescing",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":489,"title":{},"body":{"index.html":{}}}],["execute",{"_index":527,"title":{},"body":{"index.html":{}}}],["existence",{"_index":402,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["exists",{"_index":408,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["explore",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["express",{"_index":469,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":421,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["fields",{"_index":350,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["files",{"_index":500,"title":{},"body":{"index.html":{}}}],["fill",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["firebase",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":316,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["firstname",{"_index":384,"title":{},"body":{"classes/User.html":{}}}],["flex",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["following",{"_index":532,"title":{},"body":{"index.html":{}}}],["font",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["form",{"_index":363,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formbuilder",{"_index":284,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formgroup",{"_index":311,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formgroup.get(email",{"_index":321,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formgroup.get(provider",{"_index":323,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["framework",{"_index":540,"title":{},"body":{"index.html":{}}}],["french",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["full",{"_index":357,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["function",{"_index":317,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["functions",{"_index":477,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["generate",{"_index":506,"title":{},"body":{"index.html":{}}}],["generated",{"_index":483,"title":{},"body":{"index.html":{}}}],["getter.service.ts",{"_index":399,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["getter.service.ts:22",{"_index":426,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:23",{"_index":423,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getter.service.ts:26",{"_index":425,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["getting",{"_index":480,"title":{"index.html":{}},"body":{}}],["given",{"_index":406,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["gradient",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["gray",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["grayscale",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["group",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["h1",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["handler",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["hello",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["helpbuilding",{"_index":513,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["here",{"_index":347,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["horizontal",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["host",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["hot",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["http",{"_index":264,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["http://localhost:4200",{"_index":494,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":252,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["https://angular.dev",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.dev/tools/cli",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.dev/tools/devtools",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.dev/tools/language",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["https://angular.dev/tutorials",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":385,"title":{},"body":{"classes/User.html":{}}}],["identifier",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["imports",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["includes",{"_index":503,"title":{},"body":{"index.html":{}}}],["including",{"_index":548,"title":{},"body":{"index.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":405,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["information",{"_index":356,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["inherit",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":309,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inject(formbuilder",{"_index":294,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["injectable",{"_index":249,"title":{"injectables/LoginService.html":{},"injectables/UserGetterService.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["injectables",{"_index":372,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserGetterService.html":{},"overview.html":{}}}],["inline",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["inter",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["interface",{"_index":241,"title":{"interfaces/AuthResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":243,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"overview.html":{}}}],["invalid",{"_index":348,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["item",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["item.title",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["justify",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["karma",{"_index":528,"title":{},"body":{"index.html":{}}}],["language",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["lastname",{"_index":386,"title":{},"body":{"classes/User.html":{}}}],["learn",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["letter",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["linear",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["link",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["links",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":508,"title":{},"body":{"index.html":{}}}],["local",{"_index":487,"title":{},"body":{"index.html":{}}}],["localhost:8000",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/login",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/register",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/user",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost:8000/user/me",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":346,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["login(email",{"_index":265,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["loginform",{"_index":285,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"email.emailstring\")?.value",{"_index":369,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"email.provider\")?.value",{"_index":368,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"password\")?.value",{"_index":367,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.get(\"username\")?.value",{"_index":366,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginform.status",{"_index":365,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginpagecomponent",{"_index":234,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginservice",{"_index":257,"title":{"injectables/LoginService.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":259,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["margin",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["mark",{"_index":349,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["match",{"_index":361,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["matching",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["media",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["methods",{"_index":286,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{}}}],["min",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":476,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mix(in",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["modify",{"_index":499,"title":{},"body":{"index.html":{}}}],["modules",{"_index":554,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":547,"title":{},"body":{"index.html":{}}}],["moz",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":507,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":493,"title":{},"body":{"index.html":{}}}],["needs",{"_index":544,"title":{},"body":{"index.html":{}}}],["new",{"_index":418,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":490,"title":{},"body":{"index.html":{}}}],["none",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["normal",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["null",{"_index":318,"title":{},"body":{"components/LoginPageComponent.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["number",{"_index":389,"title":{},"body":{"classes/User.html":{}}}],["object",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":254,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observable((observer",{"_index":419,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observer.complete",{"_index":422,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["observer.next",{"_index":420,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["oklch(19.37",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(36.98",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(47.66",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(51.01",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(53.18",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(61.42",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(63.32",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(69.02",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["oklch(70.9",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["one",{"_index":542,"title":{},"body":{"index.html":{}}}],["open",{"_index":492,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":522,"title":{},"body":{"index.html":{}}}],["optional",{"_index":245,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["orange",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["osx",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":552,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":459,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["page",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"index.html":{}}}],["page.component.html",{"_index":282,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.scss",{"_index":283,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts",{"_index":277,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["page.component.ts:53",{"_index":295,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:54",{"_index":307,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:71",{"_index":289,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:84",{"_index":292,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/login",{"_index":276,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":377,"title":{},"body":{"injectables/LoginService.html":{},"classes/User.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":271,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["password",{"_index":266,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{}}}],["passwordvalue",{"_index":336,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["passwordvalue.trim",{"_index":339,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["path",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":523,"title":{},"body":{"index.html":{}}}],["pill",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["pill:hover",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["pill:nth",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["pink",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":512,"title":{},"body":{"index.html":{}}}],["please",{"_index":358,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["position",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["powerful",{"_index":504,"title":{},"body":{"index.html":{}}}],["private",{"_index":258,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["production",{"_index":521,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":482,"title":{},"body":{"index.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"properties.html":{}}}],["property",{"_index":404,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":256,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["provider",{"_index":300,"title":{},"body":{"components/LoginPageComponent.html":{},"miscellaneous/functions.html":{}}}],["providercontrol",{"_index":322,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["providercontrol.errors",{"_index":325,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["providercontrol.value",{"_index":328,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["providerouter(routes",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":383,"title":{},"body":{"classes/User.html":{}}}],["purple",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodule",{"_index":281,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["real",{"_index":344,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["red",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["reference",{"_index":553,"title":{},"body":{"index.html":{}}}],["references",{"_index":550,"title":{},"body":{"index.html":{}}}],["register",{"_index":373,"title":{},"body":{"injectables/LoginService.html":{}}}],["register(userdata",{"_index":270,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["registerurl",{"_index":261,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["relative",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["reload",{"_index":497,"title":{},"body":{"index.html":{}}}],["rendermode",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqhandler",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":354,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resolve(serverdistfolder",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":546,"title":{},"body":{"index.html":{}}}],["response",{"_index":401,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["results",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":267,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["returns",{"_index":290,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["roboto",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["role",{"_index":387,"title":{},"body":{"classes/User.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["root'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["routeroutlet",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":488,"title":{},"body":{"index.html":{}}}],["runner",{"_index":530,"title":{},"body":{"index.html":{}}}],["running",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["rxjs",{"_index":255,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"dependencies.html":{}}}],["sans",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffolding",{"_index":502,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":510,"title":{},"body":{"index.html":{}}}],["screen",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["see",{"_index":371,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["segoe",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["serif",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["serveonce",{"_index":491,"title":{},"body":{"index.html":{}}}],["server",{"_index":466,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["sizing",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["smoothing",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["social",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"index.html":{}}}],["space",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["spacing",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["speed",{"_index":524,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.server.ts",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/login",{"_index":275,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login.service.ts",{"_index":244,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:17",{"_index":380,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:18",{"_index":376,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:21",{"_index":378,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:27",{"_index":379,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/user",{"_index":398,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["src/app/user.ts",{"_index":382,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:1",{"_index":390,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:3",{"_index":393,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":396,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:5",{"_index":391,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:6",{"_index":392,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:7",{"_index":394,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:8",{"_index":395,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.development.ts",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["standalone",{"_index":278,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["start",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["started",{"_index":481,"title":{"index.html":{}},"body":{}}],["statements",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":364,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["store",{"_index":517,"title":{},"body":{"index.html":{}}}],["string",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["submit",{"_index":362,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["such",{"_index":511,"title":{},"body":{"index.html":{}}}],["suits",{"_index":543,"title":{},"body":{"index.html":{}}}],["svg",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["symbol",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["system",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["test",{"_index":529,"title":{},"body":{"index.html":{}}}],["testing",{"_index":537,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":534,"title":{},"body":{"index.html":{}}}],["tests",{"_index":526,"title":{},"body":{"index.html":{}}}],["text",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["this.formbuilder.group",{"_index":296,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.http.get",{"_index":416,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.http.get(`${this.usercheckerurl}/${email",{"_index":415,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["this.http.post",{"_index":272,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.http.post(`${this.loginurl",{"_index":268,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.loginform.get('password')?.value",{"_index":337,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":335,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.markallastouched",{"_index":353,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":340,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":343,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.register",{"_index":273,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["this.usercheckerurl}/${username",{"_index":417,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["tight",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":247,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["tools",{"_index":505,"title":{},"body":{"index.html":{}}}],["top",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["touched",{"_index":351,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["track",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["transition",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["transparent",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["true",{"_index":279,"title":{},"body":{"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["tutorials",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["type",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["unit",{"_index":525,"title":{},"body":{"index.html":{}}}],["update",{"_index":345,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["updatedata",{"_index":288,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["use",{"_index":531,"title":{},"body":{"index.html":{}}}],["used",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":248,"title":{"classes/User.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["usercheckerurl",{"_index":413,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["userdata",{"_index":274,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/LoginService.html":{}}}],["userexist",{"_index":397,"title":{"interfaces/UserExist.html":{}},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["userexists",{"_index":403,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["userexists(email",{"_index":424,"title":{},"body":{"injectables/UserGetterService.html":{}}}],["usergetter",{"_index":409,"title":{"interfaces/UserGetter.html":{}},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["usergetterservice",{"_index":410,"title":{"injectables/UserGetterService.html":{}},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"coverage.html":{}}}],["userinfourl",{"_index":411,"title":{},"body":{"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":297,"title":{},"body":{"components/LoginPageComponent.html":{},"classes/User.html":{},"interfaces/UserExist.html":{},"interfaces/UserGetter.html":{},"injectables/UserGetterService.html":{}}}],["usernamevalue",{"_index":334,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamevalue.trim",{"_index":338,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["using",{"_index":484,"title":{},"body":{"index.html":{}}}],["valid",{"_index":360,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validation",{"_index":332,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validationerrors",{"_index":312,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validator",{"_index":313,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validatorfn",{"_index":314,"title":{},"body":{"components/LoginPageComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":303,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.email",{"_index":302,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.minlength(4",{"_index":299,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.required",{"_index":298,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["value",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/UserGetterService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["variable",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":556,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":485,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["violet",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["visit",{"_index":551,"title":{},"body":{"index.html":{}}}],["vivid",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":293,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["webkit",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["weight",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["whenever",{"_index":498,"title":{},"body":{"index.html":{}}}],["width",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["wrap",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":474,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FrontEnd'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'FrontEnd';\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  :host {\n    --bright-blue: oklch(51.01% 0.274 263.83);\n    --electric-violet: oklch(53.18% 0.28 296.97);\n    --french-violet: oklch(47.66% 0.246 305.88);\n    --vivid-pink: oklch(69.02% 0.277 332.77);\n    --hot-red: oklch(61.42% 0.238 15.34);\n    --orange-red: oklch(63.32% 0.24 31.68);\n\n    --gray-900: oklch(19.37% 0.006 300.98);\n    --gray-700: oklch(36.98% 0.014 302.71);\n    --gray-400: oklch(70.9% 0.015 304.04);\n\n    --red-to-pink-to-purple-vertical-gradient: linear-gradient(\n      180deg,\n      var(--orange-red) 0%,\n      var(--vivid-pink) 50%,\n      var(--electric-violet) 100%\n    );\n\n    --red-to-pink-to-purple-horizontal-gradient: linear-gradient(\n      90deg,\n      var(--orange-red) 0%,\n      var(--vivid-pink) 50%,\n      var(--electric-violet) 100%\n    );\n\n    --pill-accent: var(--bright-blue);\n\n    font-family: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\";\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1 {\n    font-size: 3.125rem;\n    color: var(--gray-900);\n    font-weight: 500;\n    line-height: 100%;\n    letter-spacing: -0.125rem;\n    margin: 0;\n    font-family: \"Inter Tight\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\";\n  }\n\n  p {\n    margin: 0;\n    color: var(--gray-700);\n  }\n\n  main {\n    width: 100%;\n    min-height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem;\n    box-sizing: inherit;\n    position: relative;\n  }\n\n  .angular-logo {\n    max-width: 9.2rem;\n  }\n\n  .content {\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    max-width: 700px;\n    margin-bottom: 3rem;\n  }\n\n  .content h1 {\n    margin-top: 1.75rem;\n  }\n\n  .content p {\n    margin-top: 1.5rem;\n  }\n\n  .divider {\n    width: 1px;\n    background: var(--red-to-pink-to-purple-vertical-gradient);\n    margin-inline: 0.5rem;\n  }\n\n  .pill-group {\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    flex-wrap: wrap;\n    gap: 1.25rem;\n  }\n\n  .pill {\n    display: flex;\n    align-items: center;\n    --pill-accent: var(--bright-blue);\n    background: color-mix(in srgb, var(--pill-accent) 5%, transparent);\n    color: var(--pill-accent);\n    padding-inline: 0.75rem;\n    padding-block: 0.375rem;\n    border-radius: 2.75rem;\n    border: 0;\n    transition: background 0.3s ease;\n    font-family: var(--inter-font);\n    font-size: 0.875rem;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.4rem;\n    letter-spacing: -0.00875rem;\n    text-decoration: none;\n  }\n\n  .pill:hover {\n    background: color-mix(in srgb, var(--pill-accent) 15%, transparent);\n  }\n\n  .pill-group .pill:nth-child(6n + 1) {\n    --pill-accent: var(--bright-blue);\n  }\n  .pill-group .pill:nth-child(6n + 2) {\n    --pill-accent: var(--french-violet);\n  }\n  .pill-group .pill:nth-child(6n + 3),\n  .pill-group .pill:nth-child(6n + 4),\n  .pill-group .pill:nth-child(6n + 5) {\n    --pill-accent: var(--hot-red);\n  }\n\n  .pill-group svg {\n    margin-inline-start: 0.25rem;\n  }\n\n  .social-links {\n    display: flex;\n    align-items: center;\n    gap: 0.73rem;\n    margin-top: 1.5rem;\n  }\n\n  .social-links path {\n    transition: fill 0.3s ease;\n    fill: var(--gray-400);\n  }\n\n  .social-links a:hover svg path {\n    fill: var(--gray-900);\n  }\n\n  @media screen and (max-width: 650px) {\n    .content {\n      flex-direction: column;\n      width: max-content;\n    }\n\n    .divider {\n      height: 1px;\n      width: 100%;\n      background: var(--red-to-pink-to-purple-horizontal-gradient);\n      margin-block: 1.5rem;\n    }\n  }\n\n\n\n  \n    \n      \n        \n          \n          \n        \n        \n          \n            \n            \n            \n          \n          \n            \n            \n            \n            \n          \n          \n        \n      \n      Hello, {{ title }}\n      Congratulations! Your app is running. 🎉\n    \n    \n    \n      \n        @for (item of [\n          { title: 'Explore the Docs', link: 'https://angular.dev' },\n          { title: 'Learn with Tutorials', link: 'https://angular.dev/tutorials' },\n          { title: 'CLI Docs', link: 'https://angular.dev/tools/cli' },\n          { title: 'Angular Language Service', link: 'https://angular.dev/tools/language-service' },\n          { title: 'Angular DevTools', link: 'https://angular.dev/tools/devtools' },\n        ]; track item.title) {\n          \n            {{ item.title }}\n            \n              \n            \n          \n        }\n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  :host {    --bright-blue: oklch(51.01% 0.274 263.83);    --electric-violet: oklch(53.18% 0.28 296.97);    --french-violet: oklch(47.66% 0.246 305.88);    --vivid-pink: oklch(69.02% 0.277 332.77);    --hot-red: oklch(61.42% 0.238 15.34);    --orange-red: oklch(63.32% 0.24 31.68);    --gray-900: oklch(19.37% 0.006 300.98);    --gray-700: oklch(36.98% 0.014 302.71);    --gray-400: oklch(70.9% 0.015 304.04);    --red-to-pink-to-purple-vertical-gradient: linear-gradient(      180deg,      var(--orange-red) 0%,      var(--vivid-pink) 50%,      var(--electric-violet) 100%    );    --red-to-pink-to-purple-horizontal-gradient: linear-gradient(      90deg,      var(--orange-red) 0%,      var(--vivid-pink) 50%,      var(--electric-violet) 100%    );    --pill-accent: var(--bright-blue);    font-family: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",      \"Segoe UI Symbol\";    box-sizing: border-box;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }  h1 {    font-size: 3.125rem;    color: var(--gray-900);    font-weight: 500;    line-height: 100%;    letter-spacing: -0.125rem;    margin: 0;    font-family: \"Inter Tight\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",      \"Segoe UI Symbol\";  }  p {    margin: 0;    color: var(--gray-700);  }  main {    width: 100%;    min-height: 100%;    display: flex;    justify-content: center;    align-items: center;    padding: 1rem;    box-sizing: inherit;    position: relative;  }  .angular-logo {    max-width: 9.2rem;  }  .content {    display: flex;    justify-content: space-around;    width: 100%;    max-width: 700px;    margin-bottom: 3rem;  }  .content h1 {    margin-top: 1.75rem;  }  .content p {    margin-top: 1.5rem;  }  .divider {    width: 1px;    background: var(--red-to-pink-to-purple-vertical-gradient);    margin-inline: 0.5rem;  }  .pill-group {    display: flex;    flex-direction: column;    align-items: start;    flex-wrap: wrap;    gap: 1.25rem;  }  .pill {    display: flex;    align-items: center;    --pill-accent: var(--bright-blue);    background: color-mix(in srgb, var(--pill-accent) 5%, transparent);    color: var(--pill-accent);    padding-inline: 0.75rem;    padding-block: 0.375rem;    border-radius: 2.75rem;    border: 0;    transition: background 0.3s ease;    font-family: var(--inter-font);    font-size: 0.875rem;    font-style: normal;    font-weight: 500;    line-height: 1.4rem;    letter-spacing: -0.00875rem;    text-decoration: none;  }  .pill:hover {    background: color-mix(in srgb, var(--pill-accent) 15%, transparent);  }  .pill-group .pill:nth-child(6n + 1) {    --pill-accent: var(--bright-blue);  }  .pill-group .pill:nth-child(6n + 2) {    --pill-accent: var(--french-violet);  }  .pill-group .pill:nth-child(6n + 3),  .pill-group .pill:nth-child(6n + 4),  .pill-group .pill:nth-child(6n + 5) {    --pill-accent: var(--hot-red);  }  .pill-group svg {    margin-inline-start: 0.25rem;  }  .social-links {    display: flex;    align-items: center;    gap: 0.73rem;    margin-top: 1.5rem;  }  .social-links path {    transition: fill 0.3s ease;    fill: var(--gray-400);  }  .social-links a:hover svg path {    fill: var(--gray-900);  }  @media screen and (max-width: 650px) {    .content {      flex-direction: column;      width: max-content;    }    .divider {      height: 1px;      width: 100%;      background: var(--red-to-pink-to-purple-horizontal-gradient);      margin-block: 1.5rem;    }  }                                                                                                                                                                                                                  Hello, {{ title }}      Congratulations! Your app is running. 🎉                          @for (item of [          { title: \\'Explore the Docs\\', link: \\'https://angular.dev\\' },          { title: \\'Learn with Tutorials\\', link: \\'https://angular.dev/tutorials\\' },          { title: \\'CLI Docs\\', link: \\'https://angular.dev/tools/cli\\' },          { title: \\'Angular Language Service\\', link: \\'https://angular.dev/tools/language-service\\' },          { title: \\'Angular DevTools\\', link: \\'https://angular.dev/tools/devtools\\' },        ]; track item.title) {                      {{ item.title }}                                                        }                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\ninterface AuthResponse {\n\tuser: User;\n\ttoken: string;\n\terror?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LoginService {\n\tprivate loginUrl = environment.loginUrl;\n\tprivate registerUrl = environment.registerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\tlogin(email: string, password: string): Observable {\n\t\treturn this.http.post(`${this.loginUrl}`, {\n\t\t\temail,\n\t\t\tpassword,\n\t\t});\n\t}\n\tregister(userData: Partial): Observable {\n\t\treturn this.http.post(\n\t\t\t`${this.register}`,\n\t\t\tuserData\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formBuilder\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataAvailable\n                            \n                            \n                                UpdateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataAvailable\n                        \n                    \n                \n            \n            \n                \ndataAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateData\n                        \n                    \n                \n            \n            \n                \nUpdateData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group(\n\t\t{\n\t\t\tusername: ['', [Validators.required, Validators.minLength(4)]],\n\t\t\tpassword: ['', Validators.required],\n\t\t\temail: this.formBuilder.group({\n\t\t\t\tprovider: [''],\n\t\t\t\temailString: ['', Validators.email],\n\t\t\t}),\n\t\t},\n\t\t{\n\t\t\tvalidators: EmailProviderValidator(\n\t\t\t\t'email.emailString',\n\t\t\t\t'email.provider'\n\t\t\t),\n\t\t}\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { inject } from '@angular/core';\nimport {\n\tAbstractControl,\n\tFormBuilder,\n\tFormGroup,\n\tReactiveFormsModule,\n\tValidationErrors,\n\tValidator,\n\tValidatorFn,\n\tValidators,\n} from '@angular/forms';\nimport { first } from 'rxjs';\n\nexport function EmailProviderValidator(\n    email: string,\n    provider: string\n): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n        const emailControl = formGroup.get(email);\n        const providerControl = formGroup.get(provider);\n\n        if (!emailControl || !providerControl || emailControl.errors || providerControl.errors) {\n            return null;\n        }\n        \n        const emailString: string = emailControl.value || '';\n        const emailProvider: string = providerControl.value || '';\n        \n        if (!emailProvider || !emailString) {\n            return null;\n        }\n        \n        // Check if email contains the provider\n        if (emailString.includes(emailProvider)) {\n            return null;\n        }\n        \n        // Return validation error\n        return { emailProviderMismatch: true };\n    };\n}\n\n@Component({\n\tselector: 'app-login-page',\n\tstandalone: true,\n\timports: [CommonModule, ReactiveFormsModule],\n\ttemplateUrl: './login-page.component.html',\n\tstyleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n\tprivate formBuilder = inject(FormBuilder);\n\tloginForm = this.formBuilder.group(\n\t\t{\n\t\t\tusername: ['', [Validators.required, Validators.minLength(4)]],\n\t\t\tpassword: ['', Validators.required],\n\t\t\temail: this.formBuilder.group({\n\t\t\t\tprovider: [''],\n\t\t\t\temailString: ['', Validators.email],\n\t\t\t}),\n\t\t},\n\t\t{\n\t\t\tvalidators: EmailProviderValidator(\n\t\t\t\t'email.emailString',\n\t\t\t\t'email.provider'\n\t\t\t),\n\t\t}\n\t);\n\n\tdataAvailable(): boolean {\n\t\tconst usernameValue: string =\n\t\t\tthis.loginForm.get('username')?.value || '';\n\t\tconst passwordValue: string =\n\t\t\tthis.loginForm.get('password')?.value || '';\n\t\treturn !!(\n\t\t\tusernameValue &&\n\t\t\tpasswordValue &&\n\t\t\tusernameValue.trim() !== '' &&\n\t\t\tpasswordValue.trim() !== ''\n\t\t);\n\t}\n\n\tUpdateData(): void {\n\t\tif (this.loginForm.valid) {\n\t\t\tconsole.log('Form data:', this.loginForm.value);\n\t\t\t// You could do your real update logic here\n\t\t} else {\n\t\t\tconsole.log('Form is invalid');\n\t\t\t// Mark all fields as touched to display validation errors\n\t\t\tthis.loginForm.markAllAsTouched();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n\tLogin Page\n\n\t\n\t\t\n\t\t\n\t\t\tUsername:\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tUsername is required\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tUsername must be at least 4 characters\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\n\t\t\tPassword:\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tPassword is required\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\n\t\t\tEmail Information\n\n\t\t\t\n\t\t\t\tEmail Provider:\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\tFull Email:\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\tPlease enter a valid email\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\tEmail must match its provider\n\t\t\n\n\t\tSubmit\n\t\n\n\tForm Status: {{ loginForm.status }}\n\n\n\n\n\tForm Data:\n\tUsername = {{ loginForm.get(\"username\")?.value || \"\" }}\n\tPassword = {{ loginForm.get(\"password\")?.value || \"\" }}\n\tEmail Provider = {{ loginForm.get(\"email.provider\")?.value || \"\" }}\n\tEmail = {{ loginForm.get(\"email.emailString\")?.value || \"\" }}\n\n\n\n\tComplete the form to see data\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tLogin Page\t\t\t\t\t\t\t\tUsername:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUsername is required\t\t\t\t\t\t\t\t\t\t\t\t\tUsername must be at least 4 characters\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPassword:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPassword is required\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEmail Information\t\t\t\t\t\t\tEmail Provider:\t\t\t\t\t\t\t\t\t\t\t\t\t\tFull Email:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPlease enter a valid email\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEmail must match its provider\t\t\t\tSubmit\t\tForm Status: {{ loginForm.status }}\tForm Data:\tUsername = {{ loginForm.get(\"username\")?.value || \"\" }}\tPassword = {{ loginForm.get(\"password\")?.value || \"\" }}\tEmail Provider = {{ loginForm.get(\"email.provider\")?.value || \"\" }}\tEmail = {{ loginForm.get(\"email.emailString\")?.value || \"\" }}\tComplete the form to see data'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loginUrl\n                            \n                            \n                                    Private\n                                registerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.loginUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/login.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.registerUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/login.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\ninterface AuthResponse {\n\tuser: User;\n\ttoken: string;\n\terror?: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LoginService {\n\tprivate loginUrl = environment.loginUrl;\n\tprivate registerUrl = environment.registerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\tlogin(email: string, password: string): Observable {\n\t\treturn this.http.post(`${this.loginUrl}`, {\n\t\t\temail,\n\t\t\tpassword,\n\t\t});\n\t}\n\tregister(userData: Partial): Observable {\n\t\treturn this.http.post(\n\t\t\t`${this.register}`,\n\t\t\tuserData\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                role\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, username: string, email: string, firstName: string, lastName: string, role: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        role\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\tconstructor(\n\t\tpublic id: number,\n\t\tpublic username: string,\n\t\tpublic email: string,\n\t\tpublic firstName: string,\n\t\tpublic lastName: string,\n\t\tpublic role: string\n\t) {\n\t\t\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserExist.html":{"url":"interfaces/UserExist.html","title":"interface - UserExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Response interface for user existence check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userExists\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userExists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userExists:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\ninterface UserGetter {\n\tuser: User\n\terrors?: string\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserGetter.html":{"url":"interfaces/UserGetter.html","title":"interface - UserGetter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserGetter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\ninterface UserGetter {\n\tuser: User\n\terrors?: string\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGetterService.html":{"url":"injectables/UserGetterService.html","title":"injectable - UserGetterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserGetterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-getter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userCheckerUrl\n                            \n                            \n                                    Private\n                                userInfoUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                userExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-getter.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        userExists\n                        \n                    \n                \n            \n            \n                \nuserExists(email: string | null, username: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-getter.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userCheckerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.userCheckerUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/user-getter.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userInfoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.userInfoUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/user-getter.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n/**\n * Response interface for user existence check\n * @property userExists - Indicates if a user with the given email/username exists\n */\ninterface UserExist {\n\tuserExists: boolean;\n}\ninterface UserGetter {\n\tuser: User\n\terrors?: string\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class UserGetterService {\n\tprivate userInfoUrl: string = environment.userInfoUrl;\n\tprivate userCheckerUrl: string = environment.userCheckerUrl;\n\tconstructor(private http: HttpClient) {}\n\n\tuserExists(\n\t\temail: string | null,\n\t\tusername: string | null\n\t): Observable {\n\t\tif (email) {\n\t\t\treturn this.http.get(`${this.userCheckerUrl}/${email}`);\n\t\t} else if (username) {\n\t\t\treturn this.http.get(\n\t\t\t\t`${this.userCheckerUrl}/${username}`\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Observable((observer) => {\n\t\t\t\tobserver.next({ userExists: false });\n\t\t\t\tobserver.complete();\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/login-page/login-page.component.ts\n            \n            function\n            EmailProviderValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            injectable\n            UserGetterService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            interface\n            UserExist\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/user-getter.service.ts\n            \n            interface\n            UserGetter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/ssr : ^19.2.1\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EmailProviderValidator   (src/.../login-page.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/login-page/login-page.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmailProviderValidator\n                        \n                    \n                \n            \n            \n                \nEmailProviderValidator(email: string, provider: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                provider\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontEnd\nThis project was generated using Angular CLI version 19.2.1.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproviders: [\n\t\tprovideZoneChangeDetection({ eventCoalescing: true }),\n\t\tprovideRouter(routes),\n\t\tprovideClientHydration(withEventReplay()),\n\t],\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproduction: false,\n\tauthUrl: 'localhost:8000',\n\tloginUrl: 'localhost:8000/login',\n\tregisterUrl: 'localhost:8000/register',\n\tuserInfoUrl: 'localhost:8000/user/me',\n\tuserCheckerUrl: 'localhost:8000/user',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproduction: true,\n\tauthUrl: 'localhost:8000',\n\tloginUrl: 'localhost:8000/login',\n\tregisterUrl: 'localhost:8000/register',\n\tuserInfoUrl: 'localhost:8000/user/me',\n\tuserCheckerUrl: 'localhost:8000/user',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
